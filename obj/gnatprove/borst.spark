{
  "spark": [
    {
      "name": "borst",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.AddRod",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 71
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.RemoveRod",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 80
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.DoMaintenance",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 89
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.StartEngine",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 97
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.StopEngine",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 104
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.AddTrainCar",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 110
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.RemoveTrainCar",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 116
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.GetMax",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 121
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.GetHeat",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 124
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.GetCurrentSpeed",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 127
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.EmergencyStop",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 130
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.HeatL",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 134
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.FillTank",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 140
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.TankL",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 145
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.MaintL",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 150
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.SpeedL",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 155
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.ChangeCarriageType",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 161
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.AddPassenger",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 166
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.RemovePassenger",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 176
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.AddFreight",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 184
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.RemoveFreight",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 194
        }
      ],
      "spark": "all"
    },
    {
      "name": "borst.CalcWeight",
      "sloc": [
        {
          "file": "borst.ads",
          "line": 203
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "borst.ads",
      "line": 105,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.StopEngine",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 104
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 106,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.StopEngine",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 104
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 131,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.EmergencyStop",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 130
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 185,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 186,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 162,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.ChangeCarriageType",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 161
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 90,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.DoMaintenance",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 89
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 91,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.DoMaintenance",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 89
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 167,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 168,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 146,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.TankL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 145
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 151,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.MaintL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 150
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 156,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.SpeedL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 155
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.adb",
      "line": 226,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 72,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 71
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 73,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 71
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.adb",
      "line": 79,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "borst.GetHeat",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 124
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 195,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 196,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 141,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.FillTank",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 140
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 177,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 178,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 135,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.HeatL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 134
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 81,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 80
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 82,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 80
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 98,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.StartEngine",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 97
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 99,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.StartEngine",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 97
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 111,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 110
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 112,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.AddTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 110
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "borst.ads",
      "line": 117,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 116
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    }
  ],
  "proof": [
    {
      "file": "borst.adb",
      "line": 7,
      "col": 67,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 71
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 66,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 7,
      "check_col": 67,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 8,
      "col": 81,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 71
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 72,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 8,
      "check_col": 81,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 78,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.AddRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 71
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 78,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 18,
      "col": 67,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 80
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 66,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 18,
      "check_col": 67,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 19,
      "col": 81,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 80
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 73,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 19,
      "check_col": 81,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 87,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveRod",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 80
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 87,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 94,
      "col": 13,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.DoMaintenance",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 89
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 94,
      "check_col": 13,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 3,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 102,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.StartEngine",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 97
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 102,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 108,
      "col": 13,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.StopEngine",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 104
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 108,
      "check_col": 13,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 60,
      "col": 54,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 110
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 60,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 60,
      "check_col": 54,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 114,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.AddTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 110
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 20,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 114,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 67,
      "col": 54,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 116
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 54,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 67,
      "check_col": 54,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 119,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveTrainCar",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 116
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 20,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 119,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 75,
      "col": 39,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetMax",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 121
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 75,
      "check_col": 39,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 75,
      "col": 24,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetMax",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 121
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 75,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 75,
      "col": 24,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetMax",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 121
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 75,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 122,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.GetMax",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 121
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 122,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 81,
      "col": 64,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetHeat",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 124
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 107,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 81,
      "check_col": 64,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 81,
      "col": 105,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetHeat",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 124
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 107,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 81,
      "check_col": 105,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 81,
      "col": 105,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetHeat",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 124
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 937,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 81,
      "check_col": 105,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 125,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.GetHeat",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 124
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 125,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 87,
      "col": 43,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetCurrentSpeed",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 127
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 87,
      "check_col": 43,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 87,
      "col": 65,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetCurrentSpeed",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 127
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 87,
      "check_col": 65,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 87,
      "col": 110,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetCurrentSpeed",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 127
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 87,
      "check_col": 110,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 87,
      "col": 92,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetCurrentSpeed",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 127
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 336,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 87,
      "check_col": 92,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 87,
      "col": 92,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.GetCurrentSpeed",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 127
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 336,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 87,
      "check_col": 92,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 128,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.GetCurrentSpeed",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 127
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 128,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 137,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.HeatL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 134
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 90,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 137,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 143,
      "col": 13,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.FillTank",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 140
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 143,
      "check_col": 13,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 123,
      "col": 74,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.TankL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 145
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 58,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 123,
      "check_col": 74,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 148,
      "col": 13,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.TankL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 145
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 126,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 148,
      "check_col": 13,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 139,
      "col": 81,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.MaintL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 150
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 58,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 139,
      "check_col": 81,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 153,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.MaintL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 150
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 171,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 153,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 160,
      "col": 16,
      "rule": "VC_PRECONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.SpeedL",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 155
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 160,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 4,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 176,
      "col": 30,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.ChangeCarriageType",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 161
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 176,
      "check_col": 30,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 182,
      "col": 30,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.ChangeCarriageType",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 161
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 182,
      "check_col": 30,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 164,
      "col": 13,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.ChangeCarriageType",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 161
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 55,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 109,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 164,
      "check_col": 13,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 194,
      "col": 58,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 194,
      "check_col": 58,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 194,
      "col": 67,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 172,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 194,
      "check_col": 67,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 194,
      "col": 29,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 194,
      "check_col": 29,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 174,
      "col": 36,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 174,
      "check_col": 36,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 174,
      "col": 113,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 174,
      "check_col": 113,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 174,
      "col": 80,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 229,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 174,
      "check_col": 80,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 171,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "medium",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 292,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 351,
              "time": 0
            },
            "Z3": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 171,
      "check_col": 26,
      "cntexmp": {
        "borst.ads": {
          "53": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => FREIGHT, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => FREIGHT, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ],
          "171": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => FREIGHT, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => FREIGHT, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 0,
      "how_proved": "prover"
    },
    {
      "file": "borst.ads",
      "line": 172,
      "col": 30,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "medium",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 292,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 351,
              "time": 0
            },
            "Z3": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 172,
      "check_col": 30,
      "cntexmp": {
        "borst.ads": {
          "53": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => FREIGHT, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => FREIGHT, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ],
          "172": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => FREIGHT, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => FREIGHT, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 1,
      "how_proved": "prover"
    },
    {
      "file": "borst.ads",
      "line": 172,
      "col": 106,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 172,
      "check_col": 106,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 172,
      "col": 73,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 168,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 172,
      "check_col": 73,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 174,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.AddPassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 166
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 41,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 174,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 202,
      "col": 55,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 202,
      "check_col": 55,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 202,
      "col": 64,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 64,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 202,
      "check_col": 64,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 202,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 202,
      "check_col": 26,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 201,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 201,
      "check_col": 26,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 182,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 182,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 182,
      "col": 91,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 182,
      "check_col": 91,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 182,
      "col": 57,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 182,
      "check_col": 57,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 180,
      "col": 22,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "medium",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 63,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 93,
              "time": 0
            },
            "Z3": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            },
            "altergo": {
              "result": "Unknown ()",
              "steps": -1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 180,
      "check_col": 22,
      "msg_id": 2,
      "how_proved": "prover"
    },
    {
      "file": "borst.ads",
      "line": 182,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.RemovePassenger",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 176
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 41,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 41,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 182,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 211,
      "col": 55,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 211,
      "check_col": 55,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 211,
      "col": 61,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 172,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 211,
      "check_col": 61,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 211,
      "col": 29,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 211,
      "check_col": 29,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 210,
      "col": 38,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 210,
      "check_col": 38,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 210,
      "col": 110,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 210,
      "check_col": 110,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 210,
      "col": 77,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 182,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 210,
      "check_col": 77,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 192,
      "col": 36,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 192,
      "check_col": 36,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 192,
      "col": 70,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 192,
      "check_col": 70,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 189,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "medium",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 306,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 398,
              "time": 0
            },
            "Z3": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 189,
      "check_col": 26,
      "cntexmp": {
        "borst.ads": {
          "53": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => PASSENGER, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => PASSENGER, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ],
          "189": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => PASSENGER, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => PASSENGER, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 3,
      "how_proved": "prover"
    },
    {
      "file": "borst.ads",
      "line": 191,
      "col": 30,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "medium",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 306,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 398,
              "time": 0
            },
            "Z3": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 191,
      "check_col": 30,
      "cntexmp": {
        "borst.ads": {
          "53": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => PASSENGER, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => PASSENGER, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ],
          "191": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => PASSENGER, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => PASSENGER, Cars => 10, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 4,
      "how_proved": "prover"
    },
    {
      "file": "borst.ads",
      "line": 191,
      "col": 102,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 191,
      "check_col": 102,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 191,
      "col": 69,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 168,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 191,
      "check_col": 69,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 192,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.AddFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 184
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 41,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 192,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 3,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 220,
      "col": 52,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 220,
      "check_col": 52,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 220,
      "col": 58,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 64,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 220,
      "check_col": 58,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 220,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 220,
      "check_col": 26,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 219,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 219,
      "check_col": 26,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 200,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 200,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 200,
      "col": 86,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 200,
      "check_col": 86,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 200,
      "col": 53,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 200,
      "check_col": 53,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 198,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "medium",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 85,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 123,
              "time": 0
            },
            "Z3": {
              "result": "Timeout",
              "steps": -1,
              "time": 0
            },
            "altergo": {
              "result": "Unknown ()",
              "steps": -1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 198,
      "check_col": 26,
      "cntexmp": {
        "borst.ads": {
          "53": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => PASSENGER, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => PASSENGER, Cars => 0, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ],
          "198": [
            {
              "name": "BorstMobile",
              "value": "(TrainType => PASSENGER, Generator => (Rods => 0, Powered => On, WaterTank => 0, Heat => 0, Maintenance => 0, MtnLight => GREEN, HeatLight => GREEN, WaterLight => GREEN), Cart => (Typtr => PASSENGER, Cars => 0, MaxSpeed => 0, Weight => 0, Cargo => 0, Voyagers => 0), CurSpeed => 0)",
              "kind": "variable"
            },
            {
              "name": "BorstMobile.Cart'Constrained",
              "value": "False",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 5,
      "how_proved": "prover"
    },
    {
      "file": "borst.ads",
      "line": 200,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.RemoveFreight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 194
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 40,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 41,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 57,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 200,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 4,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 229,
      "col": 80,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 74,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 229,
      "check_col": 80,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 229,
      "col": 59,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 58,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 229,
      "check_col": 59,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 229,
      "col": 99,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 229,
      "check_col": 99,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 229,
      "col": 86,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 89,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 229,
      "check_col": 86,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 229,
      "col": 86,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 89,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 229,
      "check_col": 86,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 231,
      "col": 80,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 84,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 231,
      "check_col": 80,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 231,
      "col": 59,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 66,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 231,
      "check_col": 59,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 231,
      "col": 99,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 77,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 231,
      "check_col": 99,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 231,
      "col": 109,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 231,
      "check_col": 109,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 231,
      "col": 86,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 231,
      "check_col": 86,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.adb",
      "line": 231,
      "col": 86,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 64,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.adb",
      "check_line": 231,
      "check_col": 86,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "borst.ads",
      "line": 204,
      "col": 12,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "borst.CalcWeight",
        "sloc": [
          {
            "file": "borst.ads",
            "line": 203
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 58,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "borst.ads",
      "check_line": 204,
      "check_col": 12,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.CalcWeight",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 203
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.CalcWeight",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 203
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.CalcWeight",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 203
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.StartEngine",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 97
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.StartEngine",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 97
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.StartEngine",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 97
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.AddPassenger",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 166
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.GetHeat",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 124
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.GetHeat",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 124
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.GetHeat",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 124
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.RemovePassenger",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 176
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.RemoveRod",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 80
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.DoMaintenance",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 89
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.RemoveRod",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 80
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.DoMaintenance",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 89
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.RemoveRod",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 80
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.AddRod",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 71
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.DoMaintenance",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 89
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.AddRod",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 71
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.AddRod",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 71
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.TankL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 145
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.TankL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 145
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetCurrentSpeed",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 127
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetHeat",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 124
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.TankL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 145
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 1
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.StopEngine",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 104
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.StopEngine",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 104
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.AddTrainCar",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 110
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.StopEngine",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 104
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.AddTrainCar",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 110
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.AddTrainCar",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 110
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.MaintL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 150
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.MaintL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 150
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.AddFreight",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 184
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.MaintL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 150
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.EmergencyStop",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 130
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.EmergencyStop",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 130
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.ChangeCarriageType",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 161
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.GetMax",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 121
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.ChangeCarriageType",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 161
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.GetMax",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 121
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.GetCurrentSpeed",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 127
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.RemoveTrainCar",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 116
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.ChangeCarriageType",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 161
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.GetMax",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 121
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.HeatL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 134
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.GetCurrentSpeed",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 127
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.RemoveTrainCar",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 116
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.HeatL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 134
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.GetCurrentSpeed",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 127
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.HeatL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 134
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.GetMax",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 121
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.RemoveTrainCar",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 116
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.AddRod",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 71
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.SpeedL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 155
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "borst.FillTank",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 140
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.AddRod",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 71
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.AddRod",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 71
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.AddRod",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 71
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.SpeedL",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 155
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.FillTank",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 140
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "borst.RemoveFreight",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 194
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "borst.CalcWeight",
            "sloc": [
              {
                "file": "borst.ads",
                "line": 203
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "borst.FillTank",
          "sloc": [
            {
              "file": "borst.ads",
              "line": 140
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "marking": 1.45400001201779E-03,
    "globals (basic)": 4.34199988376349E-04,
    "globals/properties (advanced)": 1.02269998751581E-03,
    "flow analysis": 7.75140002369881E-02,
    "codepeer results": 8.09999983175658E-06,
    "init_why_sections": 4.65699995402247E-04,
    "translation of standard": 2.50130007043481E-03,
    "translation of compilation unit": 3.55499014258385E-02,
    "proof": 1.55391514301300E+00
  }
}
