(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type short_short_integer =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_short_integer__ref =
  { mutable short_short_integer__content : short_short_integer }
 
 function short_short_integer__ref_short_short_integer__content__projection 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref_short_short_integer__content__projection
 
 meta "inline:no" function short_short_integer__ref_short_short_integer__content__projection
 
 val short_short_integer__havoc 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer__rep
 use        Standard__short_short_integer as Standard__short_short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__short_short_integer.short_short_integer) : int =
  (Standard__short_short_integer.short_short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__short_short_integer.short_short_integer, 
 predicate in_range = Standard__short_short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type short_integer =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_integer__ref =
  { mutable short_integer__content : short_integer }
 
 function short_integer__ref_short_integer__content__projection 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref_short_integer__content__projection
 
 meta "inline:no" function short_integer__ref_short_integer__content__projection
 
 val short_integer__havoc 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer__rep
 use        Standard__short_integer as Standard__short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__short_integer.short_integer) : int =
  (Standard__short_integer.short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__short_integer.short_integer, 
 predicate in_range = Standard__short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer__ref =
  { mutable integer__content : integer }
 
 function integer__ref_integer__content__projection 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref_integer__content__projection
 
 meta "inline:no" function integer__ref_integer__content__projection
 
 val integer__havoc 
   (x : integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
 use        Standard__integer as Standard__integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer.integer) : int =
  (Standard__integer.integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer.integer, 
 predicate in_range = Standard__integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type long_integer =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_integer__ref =
  { mutable long_integer__content : long_integer }
 
 function long_integer__ref_long_integer__content__projection 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref_long_integer__content__projection
 
 meta "inline:no" function long_integer__ref_long_integer__content__projection
 
 val long_integer__havoc 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer__rep
 use        Standard__long_integer as Standard__long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__long_integer.long_integer) : int =
  (Standard__long_integer.long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__long_integer.long_integer, 
 predicate in_range = Standard__long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type long_long_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 val constant first 
   : int
  ensures { result =  (( -9223372036854775808) : int) }
 
 val constant last 
   : int
  ensures { result =  (9223372036854775807 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_long_integer__ref =
  { mutable long_long_integer__content : long_long_integer }
 
 function long_long_integer__ref_long_long_integer__content__projection 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref_long_long_integer__content__projection
 
 meta "inline:no" function long_long_integer__ref_long_long_integer__content__projection
 
 val long_long_integer__havoc 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer__rep
 use        Standard__long_long_integer as Standard__long_long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__long_long_integer.long_long_integer) : int =
  (Standard__long_long_integer.long_long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__long_long_integer.long_long_integer, 
 predicate in_range = Standard__long_long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type natural =
  < range 0 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type natural__ref =
  { mutable natural__content : natural }
 
 function natural__ref_natural__content__projection 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref_natural__content__projection
 
 meta "inline:no" function natural__ref_natural__content__projection
 
 val natural__havoc 
   (x : natural__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
 use        Standard__natural as Standard__natural
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__natural.natural) : int =
  (Standard__natural.natural'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__natural.natural, 
 predicate in_range = Standard__natural.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type positive =
  < range 1 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type positive__ref =
  { mutable positive__content : positive }
 
 function positive__ref_positive__content__projection 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref_positive__content__projection
 
 meta "inline:no" function positive__ref_positive__content__projection
 
 val positive__havoc 
   (x : positive__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
 use        Standard__positive as Standard__positive
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__positive.positive) : int =
  (Standard__positive.positive'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__positive.positive, 
 predicate in_range = Standard__positive.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32

 type short_float 
 
 val constant first 
   : Float32.t
  ensures { result =  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t)) }
 
 val constant last 
   : Float32.t
  ensures { result =  (340282346638528859811704183484516925440.0:Float32.t) }
 
 predicate in_range 
   (x : Float32.t) =
  (Float32.t'isFinite x)
 val in_range 
   (x : Float32.t) : bool
  ensures { result <-> in_range (x : Float32.t) }
 
 clone export "ada__model".Static_Float32 with axiom .,
 type t = short_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_float__ref =
  { mutable short_float__content : short_float }
 
 function short_float__ref_short_float__content__projection 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref_short_float__content__projection
 
 meta "inline:no" function short_float__ref_short_float__content__projection
 
 val short_float__havoc 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float__rep
 use        Standard__short_float as Standard__short_float
 use        "_gnatprove_standard".Float32 as Float32
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Float32 with axiom .,
 type t = Standard__short_float.short_float, 
 predicate in_range = Standard__short_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32

 type float__ 
 
 val constant first 
   : Float32.t
  ensures { result =  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t)) }
 
 val constant last 
   : Float32.t
  ensures { result =  (340282346638528859811704183484516925440.0:Float32.t) }
 
 predicate in_range 
   (x : Float32.t) =
  (Float32.t'isFinite x)
 val in_range 
   (x : Float32.t) : bool
  ensures { result <-> in_range (x : Float32.t) }
 
 clone export "ada__model".Static_Float32 with axiom .,
 type t = float__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type float____ref =
  { mutable float____content : float__ }
 
 function float____ref_float____content__projection 
   (a : float____ref) : float__ =
  a.float____content
 
 meta "model_projection" function float____ref_float____content__projection
 
 meta "inline:no" function float____ref_float____content__projection
 
 val float____havoc 
   (x : float____ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float__rep
 use        Standard__float as Standard__float
 use        "_gnatprove_standard".Float32 as Float32
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Float32 with axiom .,
 type t = Standard__float.float__, 
 predicate in_range = Standard__float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float64 as Float64

 type long_float 
 
 val constant first 
   : Float64.t
  ensures { result =  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)) }
 
 val constant last 
   : Float64.t
  ensures { result =  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t) }
 
 predicate in_range 
   (x : Float64.t) =
  (Float64.t'isFinite x)
 val in_range 
   (x : Float64.t) : bool
  ensures { result <-> in_range (x : Float64.t) }
 
 clone export "ada__model".Static_Float64 with axiom .,
 type t = long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_float__ref =
  { mutable long_float__content : long_float }
 
 function long_float__ref_long_float__content__projection 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref_long_float__content__projection
 
 meta "inline:no" function long_float__ref_long_float__content__projection
 
 val long_float__havoc 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float__rep
 use        Standard__long_float as Standard__long_float
 use        "_gnatprove_standard".Float64 as Float64
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Float64 with axiom .,
 type t = Standard__long_float.long_float, 
 predicate in_range = Standard__long_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type character 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (255 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type character__ref =
  { mutable character__content : character }
 
 function character__ref_character__content__projection 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref_character__content__projection
 
 meta "inline:no" function character__ref_character__content__projection
 
 val character__havoc 
   (x : character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
 use        Standard__character as Standard__character
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__character.character, 
 predicate in_range = Standard__character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type wide_character 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (65535 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_character__ref =
  { mutable wide_character__content : wide_character }
 
 function wide_character__ref_wide_character__content__projection 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref_wide_character__content__projection
 
 meta "inline:no" function wide_character__ref_wide_character__content__projection
 
 val wide_character__havoc 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character__rep
 use        Standard__wide_character as Standard__wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__wide_character.wide_character, 
 predicate in_range = Standard__wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type wide_wide_character 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_wide_character__ref =
  { mutable wide_wide_character__content : wide_wide_character }
 
 function wide_wide_character__ref_wide_wide_character__content__projection 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref_wide_wide_character__content__projection
 
 meta "inline:no" function wide_wide_character__ref_wide_wide_character__content__projection
 
 val wide_wide_character__havoc 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character__rep
 use        Standard__wide_wide_character as Standard__wide_wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__wide_wide_character.wide_wide_character, 
 predicate in_range = Standard__wide_wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep

 function index_I1_one 
   : int =
  (1 : int)
 
 type component_type =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with axiom .,
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_91   : int.
   (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
    ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) )
 val bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool
  ensures { result = bool_eq (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) }
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_91   : int.
    (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
     ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Array__Int__Standard__character as Array__Int__Standard__character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "_gnatprove_standard".Array__1__Concat with axiom .,
 type component_type = Array__Int__Standard__character.component_type, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__character_Comp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with axiom .,
 type component_type = Array__Int__Standard__character.component_type, 
 function to_rep = Standard__character__rep.to_rep, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get, 
 function bool_eq = Array__Int__Standard__character.bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Standard__positive as Standard__positive
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__integer__rep as Standard__integer__rep

 type component_type =
  Standard__character.character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline:no" function to_array
 
 meta "model_projection" function first
 
 meta "inline:no" function first
 
 meta "model_projection" function last
 
 meta "inline:no" function last
 
 type string__ref =
  { mutable string__content : string }
 
 function string__ref_string__content__projection 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref_string__content__projection
 
 meta "inline:no" function string__ref_string__content__projection
 
 val string__havoc 
   (x : string__ref) : unit
  writes {x}

end

(* Module defining to_string/of_string functions, created in Gnat2Why.Types.Translate_Type *)
module Standard_String__Img
 use        "int".Int
 use        Standard__string as Standard__string
 use        "_gnatprove_standard".Main
 use        "int".Int

 val function to_string 
   (x : Main.__image) (s : int) : Standard__string.string
 
 val function from_string 
   (x : Standard__string.string) : Main.__image
 
 axiom to_string__first :
  (forall x   : Main.__image.
  (forall s   : int [(to_string x s)].
   ((Standard__string.first (to_string x s)) = (1 : int))))
 
 axiom to_string__length :
  (forall x   : Main.__image.
  (forall s   : int [(to_string x s)].
   ( (s >= (0 : int)) -> ((Standard__string.length (to_string x s)) <= s) )))

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_character as Standard__wide_character
 use        Standard__wide_character__rep as Standard__wide_character__rep

 function index_I1_one 
   : int =
  (1 : int)
 
 type component_type =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with axiom .,
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_98   : int.
   (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
    ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) )
 val bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool
  ensures { result = bool_eq (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) }
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_98   : int.
    (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
     ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_character__Concat
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Array__Int__Standard__wide_character as Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "_gnatprove_standard".Array__1__Concat with axiom .,
 type component_type = Array__Int__Standard__wide_character.component_type, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_character_Comp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_character__rep as Standard__wide_character__rep
 use        Array__Int__Standard__wide_character as Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with axiom .,
 type component_type = Array__Int__Standard__wide_character.component_type, 
 function to_rep = Standard__wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_character.bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Standard__positive as Standard__positive
 use        Standard__wide_character as Standard__wide_character
 use        Standard__integer__rep as Standard__integer__rep
 use        Array__Int__Standard__wide_character as Array__Int__Standard__wide_character

 type component_type =
  Standard__wide_character.wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with axiom .,
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline:no" function to_array
 
 meta "model_projection" function first
 
 meta "inline:no" function first
 
 meta "model_projection" function last
 
 meta "inline:no" function last
 
 type wide_string__ref =
  { mutable wide_string__content : wide_string }
 
 function wide_string__ref_wide_string__content__projection 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref_wide_string__content__projection
 
 meta "inline:no" function wide_string__ref_wide_string__content__projection
 
 val wide_string__havoc 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_wide_character as Standard__wide_wide_character
 use        Standard__wide_wide_character__rep as Standard__wide_wide_character__rep

 function index_I1_one 
   : int =
  (1 : int)
 
 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with axiom .,
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_105   : int.
   (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
    ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) )
 val bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool
  ensures { result = bool_eq (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) }
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_105   : int.
    (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
     ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_wide_character__Concat
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Array__Int__Standard__wide_wide_character as Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "_gnatprove_standard".Array__1__Concat with axiom .,
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_wide_character_Comp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_wide_character__rep as Standard__wide_wide_character__rep
 use        Array__Int__Standard__wide_wide_character as Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with axiom .,
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 function to_rep = Standard__wide_wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_wide_character.bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Standard__positive as Standard__positive
 use        Standard__wide_wide_character as Standard__wide_wide_character
 use        Standard__integer__rep as Standard__integer__rep
 use        Array__Int__Standard__wide_wide_character as Array__Int__Standard__wide_wide_character

 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with axiom .,
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline:no" function to_array
 
 meta "model_projection" function first
 
 meta "inline:no" function first
 
 meta "model_projection" function last
 
 meta "inline:no" function last
 
 type wide_wide_string__ref =
  { mutable wide_wide_string__content : wide_wide_string }
 
 function wide_wide_string__ref_wide_wide_string__content__projection 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref_wide_wide_string__content__projection
 
 meta "inline:no" function wide_wide_string__ref_wide_wide_string__content__projection
 
 val wide_wide_string__havoc 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for fixed-point operation for type at system.ads:1, created in Why.Gen.Scalars.Create_Fixed_Point_Theory_If_Needed *)
module Fixed_Point__1_1000000000
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 function num_small 
   : int =
  (1 : int)
 
 function den_small 
   : int =
  (1000000000 : int)
 
 clone export "ada__model".Fixed_Point_Rep with axiom .,
 function num_small = num_small, 
 function den_small = den_small

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main

 type duration 
 
 val constant num_small 
   : Main.__fixed
  ensures { result =  (1 : int) }
 
 val constant den_small 
   : Main.__fixed
  ensures { result =  (1000000000 : int) }
 
 val constant first 
   : Main.__fixed
  ensures { result =  ( ( -9223372036854775808 ) : int ) }
 
 val constant last 
   : Main.__fixed
  ensures { result =  ( 9223372036854775807 : int ) }
 
 predicate in_range 
   (x : Main.__fixed) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : Main.__fixed) : bool
  ensures { result <-> in_range (x : Main.__fixed) }
 
 clone export "ada__model".Static_Fixed_Point with axiom .,
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type duration__ref =
  { mutable duration__content : duration }
 
 function duration__ref_duration__content__projection 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref_duration__content__projection
 
 meta "inline:no" function duration__ref_duration__content__projection
 
 val duration__havoc 
   (x : duration__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration__rep
 use        Standard__duration as Standard__duration
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Fixed with axiom .,
 type t = Standard__duration.duration, 
 predicate in_range = Standard__duration.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_8 =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_8__ref =
  { mutable integer_8__content : integer_8 }
 
 function integer_8__ref_integer_8__content__projection 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref_integer_8__content__projection
 
 meta "inline:no" function integer_8__ref_integer_8__content__projection
 
 val integer_8__havoc 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8__rep
 use        Standard__integer_8 as Standard__integer_8
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_8.integer_8) : int =
  (Standard__integer_8.integer_8'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_8.integer_8, 
 predicate in_range = Standard__integer_8.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_16 =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_16__ref =
  { mutable integer_16__content : integer_16 }
 
 function integer_16__ref_integer_16__content__projection 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref_integer_16__content__projection
 
 meta "inline:no" function integer_16__ref_integer_16__content__projection
 
 val integer_16__havoc 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16__rep
 use        Standard__integer_16 as Standard__integer_16
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_16.integer_16) : int =
  (Standard__integer_16.integer_16'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_16.integer_16, 
 predicate in_range = Standard__integer_16.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_32 =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_32__ref =
  { mutable integer_32__content : integer_32 }
 
 function integer_32__ref_integer_32__content__projection 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref_integer_32__content__projection
 
 meta "inline:no" function integer_32__ref_integer_32__content__projection
 
 val integer_32__havoc 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32__rep
 use        Standard__integer_32 as Standard__integer_32
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_32.integer_32) : int =
  (Standard__integer_32.integer_32'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_32.integer_32, 
 predicate in_range = Standard__integer_32.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_64 =
  < range -9223372036854775808 9223372036854775807 >
 
 val constant first 
   : int
  ensures { result =  (( -9223372036854775808) : int) }
 
 val constant last 
   : int
  ensures { result =  (9223372036854775807 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_64__ref =
  { mutable integer_64__content : integer_64 }
 
 function integer_64__ref_integer_64__content__projection 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref_integer_64__content__projection
 
 meta "inline:no" function integer_64__ref_integer_64__content__projection
 
 val integer_64__havoc 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64__rep
 use        Standard__integer_64 as Standard__integer_64
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_64.integer_64) : int =
  (Standard__integer_64.integer_64'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_64.integer_64, 
 predicate in_range = Standard__integer_64.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type universal_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 val constant first 
   : int
  ensures { result =  (( -9223372036854775808) : int) }
 
 val constant last 
   : int
  ensures { result =  (9223372036854775807 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type universal_integer__ref =
  { mutable universal_integer__content : universal_integer }
 
 function universal_integer__ref_universal_integer__content__projection 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref_universal_integer__content__projection
 
 meta "inline:no" function universal_integer__ref_universal_integer__content__projection
 
 val universal_integer__havoc 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer__rep
 use        Standard__universal_integer as Standard__universal_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__universal_integer.universal_integer) : int =
  (Standard__universal_integer.universal_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__universal_integer.universal_integer, 
 predicate in_range = Standard__universal_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TcontrolrodB" defined at borst.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Borst__TcontrolrodB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tcontrolrodB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tcontrolrodB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tcontrolrodB__ref =
  { mutable tcontrolrodB__content : tcontrolrodB }
 
 function tcontrolrodB__ref_tcontrolrodB__content__projection 
   (a : tcontrolrodB__ref) : tcontrolrodB =
  a.tcontrolrodB__content
 
 meta "model_projection" function tcontrolrodB__ref_tcontrolrodB__content__projection
 
 meta "inline:no" function tcontrolrodB__ref_tcontrolrodB__content__projection
 
 val tcontrolrodB__havoc 
   (x : tcontrolrodB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TcontrolrodB" defined at borst.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Borst__TcontrolrodB__rep
 use        Borst__TcontrolrodB as Borst__TcontrolrodB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TcontrolrodB.tcontrolrodB) : int =
  (Borst__TcontrolrodB.tcontrolrodB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TcontrolrodB.tcontrolrodB, 
 predicate in_range = Borst__TcontrolrodB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "controlrod" defined at borst.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Borst__controlrod
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type controlrod =
  < range 1 5 >
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (5 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = controlrod, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type controlrod__ref =
  { mutable controlrod__content : controlrod }
 
 function controlrod__ref_controlrod__content__projection 
   (a : controlrod__ref) : controlrod =
  a.controlrod__content
 
 meta "model_projection" function controlrod__ref_controlrod__content__projection
 
 meta "inline:no" function controlrod__ref_controlrod__content__projection
 
 val controlrod__havoc 
   (x : controlrod__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "controlrod" defined at borst.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Borst__controlrod__rep
 use        Borst__controlrod as Borst__controlrod
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__controlrod.controlrod) : int =
  (Borst__controlrod.controlrod'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__controlrod.controlrod, 
 predicate in_range = Borst__controlrod.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TenginetempB" defined at borst.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Borst__TenginetempB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tenginetempB =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tenginetempB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tenginetempB__ref =
  { mutable tenginetempB__content : tenginetempB }
 
 function tenginetempB__ref_tenginetempB__content__projection 
   (a : tenginetempB__ref) : tenginetempB =
  a.tenginetempB__content
 
 meta "model_projection" function tenginetempB__ref_tenginetempB__content__projection
 
 meta "inline:no" function tenginetempB__ref_tenginetempB__content__projection
 
 val tenginetempB__havoc 
   (x : tenginetempB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TenginetempB" defined at borst.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Borst__TenginetempB__rep
 use        Borst__TenginetempB as Borst__TenginetempB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TenginetempB.tenginetempB) : int =
  (Borst__TenginetempB.tenginetempB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TenginetempB.tenginetempB, 
 predicate in_range = Borst__TenginetempB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "enginetemp" defined at borst.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Borst__enginetemp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type enginetemp =
  < range 0 2500 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2500 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = enginetemp, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type enginetemp__ref =
  { mutable enginetemp__content : enginetemp }
 
 function enginetemp__ref_enginetemp__content__projection 
   (a : enginetemp__ref) : enginetemp =
  a.enginetemp__content
 
 meta "model_projection" function enginetemp__ref_enginetemp__content__projection
 
 meta "inline:no" function enginetemp__ref_enginetemp__content__projection
 
 val enginetemp__havoc 
   (x : enginetemp__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "enginetemp" defined at borst.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Borst__enginetemp__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__enginetemp.enginetemp) : int =
  (Borst__enginetemp.enginetemp'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__enginetemp.enginetemp, 
 predicate in_range = Borst__enginetemp.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TspeedB" defined at borst.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Borst__TspeedB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tspeedB =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tspeedB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tspeedB__ref =
  { mutable tspeedB__content : tspeedB }
 
 function tspeedB__ref_tspeedB__content__projection 
   (a : tspeedB__ref) : tspeedB =
  a.tspeedB__content
 
 meta "model_projection" function tspeedB__ref_tspeedB__content__projection
 
 meta "inline:no" function tspeedB__ref_tspeedB__content__projection
 
 val tspeedB__havoc 
   (x : tspeedB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TspeedB" defined at borst.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Borst__TspeedB__rep
 use        Borst__TspeedB as Borst__TspeedB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TspeedB.tspeedB) : int =
  (Borst__TspeedB.tspeedB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TspeedB.tspeedB, 
 predicate in_range = Borst__TspeedB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "speed" defined at borst.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Borst__speed
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type speed =
  < range 0 250 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (250 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = speed, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type speed__ref =
  { mutable speed__content : speed }
 
 function speed__ref_speed__content__projection 
   (a : speed__ref) : speed =
  a.speed__content
 
 meta "model_projection" function speed__ref_speed__content__projection
 
 meta "inline:no" function speed__ref_speed__content__projection
 
 val speed__havoc 
   (x : speed__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "speed" defined at borst.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Borst__speed__rep
 use        Borst__speed as Borst__speed
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__speed.speed) : int =
  (Borst__speed.speed'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__speed.speed, 
 predicate in_range = Borst__speed.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TlevelB" defined at borst.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Borst__TlevelB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tlevelB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tlevelB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tlevelB__ref =
  { mutable tlevelB__content : tlevelB }
 
 function tlevelB__ref_tlevelB__content__projection 
   (a : tlevelB__ref) : tlevelB =
  a.tlevelB__content
 
 meta "model_projection" function tlevelB__ref_tlevelB__content__projection
 
 meta "inline:no" function tlevelB__ref_tlevelB__content__projection
 
 val tlevelB__havoc 
   (x : tlevelB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TlevelB" defined at borst.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Borst__TlevelB__rep
 use        Borst__TlevelB as Borst__TlevelB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TlevelB.tlevelB) : int =
  (Borst__TlevelB.tlevelB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TlevelB.tlevelB, 
 predicate in_range = Borst__TlevelB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "level" defined at borst.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Borst__level
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type level =
  < range 0 10 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (10 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = level, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type level__ref =
  { mutable level__content : level }
 
 function level__ref_level__content__projection 
   (a : level__ref) : level =
  a.level__content
 
 meta "model_projection" function level__ref_level__content__projection
 
 meta "inline:no" function level__ref_level__content__projection
 
 val level__havoc 
   (x : level__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "level" defined at borst.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Borst__level__rep
 use        Borst__level as Borst__level
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__level.level) : int =
  (Borst__level.level'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__level.level, 
 predicate in_range = Borst__level.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "power" defined at borst.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Borst__power
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type power 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (1 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = power, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type power__ref =
  { mutable power__content : power }
 
 function power__ref_power__content__projection 
   (a : power__ref) : power =
  a.power__content
 
 meta "model_projection" function power__ref_power__content__projection
 
 meta "inline:no" function power__ref_power__content__projection
 
 val power__havoc 
   (x : power__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "power" defined at borst.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Borst__power__rep
 use        Borst__power as Borst__power
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__power.power, 
 predicate in_range = Borst__power.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TlastmaintainedB" defined at borst.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Borst__TlastmaintainedB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tlastmaintainedB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tlastmaintainedB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tlastmaintainedB__ref =
  { mutable tlastmaintainedB__content : tlastmaintainedB }
 
 function tlastmaintainedB__ref_tlastmaintainedB__content__projection 
   (a : tlastmaintainedB__ref) : tlastmaintainedB =
  a.tlastmaintainedB__content
 
 meta "model_projection" function tlastmaintainedB__ref_tlastmaintainedB__content__projection
 
 meta "inline:no" function tlastmaintainedB__ref_tlastmaintainedB__content__projection
 
 val tlastmaintainedB__havoc 
   (x : tlastmaintainedB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TlastmaintainedB" defined at borst.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Borst__TlastmaintainedB__rep
 use        Borst__TlastmaintainedB as Borst__TlastmaintainedB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TlastmaintainedB.tlastmaintainedB) : int =
  (Borst__TlastmaintainedB.tlastmaintainedB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TlastmaintainedB.tlastmaintainedB, 
 predicate in_range = Borst__TlastmaintainedB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "lastmaintained" defined at borst.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Borst__lastmaintained
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type lastmaintained =
  < range 0 100 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (100 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = lastmaintained, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type lastmaintained__ref =
  { mutable lastmaintained__content : lastmaintained }
 
 function lastmaintained__ref_lastmaintained__content__projection 
   (a : lastmaintained__ref) : lastmaintained =
  a.lastmaintained__content
 
 meta "model_projection" function lastmaintained__ref_lastmaintained__content__projection
 
 meta "inline:no" function lastmaintained__ref_lastmaintained__content__projection
 
 val lastmaintained__havoc 
   (x : lastmaintained__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "lastmaintained" defined at borst.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Borst__lastmaintained__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__lastmaintained.lastmaintained) : int =
  (Borst__lastmaintained.lastmaintained'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__lastmaintained.lastmaintained, 
 predicate in_range = Borst__lastmaintained.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "light" defined at borst.ads:18, created in Gnat2Why.Types.Translate_Type *)
module Borst__light
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type light 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = light, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type light__ref =
  { mutable light__content : light }
 
 function light__ref_light__content__projection 
   (a : light__ref) : light =
  a.light__content
 
 meta "model_projection" function light__ref_light__content__projection
 
 meta "inline:no" function light__ref_light__content__projection
 
 val light__havoc 
   (x : light__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "light" defined at borst.ads:18, created in Gnat2Why.Types.Translate_Type *)
module Borst__light__rep
 use        Borst__light as Borst__light
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__light.light, 
 predicate in_range = Borst__light.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "cartype" defined at borst.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Borst__cartype
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type cartype 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (1 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = cartype, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type cartype__ref =
  { mutable cartype__content : cartype }
 
 function cartype__ref_cartype__content__projection 
   (a : cartype__ref) : cartype =
  a.cartype__content
 
 meta "model_projection" function cartype__ref_cartype__content__projection
 
 meta "inline:no" function cartype__ref_cartype__content__projection
 
 val cartype__havoc 
   (x : cartype__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "cartype" defined at borst.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Borst__cartype__rep
 use        Borst__cartype as Borst__cartype
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__cartype.cartype, 
 predicate in_range = Borst__cartype.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TmassB" defined at borst.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Borst__TmassB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tmassB =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tmassB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tmassB__ref =
  { mutable tmassB__content : tmassB }
 
 function tmassB__ref_tmassB__content__projection 
   (a : tmassB__ref) : tmassB =
  a.tmassB__content
 
 meta "model_projection" function tmassB__ref_tmassB__content__projection
 
 meta "inline:no" function tmassB__ref_tmassB__content__projection
 
 val tmassB__havoc 
   (x : tmassB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TmassB" defined at borst.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Borst__TmassB__rep
 use        Borst__TmassB as Borst__TmassB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TmassB.tmassB) : int =
  (Borst__TmassB.tmassB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TmassB.tmassB, 
 predicate in_range = Borst__TmassB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "mass" defined at borst.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Borst__mass
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type mass =
  < range 190 1700 >
 
 val constant first 
   : int
  ensures { result =  (190 : int) }
 
 val constant last 
   : int
  ensures { result =  (1700 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = mass, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type mass__ref =
  { mutable mass__content : mass }
 
 function mass__ref_mass__content__projection 
   (a : mass__ref) : mass =
  a.mass__content
 
 meta "model_projection" function mass__ref_mass__content__projection
 
 meta "inline:no" function mass__ref_mass__content__projection
 
 val mass__havoc 
   (x : mass__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "mass" defined at borst.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Borst__mass__rep
 use        Borst__mass as Borst__mass
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__mass.mass) : int =
  (Borst__mass.mass'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__mass.mass, 
 predicate in_range = Borst__mass.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TnumcarriagesB" defined at borst.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Borst__TnumcarriagesB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tnumcarriagesB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tnumcarriagesB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tnumcarriagesB__ref =
  { mutable tnumcarriagesB__content : tnumcarriagesB }
 
 function tnumcarriagesB__ref_tnumcarriagesB__content__projection 
   (a : tnumcarriagesB__ref) : tnumcarriagesB =
  a.tnumcarriagesB__content
 
 meta "model_projection" function tnumcarriagesB__ref_tnumcarriagesB__content__projection
 
 meta "inline:no" function tnumcarriagesB__ref_tnumcarriagesB__content__projection
 
 val tnumcarriagesB__havoc 
   (x : tnumcarriagesB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TnumcarriagesB" defined at borst.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Borst__TnumcarriagesB__rep
 use        Borst__TnumcarriagesB as Borst__TnumcarriagesB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TnumcarriagesB.tnumcarriagesB) : int =
  (Borst__TnumcarriagesB.tnumcarriagesB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TnumcarriagesB.tnumcarriagesB, 
 predicate in_range = Borst__TnumcarriagesB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "numcarriages" defined at borst.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Borst__numcarriages
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type numcarriages =
  < range 0 10 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (10 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = numcarriages, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type numcarriages__ref =
  { mutable numcarriages__content : numcarriages }
 
 function numcarriages__ref_numcarriages__content__projection 
   (a : numcarriages__ref) : numcarriages =
  a.numcarriages__content
 
 meta "model_projection" function numcarriages__ref_numcarriages__content__projection
 
 meta "inline:no" function numcarriages__ref_numcarriages__content__projection
 
 val numcarriages__havoc 
   (x : numcarriages__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "numcarriages" defined at borst.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Borst__numcarriages__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__numcarriages.numcarriages) : int =
  (Borst__numcarriages.numcarriages'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__numcarriages.numcarriages, 
 predicate in_range = Borst__numcarriages.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TfreightweightB" defined at borst.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Borst__TfreightweightB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tfreightweightB =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tfreightweightB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tfreightweightB__ref =
  { mutable tfreightweightB__content : tfreightweightB }
 
 function tfreightweightB__ref_tfreightweightB__content__projection 
   (a : tfreightweightB__ref) : tfreightweightB =
  a.tfreightweightB__content
 
 meta "model_projection" function tfreightweightB__ref_tfreightweightB__content__projection
 
 meta "inline:no" function tfreightweightB__ref_tfreightweightB__content__projection
 
 val tfreightweightB__havoc 
   (x : tfreightweightB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TfreightweightB" defined at borst.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Borst__TfreightweightB__rep
 use        Borst__TfreightweightB as Borst__TfreightweightB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TfreightweightB.tfreightweightB) : int =
  (Borst__TfreightweightB.tfreightweightB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TfreightweightB.tfreightweightB, 
 predicate in_range = Borst__TfreightweightB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "freightweight" defined at borst.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Borst__freightweight
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type freightweight =
  < range 0 1100 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (1100 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = freightweight, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type freightweight__ref =
  { mutable freightweight__content : freightweight }
 
 function freightweight__ref_freightweight__content__projection 
   (a : freightweight__ref) : freightweight =
  a.freightweight__content
 
 meta "model_projection" function freightweight__ref_freightweight__content__projection
 
 meta "inline:no" function freightweight__ref_freightweight__content__projection
 
 val freightweight__havoc 
   (x : freightweight__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "freightweight" defined at borst.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Borst__freightweight__rep
 use        Borst__freightweight as Borst__freightweight
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__freightweight.freightweight) : int =
  (Borst__freightweight.freightweight'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__freightweight.freightweight, 
 predicate in_range = Borst__freightweight.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TpassengercountB" defined at borst.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Borst__TpassengercountB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tpassengercountB =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tpassengercountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tpassengercountB__ref =
  { mutable tpassengercountB__content : tpassengercountB }
 
 function tpassengercountB__ref_tpassengercountB__content__projection 
   (a : tpassengercountB__ref) : tpassengercountB =
  a.tpassengercountB__content
 
 meta "model_projection" function tpassengercountB__ref_tpassengercountB__content__projection
 
 meta "inline:no" function tpassengercountB__ref_tpassengercountB__content__projection
 
 val tpassengercountB__havoc 
   (x : tpassengercountB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TpassengercountB" defined at borst.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Borst__TpassengercountB__rep
 use        Borst__TpassengercountB as Borst__TpassengercountB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__TpassengercountB.tpassengercountB) : int =
  (Borst__TpassengercountB.tpassengercountB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__TpassengercountB.tpassengercountB, 
 predicate in_range = Borst__TpassengercountB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "passengercount" defined at borst.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Borst__passengercount
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type passengercount =
  < range 0 1000 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (1000 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = passengercount, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type passengercount__ref =
  { mutable passengercount__content : passengercount }
 
 function passengercount__ref_passengercount__content__projection 
   (a : passengercount__ref) : passengercount =
  a.passengercount__content
 
 meta "model_projection" function passengercount__ref_passengercount__content__projection
 
 meta "inline:no" function passengercount__ref_passengercount__content__projection
 
 val passengercount__havoc 
   (x : passengercount__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "passengercount" defined at borst.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Borst__passengercount__rep
 use        Borst__passengercount as Borst__passengercount
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Borst__passengercount.passengercount) : int =
  (Borst__passengercount.passengercount'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Borst__passengercount.passengercount, 
 predicate in_range = Borst__passengercount.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "carriage" defined at borst.ads:25, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Borst__carriage__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__freightweight__rep as Borst__freightweight__rep
 use        Borst__passengercount as Borst__passengercount
 use        Borst__passengercount__rep as Borst__passengercount__rep

 type __split_discrs =
  { rec__borst__carriage__typtr [@model_trace:.4116] [@name:Typtr] : Borst__cartype.cartype }
 
 function __split_discrs_rec__borst__carriage__typtr__projection [@model_trace:.4116] [@name:Typtr] 
   (a : __split_discrs) : Borst__cartype.cartype =
  a.rec__borst__carriage__typtr
 
 meta "model_projection" function __split_discrs_rec__borst__carriage__typtr__projection
 
 meta "inline:no" function __split_discrs_rec__borst__carriage__typtr__projection
 
 type __split_discrs__ref =
  { mutable __split_discrs__content : __split_discrs }
 
 function __split_discrs__ref___split_discrs__content__projection 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___split_discrs__content__projection
 
 meta "inline:no" function __split_discrs__ref___split_discrs__content__projection
 
 val __split_discrs__havoc 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields =
  { rec__borst__carriage__cars [@model_trace:.4129] [@name:Cars] : Borst__numcarriages.numcarriages; rec__borst__carriage__maxspeed [@name:MaxSpeed] [@model_trace:.4139] : Borst__speed.speed; rec__borst__carriage__weight [@name:Weight] [@model_trace:.4149] : Borst__mass.mass; rec__borst__carriage__cargo [@name:Cargo] [@model_trace:.4165] : Borst__freightweight.freightweight; rec__borst__carriage__voyagers [@name:Voyagers] [@model_trace:.4179] : Borst__passengercount.passengercount }
 
 function __split_fields_rec__borst__carriage__cars__projection [@model_trace:.4129] [@name:Cars] 
   (a : __split_fields) : Borst__numcarriages.numcarriages =
  a.rec__borst__carriage__cars
 
 meta "model_projection" function __split_fields_rec__borst__carriage__cars__projection
 
 meta "inline:no" function __split_fields_rec__borst__carriage__cars__projection
 
 function __split_fields_rec__borst__carriage__maxspeed__projection [@name:MaxSpeed] [@model_trace:.4139] 
   (a : __split_fields) : Borst__speed.speed =
  a.rec__borst__carriage__maxspeed
 
 meta "model_projection" function __split_fields_rec__borst__carriage__maxspeed__projection
 
 meta "inline:no" function __split_fields_rec__borst__carriage__maxspeed__projection
 
 function __split_fields_rec__borst__carriage__weight__projection [@name:Weight] [@model_trace:.4149] 
   (a : __split_fields) : Borst__mass.mass =
  a.rec__borst__carriage__weight
 
 meta "model_projection" function __split_fields_rec__borst__carriage__weight__projection
 
 meta "inline:no" function __split_fields_rec__borst__carriage__weight__projection
 
 function __split_fields_rec__borst__carriage__cargo__projection [@name:Cargo] [@model_trace:.4165] 
   (a : __split_fields) : Borst__freightweight.freightweight =
  a.rec__borst__carriage__cargo
 
 meta "model_projection" function __split_fields_rec__borst__carriage__cargo__projection
 
 meta "inline:no" function __split_fields_rec__borst__carriage__cargo__projection
 
 function __split_fields_rec__borst__carriage__voyagers__projection [@name:Voyagers] [@model_trace:.4179] 
   (a : __split_fields) : Borst__passengercount.passengercount =
  a.rec__borst__carriage__voyagers
 
 meta "model_projection" function __split_fields_rec__borst__carriage__voyagers__projection
 
 meta "inline:no" function __split_fields_rec__borst__carriage__voyagers__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content : __split_fields }
 
 function __split_fields__ref___split_fields__content__projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___split_fields__content__projection
 
 meta "inline:no" function __split_fields__ref___split_fields__content__projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_discrs : __split_discrs; __split_fields : __split_fields; attr__constrained [@model_trace:'Constrained] : bool }
 
 function __rep___split_discrs__projection 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep___split_discrs__projection
 
 meta "inline:no" function __rep___split_discrs__projection
 
 function __rep___split_fields__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___split_fields__projection
 
 meta "inline:no" function __rep___split_fields__projection
 
 function __rep_attr__constrained__projection [@model_trace:'Constrained] 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_attr__constrained__projection
 
 meta "inline:no" function __rep_attr__constrained__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 val to_base 
   (a : __rep) : __rep
  ensures { result = to_base (a : __rep) }
 
 function of_base 
   (a : __rep) : __rep =
  a
 val of_base 
   (a : __rep) : __rep
  ensures { result = of_base (a : __rep) }
 
 val rec__borst__carriage__typtr_ 
   (a : __rep) : Borst__cartype.cartype
  requires {  true }
  ensures {  (result = a.__split_discrs.rec__borst__carriage__typtr) }
 
 predicate borst__carriage__cars__pred 
   (a : __rep) =
  true
 val borst__carriage__cars__pred 
   (a : __rep) : bool
  ensures { result <-> borst__carriage__cars__pred (a : __rep) }
 
 val rec__borst__carriage__cars_ 
   (a : __rep) : Borst__numcarriages.numcarriages
  requires {  (borst__carriage__cars__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__carriage__cars) }
 
 predicate borst__carriage__maxspeed__pred 
   (a : __rep) =
  true
 val borst__carriage__maxspeed__pred 
   (a : __rep) : bool
  ensures { result <-> borst__carriage__maxspeed__pred (a : __rep) }
 
 val rec__borst__carriage__maxspeed_ 
   (a : __rep) : Borst__speed.speed
  requires {  (borst__carriage__maxspeed__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__carriage__maxspeed) }
 
 predicate borst__carriage__weight__pred 
   (a : __rep) =
  true
 val borst__carriage__weight__pred 
   (a : __rep) : bool
  ensures { result <-> borst__carriage__weight__pred (a : __rep) }
 
 val rec__borst__carriage__weight_ 
   (a : __rep) : Borst__mass.mass
  requires {  (borst__carriage__weight__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__carriage__weight) }
 
 predicate borst__carriage__cargo__pred 
   (a : __rep) =
  ((Borst__cartype__rep.to_rep a.__split_discrs.rec__borst__carriage__typtr) = (0 : int))
 val borst__carriage__cargo__pred 
   (a : __rep) : bool
  ensures { result <-> borst__carriage__cargo__pred (a : __rep) }
 
 val rec__borst__carriage__cargo_ 
   (a : __rep) : Borst__freightweight.freightweight
  requires {  (borst__carriage__cargo__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__carriage__cargo) }
 
 predicate borst__carriage__voyagers__pred 
   (a : __rep) =
  ((Borst__cartype__rep.to_rep a.__split_discrs.rec__borst__carriage__typtr) = (1 : int))
 val borst__carriage__voyagers__pred 
   (a : __rep) : bool
  ensures { result <-> borst__carriage__voyagers__pred (a : __rep) }
 
 val rec__borst__carriage__voyagers_ 
   (a : __rep) : Borst__passengercount.passengercount
  requires {  (borst__carriage__voyagers__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__carriage__voyagers) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Borst__cartype__rep.to_rep a.__split_discrs.rec__borst__carriage__typtr) = (Borst__cartype__rep.to_rep b.__split_discrs.rec__borst__carriage__typtr)) /\ ( ( ( (borst__carriage__cars__pred a) -> ((Borst__numcarriages__rep.to_rep a.__split_fields.rec__borst__carriage__cars) = (Borst__numcarriages__rep.to_rep b.__split_fields.rec__borst__carriage__cars)) ) /\ ( (borst__carriage__maxspeed__pred a) -> ((Borst__speed__rep.to_rep a.__split_fields.rec__borst__carriage__maxspeed) = (Borst__speed__rep.to_rep b.__split_fields.rec__borst__carriage__maxspeed)) ) )/\( ( ( (borst__carriage__weight__pred a) -> ((Borst__mass__rep.to_rep a.__split_fields.rec__borst__carriage__weight) = (Borst__mass__rep.to_rep b.__split_fields.rec__borst__carriage__weight)) )/\( (borst__carriage__cargo__pred a) -> ((Borst__freightweight__rep.to_rep a.__split_fields.rec__borst__carriage__cargo) = (Borst__freightweight__rep.to_rep b.__split_fields.rec__borst__carriage__cargo)) ) )/\( (borst__carriage__voyagers__pred a) -> ((Borst__passengercount__rep.to_rep a.__split_fields.rec__borst__carriage__voyagers) = (Borst__passengercount__rep.to_rep b.__split_fields.rec__borst__carriage__voyagers)) ) ) ) )) then (
   True) else (
   False))
 val bool_eq 
   (a : __rep) (b : __rep) : bool
  ensures { result = bool_eq (a : __rep) (b : __rep) }

end

(* Module for axiomatizing type "carriage" defined at borst.ads:25, created in Gnat2Why.Types.Translate_Type *)
module Borst__carriage
 use export Borst__carriage__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type carriage =
  __rep
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__carriage__typtr__first__bit 
   : int

 
 val constant borst__carriage__typtr__last__bit 
   : int

 
 val constant borst__carriage__typtr__position 
   : int

 
 axiom borst__carriage__typtr__first__bit_axiom :
  ((borst__carriage__typtr__first__bit ) >= (0 : int))
 
 axiom borst__carriage__typtr__last__bit_axiom :
  ((borst__carriage__typtr__last__bit ) > (borst__carriage__typtr__first__bit ))
 
 axiom borst__carriage__typtr__position_axiom :
  ((borst__carriage__typtr__position ) >= (0 : int))
 
 val constant borst__carriage__cars__first__bit 
   : int

 
 val constant borst__carriage__cars__last__bit 
   : int

 
 val constant borst__carriage__cars__position 
   : int

 
 axiom borst__carriage__cars__first__bit_axiom :
  ((borst__carriage__cars__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cars__last__bit_axiom :
  ((borst__carriage__cars__last__bit ) > (borst__carriage__cars__first__bit ))
 
 axiom borst__carriage__cars__position_axiom :
  ((borst__carriage__cars__position ) >= (0 : int))
 
 val constant borst__carriage__maxspeed__first__bit 
   : int

 
 val constant borst__carriage__maxspeed__last__bit 
   : int

 
 val constant borst__carriage__maxspeed__position 
   : int

 
 axiom borst__carriage__maxspeed__first__bit_axiom :
  ((borst__carriage__maxspeed__first__bit ) >= (0 : int))
 
 axiom borst__carriage__maxspeed__last__bit_axiom :
  ((borst__carriage__maxspeed__last__bit ) > (borst__carriage__maxspeed__first__bit ))
 
 axiom borst__carriage__maxspeed__position_axiom :
  ((borst__carriage__maxspeed__position ) >= (0 : int))
 
 val constant borst__carriage__weight__first__bit 
   : int

 
 val constant borst__carriage__weight__last__bit 
   : int

 
 val constant borst__carriage__weight__position 
   : int

 
 axiom borst__carriage__weight__first__bit_axiom :
  ((borst__carriage__weight__first__bit ) >= (0 : int))
 
 axiom borst__carriage__weight__last__bit_axiom :
  ((borst__carriage__weight__last__bit ) > (borst__carriage__weight__first__bit ))
 
 axiom borst__carriage__weight__position_axiom :
  ((borst__carriage__weight__position ) >= (0 : int))
 
 val constant borst__carriage__cargo__first__bit 
   : int

 
 val constant borst__carriage__cargo__last__bit 
   : int

 
 val constant borst__carriage__cargo__position 
   : int

 
 axiom borst__carriage__cargo__first__bit_axiom :
  ((borst__carriage__cargo__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cargo__last__bit_axiom :
  ((borst__carriage__cargo__last__bit ) > (borst__carriage__cargo__first__bit ))
 
 axiom borst__carriage__cargo__position_axiom :
  ((borst__carriage__cargo__position ) >= (0 : int))
 
 val constant borst__carriage__voyagers__first__bit 
   : int

 
 val constant borst__carriage__voyagers__last__bit 
   : int

 
 val constant borst__carriage__voyagers__position 
   : int

 
 axiom borst__carriage__voyagers__first__bit_axiom :
  ((borst__carriage__voyagers__first__bit ) >= (0 : int))
 
 axiom borst__carriage__voyagers__last__bit_axiom :
  ((borst__carriage__voyagers__last__bit ) > (borst__carriage__voyagers__first__bit ))
 
 axiom borst__carriage__voyagers__position_axiom :
  ((borst__carriage__voyagers__position ) >= (0 : int))
 
 val function user_eq 
   (a : carriage) (b : carriage) : bool
 
 val constant dummy 
   : carriage

 
 type carriage__ref =
  { mutable carriage__content : carriage }
 
 function carriage__ref_carriage__content__projection 
   (a : carriage__ref) : carriage =
  a.carriage__content
 
 meta "model_projection" function carriage__ref_carriage__content__projection
 
 meta "inline:no" function carriage__ref_carriage__content__projection
 
 val carriage__havoc 
   (x : carriage__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "engine" defined at borst.ads:35, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Borst__engine__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep

 type __split_fields =
  { rec__borst__engine__rods [@model_trace:.4201] [@name:Rods] : Borst__controlrod.controlrod; rec__borst__engine__powered [@name:Powered] [@model_trace:.4211] : Borst__power.power; rec__borst__engine__watertank [@name:WaterTank] [@model_trace:.4221] : Borst__level.level; rec__borst__engine__heat [@name:Heat] [@model_trace:.4231] : Borst__enginetemp.enginetemp; rec__borst__engine__maintenance [@name:Maintenance] [@model_trace:.4241] : Borst__lastmaintained.lastmaintained; rec__borst__engine__mtnlight [@name:MtnLight] [@model_trace:.4251] : Borst__light.light; rec__borst__engine__heatlight [@model_trace:.4261] [@name:HeatLight] : Borst__light.light; rec__borst__engine__waterlight [@model_trace:.4271] [@name:WaterLight] : Borst__light.light }
 
 function __split_fields_rec__borst__engine__rods__projection [@model_trace:.4201] [@name:Rods] 
   (a : __split_fields) : Borst__controlrod.controlrod =
  a.rec__borst__engine__rods
 
 meta "model_projection" function __split_fields_rec__borst__engine__rods__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__rods__projection
 
 function __split_fields_rec__borst__engine__powered__projection [@name:Powered] [@model_trace:.4211] 
   (a : __split_fields) : Borst__power.power =
  a.rec__borst__engine__powered
 
 meta "model_projection" function __split_fields_rec__borst__engine__powered__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__powered__projection
 
 function __split_fields_rec__borst__engine__watertank__projection [@name:WaterTank] [@model_trace:.4221] 
   (a : __split_fields) : Borst__level.level =
  a.rec__borst__engine__watertank
 
 meta "model_projection" function __split_fields_rec__borst__engine__watertank__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__watertank__projection
 
 function __split_fields_rec__borst__engine__heat__projection [@name:Heat] [@model_trace:.4231] 
   (a : __split_fields) : Borst__enginetemp.enginetemp =
  a.rec__borst__engine__heat
 
 meta "model_projection" function __split_fields_rec__borst__engine__heat__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__heat__projection
 
 function __split_fields_rec__borst__engine__maintenance__projection [@name:Maintenance] [@model_trace:.4241] 
   (a : __split_fields) : Borst__lastmaintained.lastmaintained =
  a.rec__borst__engine__maintenance
 
 meta "model_projection" function __split_fields_rec__borst__engine__maintenance__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__maintenance__projection
 
 function __split_fields_rec__borst__engine__mtnlight__projection [@name:MtnLight] [@model_trace:.4251] 
   (a : __split_fields) : Borst__light.light =
  a.rec__borst__engine__mtnlight
 
 meta "model_projection" function __split_fields_rec__borst__engine__mtnlight__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__mtnlight__projection
 
 function __split_fields_rec__borst__engine__heatlight__projection [@model_trace:.4261] [@name:HeatLight] 
   (a : __split_fields) : Borst__light.light =
  a.rec__borst__engine__heatlight
 
 meta "model_projection" function __split_fields_rec__borst__engine__heatlight__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__heatlight__projection
 
 function __split_fields_rec__borst__engine__waterlight__projection [@model_trace:.4271] [@name:WaterLight] 
   (a : __split_fields) : Borst__light.light =
  a.rec__borst__engine__waterlight
 
 meta "model_projection" function __split_fields_rec__borst__engine__waterlight__projection
 
 meta "inline:no" function __split_fields_rec__borst__engine__waterlight__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content : __split_fields }
 
 function __split_fields__ref___split_fields__content__2__projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___split_fields__content__2__projection
 
 meta "inline:no" function __split_fields__ref___split_fields__content__2__projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_fields : __split_fields }
 
 function __rep___split_fields__2__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___split_fields__2__projection
 
 meta "inline:no" function __rep___split_fields__2__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 val to_base 
   (a : __rep) : __rep
  ensures { result = to_base (a : __rep) }
 
 function of_base 
   (a : __rep) : __rep =
  a
 val of_base 
   (a : __rep) : __rep
  ensures { result = of_base (a : __rep) }
 
 predicate borst__engine__rods__pred 
   (a : __rep) =
  true
 val borst__engine__rods__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__rods__pred (a : __rep) }
 
 val rec__borst__engine__rods_ 
   (a : __rep) : Borst__controlrod.controlrod
  requires {  (borst__engine__rods__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__rods) }
 
 predicate borst__engine__powered__pred 
   (a : __rep) =
  true
 val borst__engine__powered__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__powered__pred (a : __rep) }
 
 val rec__borst__engine__powered_ 
   (a : __rep) : Borst__power.power
  requires {  (borst__engine__powered__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__powered) }
 
 predicate borst__engine__watertank__pred 
   (a : __rep) =
  true
 val borst__engine__watertank__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__watertank__pred (a : __rep) }
 
 val rec__borst__engine__watertank_ 
   (a : __rep) : Borst__level.level
  requires {  (borst__engine__watertank__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__watertank) }
 
 predicate borst__engine__heat__pred 
   (a : __rep) =
  true
 val borst__engine__heat__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__heat__pred (a : __rep) }
 
 val rec__borst__engine__heat_ 
   (a : __rep) : Borst__enginetemp.enginetemp
  requires {  (borst__engine__heat__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__heat) }
 
 predicate borst__engine__maintenance__pred 
   (a : __rep) =
  true
 val borst__engine__maintenance__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__maintenance__pred (a : __rep) }
 
 val rec__borst__engine__maintenance_ 
   (a : __rep) : Borst__lastmaintained.lastmaintained
  requires {  (borst__engine__maintenance__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__maintenance) }
 
 predicate borst__engine__mtnlight__pred 
   (a : __rep) =
  true
 val borst__engine__mtnlight__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__mtnlight__pred (a : __rep) }
 
 val rec__borst__engine__mtnlight_ 
   (a : __rep) : Borst__light.light
  requires {  (borst__engine__mtnlight__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__mtnlight) }
 
 predicate borst__engine__heatlight__pred 
   (a : __rep) =
  true
 val borst__engine__heatlight__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__heatlight__pred (a : __rep) }
 
 val rec__borst__engine__heatlight_ 
   (a : __rep) : Borst__light.light
  requires {  (borst__engine__heatlight__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__heatlight) }
 
 predicate borst__engine__waterlight__pred 
   (a : __rep) =
  true
 val borst__engine__waterlight__pred 
   (a : __rep) : bool
  ensures { result <-> borst__engine__waterlight__pred (a : __rep) }
 
 val rec__borst__engine__waterlight_ 
   (a : __rep) : Borst__light.light
  requires {  (borst__engine__waterlight__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__engine__waterlight) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Borst__controlrod__rep.to_rep a.__split_fields.rec__borst__engine__rods) = (Borst__controlrod__rep.to_rep b.__split_fields.rec__borst__engine__rods)) /\ ((Borst__power__rep.to_rep a.__split_fields.rec__borst__engine__powered) = (Borst__power__rep.to_rep b.__split_fields.rec__borst__engine__powered)) )/\( ( ( ((Borst__level__rep.to_rep a.__split_fields.rec__borst__engine__watertank) = (Borst__level__rep.to_rep b.__split_fields.rec__borst__engine__watertank))/\((Borst__enginetemp__rep.to_rep a.__split_fields.rec__borst__engine__heat) = (Borst__enginetemp__rep.to_rep b.__split_fields.rec__borst__engine__heat)) )/\((Borst__lastmaintained__rep.to_rep a.__split_fields.rec__borst__engine__maintenance) = (Borst__lastmaintained__rep.to_rep b.__split_fields.rec__borst__engine__maintenance)) )/\( ( ((Borst__light__rep.to_rep a.__split_fields.rec__borst__engine__mtnlight) = (Borst__light__rep.to_rep b.__split_fields.rec__borst__engine__mtnlight))/\((Borst__light__rep.to_rep a.__split_fields.rec__borst__engine__heatlight) = (Borst__light__rep.to_rep b.__split_fields.rec__borst__engine__heatlight)) )/\((Borst__light__rep.to_rep a.__split_fields.rec__borst__engine__waterlight) = (Borst__light__rep.to_rep b.__split_fields.rec__borst__engine__waterlight)) ) ) )) then (
   True) else (
   False))
 val bool_eq 
   (a : __rep) (b : __rep) : bool
  ensures { result = bool_eq (a : __rep) (b : __rep) }

end

(* Module for axiomatizing type "engine" defined at borst.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Borst__engine
 use export Borst__engine__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type engine =
  __rep
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__engine__rods__first__bit 
   : int

 
 val constant borst__engine__rods__last__bit 
   : int

 
 val constant borst__engine__rods__position 
   : int

 
 axiom borst__engine__rods__first__bit_axiom :
  ((borst__engine__rods__first__bit ) >= (0 : int))
 
 axiom borst__engine__rods__last__bit_axiom :
  ((borst__engine__rods__last__bit ) > (borst__engine__rods__first__bit ))
 
 axiom borst__engine__rods__position_axiom :
  ((borst__engine__rods__position ) >= (0 : int))
 
 val constant borst__engine__powered__first__bit 
   : int

 
 val constant borst__engine__powered__last__bit 
   : int

 
 val constant borst__engine__powered__position 
   : int

 
 axiom borst__engine__powered__first__bit_axiom :
  ((borst__engine__powered__first__bit ) >= (0 : int))
 
 axiom borst__engine__powered__last__bit_axiom :
  ((borst__engine__powered__last__bit ) > (borst__engine__powered__first__bit ))
 
 axiom borst__engine__powered__position_axiom :
  ((borst__engine__powered__position ) >= (0 : int))
 
 val constant borst__engine__watertank__first__bit 
   : int

 
 val constant borst__engine__watertank__last__bit 
   : int

 
 val constant borst__engine__watertank__position 
   : int

 
 axiom borst__engine__watertank__first__bit_axiom :
  ((borst__engine__watertank__first__bit ) >= (0 : int))
 
 axiom borst__engine__watertank__last__bit_axiom :
  ((borst__engine__watertank__last__bit ) > (borst__engine__watertank__first__bit ))
 
 axiom borst__engine__watertank__position_axiom :
  ((borst__engine__watertank__position ) >= (0 : int))
 
 val constant borst__engine__heat__first__bit 
   : int

 
 val constant borst__engine__heat__last__bit 
   : int

 
 val constant borst__engine__heat__position 
   : int

 
 axiom borst__engine__heat__first__bit_axiom :
  ((borst__engine__heat__first__bit ) >= (0 : int))
 
 axiom borst__engine__heat__last__bit_axiom :
  ((borst__engine__heat__last__bit ) > (borst__engine__heat__first__bit ))
 
 axiom borst__engine__heat__position_axiom :
  ((borst__engine__heat__position ) >= (0 : int))
 
 val constant borst__engine__maintenance__first__bit 
   : int

 
 val constant borst__engine__maintenance__last__bit 
   : int

 
 val constant borst__engine__maintenance__position 
   : int

 
 axiom borst__engine__maintenance__first__bit_axiom :
  ((borst__engine__maintenance__first__bit ) >= (0 : int))
 
 axiom borst__engine__maintenance__last__bit_axiom :
  ((borst__engine__maintenance__last__bit ) > (borst__engine__maintenance__first__bit ))
 
 axiom borst__engine__maintenance__position_axiom :
  ((borst__engine__maintenance__position ) >= (0 : int))
 
 val constant borst__engine__mtnlight__first__bit 
   : int

 
 val constant borst__engine__mtnlight__last__bit 
   : int

 
 val constant borst__engine__mtnlight__position 
   : int

 
 axiom borst__engine__mtnlight__first__bit_axiom :
  ((borst__engine__mtnlight__first__bit ) >= (0 : int))
 
 axiom borst__engine__mtnlight__last__bit_axiom :
  ((borst__engine__mtnlight__last__bit ) > (borst__engine__mtnlight__first__bit ))
 
 axiom borst__engine__mtnlight__position_axiom :
  ((borst__engine__mtnlight__position ) >= (0 : int))
 
 val constant borst__engine__heatlight__first__bit 
   : int

 
 val constant borst__engine__heatlight__last__bit 
   : int

 
 val constant borst__engine__heatlight__position 
   : int

 
 axiom borst__engine__heatlight__first__bit_axiom :
  ((borst__engine__heatlight__first__bit ) >= (0 : int))
 
 axiom borst__engine__heatlight__last__bit_axiom :
  ((borst__engine__heatlight__last__bit ) > (borst__engine__heatlight__first__bit ))
 
 axiom borst__engine__heatlight__position_axiom :
  ((borst__engine__heatlight__position ) >= (0 : int))
 
 val constant borst__engine__waterlight__first__bit 
   : int

 
 val constant borst__engine__waterlight__last__bit 
   : int

 
 val constant borst__engine__waterlight__position 
   : int

 
 axiom borst__engine__waterlight__first__bit_axiom :
  ((borst__engine__waterlight__first__bit ) >= (0 : int))
 
 axiom borst__engine__waterlight__last__bit_axiom :
  ((borst__engine__waterlight__last__bit ) > (borst__engine__waterlight__first__bit ))
 
 axiom borst__engine__waterlight__position_axiom :
  ((borst__engine__waterlight__position ) >= (0 : int))
 
 val function user_eq 
   (a : engine) (b : engine) : bool
 
 val constant dummy 
   : engine

 
 type engine__ref =
  { mutable engine__content : engine }
 
 function engine__ref_engine__content__projection 
   (a : engine__ref) : engine =
  a.engine__content
 
 meta "model_projection" function engine__ref_engine__content__projection
 
 meta "inline:no" function engine__ref_engine__content__projection
 
 val engine__havoc 
   (x : engine__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "train" defined at borst.ads:46, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Borst__train__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__engine as Borst__engine

 type __split_fields =
  { rec__borst__train__traintype [@name:TrainType] [@model_trace:.4293] : Borst__cartype.cartype; rec__borst__train__generator [@model_trace:.4303] [@name:Generator] : Borst__engine.engine; rec__borst__train__cart [@model_trace:.4313] [@name:Cart] : Borst__carriage.carriage; rec__borst__train__curspeed [@name:CurSpeed] [@model_trace:.4323] : Borst__speed.speed }
 
 function __split_fields_rec__borst__train__traintype__projection [@name:TrainType] [@model_trace:.4293] 
   (a : __split_fields) : Borst__cartype.cartype =
  a.rec__borst__train__traintype
 
 meta "model_projection" function __split_fields_rec__borst__train__traintype__projection
 
 meta "inline:no" function __split_fields_rec__borst__train__traintype__projection
 
 function __split_fields_rec__borst__train__generator__projection [@model_trace:.4303] [@name:Generator] 
   (a : __split_fields) : Borst__engine.engine =
  a.rec__borst__train__generator
 
 meta "model_projection" function __split_fields_rec__borst__train__generator__projection
 
 meta "inline:no" function __split_fields_rec__borst__train__generator__projection
 
 function __split_fields_rec__borst__train__cart__projection [@model_trace:.4313] [@name:Cart] 
   (a : __split_fields) : Borst__carriage.carriage =
  a.rec__borst__train__cart
 
 meta "model_projection" function __split_fields_rec__borst__train__cart__projection
 
 meta "inline:no" function __split_fields_rec__borst__train__cart__projection
 
 function __split_fields_rec__borst__train__curspeed__projection [@name:CurSpeed] [@model_trace:.4323] 
   (a : __split_fields) : Borst__speed.speed =
  a.rec__borst__train__curspeed
 
 meta "model_projection" function __split_fields_rec__borst__train__curspeed__projection
 
 meta "inline:no" function __split_fields_rec__borst__train__curspeed__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content : __split_fields }
 
 function __split_fields__ref___split_fields__content__3__projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___split_fields__content__3__projection
 
 meta "inline:no" function __split_fields__ref___split_fields__content__3__projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_fields : __split_fields }
 
 function __rep___split_fields__3__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___split_fields__3__projection
 
 meta "inline:no" function __rep___split_fields__3__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 val to_base 
   (a : __rep) : __rep
  ensures { result = to_base (a : __rep) }
 
 function of_base 
   (a : __rep) : __rep =
  a
 val of_base 
   (a : __rep) : __rep
  ensures { result = of_base (a : __rep) }
 
 predicate borst__train__traintype__pred 
   (a : __rep) =
  true
 val borst__train__traintype__pred 
   (a : __rep) : bool
  ensures { result <-> borst__train__traintype__pred (a : __rep) }
 
 val rec__borst__train__traintype_ 
   (a : __rep) : Borst__cartype.cartype
  requires {  (borst__train__traintype__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__train__traintype) }
 
 predicate borst__train__generator__pred 
   (a : __rep) =
  true
 val borst__train__generator__pred 
   (a : __rep) : bool
  ensures { result <-> borst__train__generator__pred (a : __rep) }
 
 val rec__borst__train__generator_ 
   (a : __rep) : Borst__engine.engine
  requires {  (borst__train__generator__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__train__generator) }
 
 predicate borst__train__cart__pred 
   (a : __rep) =
  true
 val borst__train__cart__pred 
   (a : __rep) : bool
  ensures { result <-> borst__train__cart__pred (a : __rep) }
 
 val rec__borst__train__cart_ 
   (a : __rep) : Borst__carriage.carriage
  requires {  (borst__train__cart__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__train__cart) }
 
 predicate borst__train__curspeed__pred 
   (a : __rep) =
  true
 val borst__train__curspeed__pred 
   (a : __rep) : bool
  ensures { result <-> borst__train__curspeed__pred (a : __rep) }
 
 val rec__borst__train__curspeed_ 
   (a : __rep) : Borst__speed.speed
  requires {  (borst__train__curspeed__pred a) }
  ensures {  (result = a.__split_fields.rec__borst__train__curspeed) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Borst__cartype__rep.to_rep a.__split_fields.rec__borst__train__traintype) = (Borst__cartype__rep.to_rep b.__split_fields.rec__borst__train__traintype)) /\ (Borst__engine.bool_eq a.__split_fields.rec__borst__train__generator b.__split_fields.rec__borst__train__generator) )/\( (Borst__carriage.bool_eq a.__split_fields.rec__borst__train__cart b.__split_fields.rec__borst__train__cart)/\((Borst__speed__rep.to_rep a.__split_fields.rec__borst__train__curspeed) = (Borst__speed__rep.to_rep b.__split_fields.rec__borst__train__curspeed)) ) )) then (
   True) else (
   False))
 val bool_eq 
   (a : __rep) (b : __rep) : bool
  ensures { result = bool_eq (a : __rep) (b : __rep) }

end

(* Module for axiomatizing type "train" defined at borst.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Borst__train
 use export Borst__train__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type train =
  __rep
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__train__traintype__first__bit 
   : int

 
 val constant borst__train__traintype__last__bit 
   : int

 
 val constant borst__train__traintype__position 
   : int

 
 axiom borst__train__traintype__first__bit_axiom :
  ((borst__train__traintype__first__bit ) >= (0 : int))
 
 axiom borst__train__traintype__last__bit_axiom :
  ((borst__train__traintype__last__bit ) > (borst__train__traintype__first__bit ))
 
 axiom borst__train__traintype__position_axiom :
  ((borst__train__traintype__position ) >= (0 : int))
 
 val constant borst__train__generator__first__bit 
   : int

 
 val constant borst__train__generator__last__bit 
   : int

 
 val constant borst__train__generator__position 
   : int

 
 axiom borst__train__generator__first__bit_axiom :
  ((borst__train__generator__first__bit ) >= (0 : int))
 
 axiom borst__train__generator__last__bit_axiom :
  ((borst__train__generator__last__bit ) > (borst__train__generator__first__bit ))
 
 axiom borst__train__generator__position_axiom :
  ((borst__train__generator__position ) >= (0 : int))
 
 val constant borst__train__cart__first__bit 
   : int

 
 val constant borst__train__cart__last__bit 
   : int

 
 val constant borst__train__cart__position 
   : int

 
 axiom borst__train__cart__first__bit_axiom :
  ((borst__train__cart__first__bit ) >= (0 : int))
 
 axiom borst__train__cart__last__bit_axiom :
  ((borst__train__cart__last__bit ) > (borst__train__cart__first__bit ))
 
 axiom borst__train__cart__position_axiom :
  ((borst__train__cart__position ) >= (0 : int))
 
 val constant borst__train__curspeed__first__bit 
   : int

 
 val constant borst__train__curspeed__last__bit 
   : int

 
 val constant borst__train__curspeed__position 
   : int

 
 axiom borst__train__curspeed__first__bit_axiom :
  ((borst__train__curspeed__first__bit ) >= (0 : int))
 
 axiom borst__train__curspeed__last__bit_axiom :
  ((borst__train__curspeed__last__bit ) > (borst__train__curspeed__first__bit ))
 
 axiom borst__train__curspeed__position_axiom :
  ((borst__train__curspeed__position ) >= (0 : int))
 
 val function user_eq 
   (a : train) (b : train) : bool
 
 val constant dummy 
   : train

 
 type train__ref =
  { mutable train__content : train }
 
 function train__ref_train__content__projection 
   (a : train__ref) : train =
  a.train__content
 
 meta "model_projection" function train__ref_train__content__projection
 
 meta "inline:no" function train__ref_train__content__projection
 
 val train__havoc 
   (x : train__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at borst.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Borst__T1s
 use export Borst__carriage__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep

 type t1s =
  __rep
 
 predicate in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) =
  (rec__borst__carriage__typtr = (Borst__cartype__rep.to_rep (Borst__carriage.rec__borst__carriage__typtr a.Borst__carriage.__split_discrs)))
 val in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : bool
  ensures { result <-> in_range (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) }
 
 val range_check_ 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : Borst__carriage.carriage
  requires {  (in_range rec__borst__carriage__typtr a) }
  ensures {  (result = a) }
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__carriage__typtr__first__bit 
   : int

 
 val constant borst__carriage__typtr__last__bit 
   : int

 
 val constant borst__carriage__typtr__position 
   : int

 
 axiom borst__carriage__typtr__first__bit_axiom :
  ((borst__carriage__typtr__first__bit ) >= (0 : int))
 
 axiom borst__carriage__typtr__last__bit_axiom :
  ((borst__carriage__typtr__last__bit ) > (borst__carriage__typtr__first__bit ))
 
 axiom borst__carriage__typtr__position_axiom :
  ((borst__carriage__typtr__position ) >= (0 : int))
 
 val constant borst__carriage__cargo__first__bit 
   : int

 
 val constant borst__carriage__cargo__last__bit 
   : int

 
 val constant borst__carriage__cargo__position 
   : int

 
 axiom borst__carriage__cargo__first__bit_axiom :
  ((borst__carriage__cargo__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cargo__last__bit_axiom :
  ((borst__carriage__cargo__last__bit ) > (borst__carriage__cargo__first__bit ))
 
 axiom borst__carriage__cargo__position_axiom :
  ((borst__carriage__cargo__position ) >= (0 : int))
 
 val constant borst__carriage__cars__first__bit 
   : int

 
 val constant borst__carriage__cars__last__bit 
   : int

 
 val constant borst__carriage__cars__position 
   : int

 
 axiom borst__carriage__cars__first__bit_axiom :
  ((borst__carriage__cars__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cars__last__bit_axiom :
  ((borst__carriage__cars__last__bit ) > (borst__carriage__cars__first__bit ))
 
 axiom borst__carriage__cars__position_axiom :
  ((borst__carriage__cars__position ) >= (0 : int))
 
 val constant borst__carriage__maxspeed__first__bit 
   : int

 
 val constant borst__carriage__maxspeed__last__bit 
   : int

 
 val constant borst__carriage__maxspeed__position 
   : int

 
 axiom borst__carriage__maxspeed__first__bit_axiom :
  ((borst__carriage__maxspeed__first__bit ) >= (0 : int))
 
 axiom borst__carriage__maxspeed__last__bit_axiom :
  ((borst__carriage__maxspeed__last__bit ) > (borst__carriage__maxspeed__first__bit ))
 
 axiom borst__carriage__maxspeed__position_axiom :
  ((borst__carriage__maxspeed__position ) >= (0 : int))
 
 val constant borst__carriage__weight__first__bit 
   : int

 
 val constant borst__carriage__weight__last__bit 
   : int

 
 val constant borst__carriage__weight__position 
   : int

 
 axiom borst__carriage__weight__first__bit_axiom :
  ((borst__carriage__weight__first__bit ) >= (0 : int))
 
 axiom borst__carriage__weight__last__bit_axiom :
  ((borst__carriage__weight__last__bit ) > (borst__carriage__weight__first__bit ))
 
 axiom borst__carriage__weight__position_axiom :
  ((borst__carriage__weight__position ) >= (0 : int))
 
 val constant borst__carriage__voyagers__first__bit 
   : int

 
 val constant borst__carriage__voyagers__last__bit 
   : int

 
 val constant borst__carriage__voyagers__position 
   : int

 
 axiom borst__carriage__voyagers__first__bit_axiom :
  ((borst__carriage__voyagers__first__bit ) >= (0 : int))
 
 axiom borst__carriage__voyagers__last__bit_axiom :
  ((borst__carriage__voyagers__last__bit ) > (borst__carriage__voyagers__first__bit ))
 
 axiom borst__carriage__voyagers__position_axiom :
  ((borst__carriage__voyagers__position ) >= (0 : int))
 
 val function user_eq 
   (a : t1s) (b : t1s) : bool
 
 val constant dummy 
   : t1s

 
 type t1s__ref =
  { mutable t1s__content : t1s }
 
 function t1s__ref_t1s__content__projection 
   (a : t1s__ref) : t1s =
  a.t1s__content
 
 meta "model_projection" function t1s__ref_t1s__content__projection
 
 meta "inline:no" function t1s__ref_t1s__content__projection
 
 val t1s__havoc 
   (x : t1s__ref) : unit
  writes {x}

end

(* Module for defining the constant "num" defined at borst.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__getmax__num
 use        "_gnatprove_standard".Main
 use        "int".Int

 val constant num [#"borst.ads" 121 0 0][@model_trace:4877] [@name:num] 
   : int

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "num" defined at borst.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__getmax__num___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "getmax" defined at borst.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__getmax
 use        "_gnatprove_standard".Main
 use        "int".Int

 val function getmax 
   (num : int) : int
 
 val predicate getmax__function_guard 
   (temp___result_154 : int) (num : int)

end

(* Module for defining the constant "water" defined at borst.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__getheat__water
 use        "_gnatprove_standard".Main
 use        "int".Int

 val constant water [#"borst.ads" 124 0 0][@model_trace:4911] [@name:water] 
   : int

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "water" defined at borst.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__getheat__water___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining the constant "rods" defined at borst.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__getheat__rods
 use        "_gnatprove_standard".Main
 use        "int".Int

 val constant rods [#"borst.ads" 124 0 0][@name:rods] [@model_trace:4920] 
   : int

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "rods" defined at borst.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__getheat__rods___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "getheat" defined at borst.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__getheat
 use        "_gnatprove_standard".Main
 use        "int".Int

 val function getheat 
   (water : int) (rods : int) : int
 
 val predicate getheat__function_guard 
   (temp___result_155 : int) (water : int) (rods : int)

end

(* Module for defining the constant "car" defined at borst.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__getcurrentspeed__car
 use        "_gnatprove_standard".Main
 use        "int".Int

 val constant car [#"borst.ads" 127 0 0][@name:car] [@model_trace:4950] 
   : int

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "car" defined at borst.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__getcurrentspeed__car___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining the constant "heat" defined at borst.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__getcurrentspeed__heat
 use        "_gnatprove_standard".Main
 use        "int".Int

 val constant heat [#"borst.ads" 127 0 0][@model_trace:4959] [@name:heat] 
   : int

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "heat" defined at borst.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__getcurrentspeed__heat___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "getcurrentspeed" defined at borst.ads:127, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__getcurrentspeed
 use        "_gnatprove_standard".Main
 use        "int".Int

 val function getcurrentspeed 
   (car : int) (heat : int) : int
 
 val predicate getcurrentspeed__function_guard 
   (temp___result_156 : int) (car : int) (heat : int)

end

(* Module for defining the constant "wat" defined at borst.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__calcweight__wat
 use        "_gnatprove_standard".Main
 use        "int".Int

 val constant wat [#"borst.ads" 203 0 0][@name:wat] [@model_trace:5754] 
   : int

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "wat" defined at borst.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__calcweight__wat___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining the constant "car" defined at borst.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Borst__calcweight__car
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__carriage as Borst__carriage

 val constant car [#"borst.ads" 203 0 0][@model_trace:5763] [@name:car] [@model_projected] 
   : Borst__carriage.carriage

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "car" defined at borst.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__calcweight__car___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "calcweight" defined at borst.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__calcweight
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__carriage as Borst__carriage

 val function calcweight 
   (wat : int) (car : Borst__carriage.carriage) : int
 
 val predicate calcweight__function_guard 
   (temp___result_157 : int) (wat : int) (car : Borst__carriage.carriage)

end

(* Module for axiomatizing type "T4b" defined at borst.adb:176, created in Gnat2Why.Types.Translate_Type *)
module Borst__changecarriagetype__T4b
 use export Borst__carriage__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep

 type t4b =
  __rep
 
 predicate in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) =
  (rec__borst__carriage__typtr = (Borst__cartype__rep.to_rep (Borst__carriage.rec__borst__carriage__typtr a.Borst__carriage.__split_discrs)))
 val in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : bool
  ensures { result <-> in_range (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) }
 
 val range_check_ 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : Borst__carriage.carriage
  requires {  (in_range rec__borst__carriage__typtr a) }
  ensures {  (result = a) }
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__carriage__typtr__first__bit 
   : int

 
 val constant borst__carriage__typtr__last__bit 
   : int

 
 val constant borst__carriage__typtr__position 
   : int

 
 axiom borst__carriage__typtr__first__bit_axiom :
  ((borst__carriage__typtr__first__bit ) >= (0 : int))
 
 axiom borst__carriage__typtr__last__bit_axiom :
  ((borst__carriage__typtr__last__bit ) > (borst__carriage__typtr__first__bit ))
 
 axiom borst__carriage__typtr__position_axiom :
  ((borst__carriage__typtr__position ) >= (0 : int))
 
 val constant borst__carriage__cargo__first__bit 
   : int

 
 val constant borst__carriage__cargo__last__bit 
   : int

 
 val constant borst__carriage__cargo__position 
   : int

 
 axiom borst__carriage__cargo__first__bit_axiom :
  ((borst__carriage__cargo__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cargo__last__bit_axiom :
  ((borst__carriage__cargo__last__bit ) > (borst__carriage__cargo__first__bit ))
 
 axiom borst__carriage__cargo__position_axiom :
  ((borst__carriage__cargo__position ) >= (0 : int))
 
 val constant borst__carriage__cars__first__bit 
   : int

 
 val constant borst__carriage__cars__last__bit 
   : int

 
 val constant borst__carriage__cars__position 
   : int

 
 axiom borst__carriage__cars__first__bit_axiom :
  ((borst__carriage__cars__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cars__last__bit_axiom :
  ((borst__carriage__cars__last__bit ) > (borst__carriage__cars__first__bit ))
 
 axiom borst__carriage__cars__position_axiom :
  ((borst__carriage__cars__position ) >= (0 : int))
 
 val constant borst__carriage__maxspeed__first__bit 
   : int

 
 val constant borst__carriage__maxspeed__last__bit 
   : int

 
 val constant borst__carriage__maxspeed__position 
   : int

 
 axiom borst__carriage__maxspeed__first__bit_axiom :
  ((borst__carriage__maxspeed__first__bit ) >= (0 : int))
 
 axiom borst__carriage__maxspeed__last__bit_axiom :
  ((borst__carriage__maxspeed__last__bit ) > (borst__carriage__maxspeed__first__bit ))
 
 axiom borst__carriage__maxspeed__position_axiom :
  ((borst__carriage__maxspeed__position ) >= (0 : int))
 
 val constant borst__carriage__weight__first__bit 
   : int

 
 val constant borst__carriage__weight__last__bit 
   : int

 
 val constant borst__carriage__weight__position 
   : int

 
 axiom borst__carriage__weight__first__bit_axiom :
  ((borst__carriage__weight__first__bit ) >= (0 : int))
 
 axiom borst__carriage__weight__last__bit_axiom :
  ((borst__carriage__weight__last__bit ) > (borst__carriage__weight__first__bit ))
 
 axiom borst__carriage__weight__position_axiom :
  ((borst__carriage__weight__position ) >= (0 : int))
 
 val constant borst__carriage__voyagers__first__bit 
   : int

 
 val constant borst__carriage__voyagers__last__bit 
   : int

 
 val constant borst__carriage__voyagers__position 
   : int

 
 axiom borst__carriage__voyagers__first__bit_axiom :
  ((borst__carriage__voyagers__first__bit ) >= (0 : int))
 
 axiom borst__carriage__voyagers__last__bit_axiom :
  ((borst__carriage__voyagers__last__bit ) > (borst__carriage__voyagers__first__bit ))
 
 axiom borst__carriage__voyagers__position_axiom :
  ((borst__carriage__voyagers__position ) >= (0 : int))
 
 val function user_eq 
   (a : t4b) (b : t4b) : bool
 
 val constant dummy 
   : t4b

 
 type t4b__ref =
  { mutable t4b__content : t4b }
 
 function t4b__ref_t4b__content__projection 
   (a : t4b__ref) : t4b =
  a.t4b__content
 
 meta "model_projection" function t4b__ref_t4b__content__projection
 
 meta "inline:no" function t4b__ref_t4b__content__projection
 
 val t4b__havoc 
   (x : t4b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5b" defined at borst.adb:182, created in Gnat2Why.Types.Translate_Type *)
module Borst__changecarriagetype__T5b
 use export Borst__carriage__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep

 type t5b =
  __rep
 
 predicate in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) =
  (rec__borst__carriage__typtr = (Borst__cartype__rep.to_rep (Borst__carriage.rec__borst__carriage__typtr a.Borst__carriage.__split_discrs)))
 val in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : bool
  ensures { result <-> in_range (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) }
 
 val range_check_ 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : Borst__carriage.carriage
  requires {  (in_range rec__borst__carriage__typtr a) }
  ensures {  (result = a) }
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__carriage__typtr__first__bit 
   : int

 
 val constant borst__carriage__typtr__last__bit 
   : int

 
 val constant borst__carriage__typtr__position 
   : int

 
 axiom borst__carriage__typtr__first__bit_axiom :
  ((borst__carriage__typtr__first__bit ) >= (0 : int))
 
 axiom borst__carriage__typtr__last__bit_axiom :
  ((borst__carriage__typtr__last__bit ) > (borst__carriage__typtr__first__bit ))
 
 axiom borst__carriage__typtr__position_axiom :
  ((borst__carriage__typtr__position ) >= (0 : int))
 
 val constant borst__carriage__voyagers__first__bit 
   : int

 
 val constant borst__carriage__voyagers__last__bit 
   : int

 
 val constant borst__carriage__voyagers__position 
   : int

 
 axiom borst__carriage__voyagers__first__bit_axiom :
  ((borst__carriage__voyagers__first__bit ) >= (0 : int))
 
 axiom borst__carriage__voyagers__last__bit_axiom :
  ((borst__carriage__voyagers__last__bit ) > (borst__carriage__voyagers__first__bit ))
 
 axiom borst__carriage__voyagers__position_axiom :
  ((borst__carriage__voyagers__position ) >= (0 : int))
 
 val constant borst__carriage__cars__first__bit 
   : int

 
 val constant borst__carriage__cars__last__bit 
   : int

 
 val constant borst__carriage__cars__position 
   : int

 
 axiom borst__carriage__cars__first__bit_axiom :
  ((borst__carriage__cars__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cars__last__bit_axiom :
  ((borst__carriage__cars__last__bit ) > (borst__carriage__cars__first__bit ))
 
 axiom borst__carriage__cars__position_axiom :
  ((borst__carriage__cars__position ) >= (0 : int))
 
 val constant borst__carriage__maxspeed__first__bit 
   : int

 
 val constant borst__carriage__maxspeed__last__bit 
   : int

 
 val constant borst__carriage__maxspeed__position 
   : int

 
 axiom borst__carriage__maxspeed__first__bit_axiom :
  ((borst__carriage__maxspeed__first__bit ) >= (0 : int))
 
 axiom borst__carriage__maxspeed__last__bit_axiom :
  ((borst__carriage__maxspeed__last__bit ) > (borst__carriage__maxspeed__first__bit ))
 
 axiom borst__carriage__maxspeed__position_axiom :
  ((borst__carriage__maxspeed__position ) >= (0 : int))
 
 val constant borst__carriage__weight__first__bit 
   : int

 
 val constant borst__carriage__weight__last__bit 
   : int

 
 val constant borst__carriage__weight__position 
   : int

 
 axiom borst__carriage__weight__first__bit_axiom :
  ((borst__carriage__weight__first__bit ) >= (0 : int))
 
 axiom borst__carriage__weight__last__bit_axiom :
  ((borst__carriage__weight__last__bit ) > (borst__carriage__weight__first__bit ))
 
 axiom borst__carriage__weight__position_axiom :
  ((borst__carriage__weight__position ) >= (0 : int))
 
 val constant borst__carriage__cargo__first__bit 
   : int

 
 val constant borst__carriage__cargo__last__bit 
   : int

 
 val constant borst__carriage__cargo__position 
   : int

 
 axiom borst__carriage__cargo__first__bit_axiom :
  ((borst__carriage__cargo__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cargo__last__bit_axiom :
  ((borst__carriage__cargo__last__bit ) > (borst__carriage__cargo__first__bit ))
 
 axiom borst__carriage__cargo__position_axiom :
  ((borst__carriage__cargo__position ) >= (0 : int))
 
 val function user_eq 
   (a : t5b) (b : t5b) : bool
 
 val constant dummy 
   : t5b

 
 type t5b__ref =
  { mutable t5b__content : t5b }
 
 function t5b__ref_t5b__content__projection 
   (a : t5b__ref) : t5b =
  a.t5b__content
 
 meta "model_projection" function t5b__ref_t5b__content__projection
 
 meta "inline:no" function t5b__ref_t5b__content__projection
 
 val t5b__havoc 
   (x : t5b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S6b" defined at borst.adb:225, created in Gnat2Why.Types.Translate_Type *)
module Borst__calcweight__S6b
 use export Borst__carriage__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep

 type s6b =
  __rep
 
 predicate in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) =
  (rec__borst__carriage__typtr = (Borst__cartype__rep.to_rep (Borst__carriage.rec__borst__carriage__typtr a.Borst__carriage.__split_discrs)))
 val in_range 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : bool
  ensures { result <-> in_range (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) }
 
 val range_check_ 
   (rec__borst__carriage__typtr : int) (a : Borst__carriage.carriage) : Borst__carriage.carriage
  requires {  (in_range rec__borst__carriage__typtr a) }
  ensures {  (result = a) }
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant borst__carriage__typtr__first__bit 
   : int

 
 val constant borst__carriage__typtr__last__bit 
   : int

 
 val constant borst__carriage__typtr__position 
   : int

 
 axiom borst__carriage__typtr__first__bit_axiom :
  ((borst__carriage__typtr__first__bit ) >= (0 : int))
 
 axiom borst__carriage__typtr__last__bit_axiom :
  ((borst__carriage__typtr__last__bit ) > (borst__carriage__typtr__first__bit ))
 
 axiom borst__carriage__typtr__position_axiom :
  ((borst__carriage__typtr__position ) >= (0 : int))
 
 val constant borst__carriage__cars__first__bit 
   : int

 
 val constant borst__carriage__cars__last__bit 
   : int

 
 val constant borst__carriage__cars__position 
   : int

 
 axiom borst__carriage__cars__first__bit_axiom :
  ((borst__carriage__cars__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cars__last__bit_axiom :
  ((borst__carriage__cars__last__bit ) > (borst__carriage__cars__first__bit ))
 
 axiom borst__carriage__cars__position_axiom :
  ((borst__carriage__cars__position ) >= (0 : int))
 
 val constant borst__carriage__maxspeed__first__bit 
   : int

 
 val constant borst__carriage__maxspeed__last__bit 
   : int

 
 val constant borst__carriage__maxspeed__position 
   : int

 
 axiom borst__carriage__maxspeed__first__bit_axiom :
  ((borst__carriage__maxspeed__first__bit ) >= (0 : int))
 
 axiom borst__carriage__maxspeed__last__bit_axiom :
  ((borst__carriage__maxspeed__last__bit ) > (borst__carriage__maxspeed__first__bit ))
 
 axiom borst__carriage__maxspeed__position_axiom :
  ((borst__carriage__maxspeed__position ) >= (0 : int))
 
 val constant borst__carriage__weight__first__bit 
   : int

 
 val constant borst__carriage__weight__last__bit 
   : int

 
 val constant borst__carriage__weight__position 
   : int

 
 axiom borst__carriage__weight__first__bit_axiom :
  ((borst__carriage__weight__first__bit ) >= (0 : int))
 
 axiom borst__carriage__weight__last__bit_axiom :
  ((borst__carriage__weight__last__bit ) > (borst__carriage__weight__first__bit ))
 
 axiom borst__carriage__weight__position_axiom :
  ((borst__carriage__weight__position ) >= (0 : int))
 
 val constant borst__carriage__cargo__first__bit 
   : int

 
 val constant borst__carriage__cargo__last__bit 
   : int

 
 val constant borst__carriage__cargo__position 
   : int

 
 axiom borst__carriage__cargo__first__bit_axiom :
  ((borst__carriage__cargo__first__bit ) >= (0 : int))
 
 axiom borst__carriage__cargo__last__bit_axiom :
  ((borst__carriage__cargo__last__bit ) > (borst__carriage__cargo__first__bit ))
 
 axiom borst__carriage__cargo__position_axiom :
  ((borst__carriage__cargo__position ) >= (0 : int))
 
 val constant borst__carriage__voyagers__first__bit 
   : int

 
 val constant borst__carriage__voyagers__last__bit 
   : int

 
 val constant borst__carriage__voyagers__position 
   : int

 
 axiom borst__carriage__voyagers__first__bit_axiom :
  ((borst__carriage__voyagers__first__bit ) >= (0 : int))
 
 axiom borst__carriage__voyagers__last__bit_axiom :
  ((borst__carriage__voyagers__last__bit ) > (borst__carriage__voyagers__first__bit ))
 
 axiom borst__carriage__voyagers__position_axiom :
  ((borst__carriage__voyagers__position ) >= (0 : int))
 
 val function user_eq 
   (a : s6b) (b : s6b) : bool
 
 val constant dummy 
   : s6b

 
 type s6b__ref =
  { mutable s6b__content : s6b }
 
 function s6b__ref_s6b__content__projection 
   (a : s6b__ref) : s6b =
  a.s6b__content
 
 meta "model_projection" function s6b__ref_s6b__content__projection
 
 meta "inline:no" function s6b__ref_s6b__content__projection
 
 val s6b__havoc 
   (x : s6b__ref) : unit
  writes {x}

end
(* Module for defining a ref holding the value of variable "borstmobile" defined at borst.ads:53, created in Gnat2Why.Decls.Translate_Variable *)
module Borst__borstmobile
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__train as Borst__train

 val borstmobile__split_fields [#"borst.ads" 53 0 0][@model_projected] [@name:BorstMobile] [@model_trace:4335]  : Borst__train.__split_fields__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "borstmobile" defined at borst.ads:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__borstmobile___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "heat" defined at borst.adb:79, created in Gnat2Why.Decls.Translate_Variable *)
module Borst__getheat__heat
 use        "_gnatprove_standard".Main
 use        "int".Int

 val heat [#"borst.adb" 79 0 0][@model_trace:2875] [@model_projected] [@name:heat]  : int__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "heat" defined at borst.adb:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__getheat__heat___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "total" defined at borst.adb:226, created in Gnat2Why.Decls.Translate_Variable *)
module Borst__calcweight__total
 use        "_gnatprove_standard".Main
 use        "int".Int

 val total [#"borst.adb" 226 0 0][@model_projected] [@name:Total] [@model_trace:3828]  : int__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "total" defined at borst.adb:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Borst__calcweight__total___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__short_short_integer as Standard__short_short_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool) =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_4)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_5 : int) (temp___skip_top_level_6 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_5 : int) (temp___skip_top_level_6 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_5 : int) (temp___skip_top_level_6 : bool) }

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__short_integer as Standard__short_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool) =
  (if (( temp___is_init_7 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_11)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_12 : int) (temp___skip_top_level_13 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_12 : int) (temp___skip_top_level_13 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_12 : int) (temp___skip_top_level_13 : bool) }

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool) =
  (if (( temp___is_init_14 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_18)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_19 : int) (temp___skip_top_level_20 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_19 : int) (temp___skip_top_level_20 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_19 : int) (temp___skip_top_level_20 : bool) }

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__long_integer as Standard__long_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool) =
  (if (( temp___is_init_21 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_25)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_26 : int) (temp___skip_top_level_27 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_26 : int) (temp___skip_top_level_27 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_26 : int) (temp___skip_top_level_27 : bool) }

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__long_long_integer as Standard__long_long_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool) =
  (if (( temp___is_init_28 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_32)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_33 : int) (temp___skip_top_level_34 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_33 : int) (temp___skip_top_level_34 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_33 : int) (temp___skip_top_level_34 : bool) }

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__natural as Standard__natural

 predicate dynamic_invariant [@inline] 
   (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool) =
  (if (( temp___is_init_35 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_39)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_40 : int) (temp___skip_top_level_41 : bool) }

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__positive as Standard__positive

 predicate dynamic_invariant [@inline] 
   (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool) =
  (if (( temp___is_init_42 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_46)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_47 : int) (temp___skip_top_level_48 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_47 : int) (temp___skip_top_level_48 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_47 : int) (temp___skip_top_level_48 : bool) }

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32
 use        Standard__short_float as Standard__short_float

 predicate dynamic_invariant [@inline] 
   (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool) =
  (if (( temp___is_init_49 \/ (Float32.le Standard__short_float.first Standard__short_float.last) )) then (
   (Standard__short_float.dynamic_property Standard__short_float.first Standard__short_float.last temp___expr_53)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool) }

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32
 use        Standard__float as Standard__float

 predicate dynamic_invariant [@inline] 
   (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool) =
  (if (( temp___is_init_56 \/ (Float32.le Standard__float.first Standard__float.last) )) then (
   (Standard__float.dynamic_property Standard__float.first Standard__float.last temp___expr_60)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool) }

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float64 as Float64
 use        Standard__long_float as Standard__long_float

 predicate dynamic_invariant [@inline] 
   (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool) =
  (if (( temp___is_init_63 \/ (Float64.le Standard__long_float.first Standard__long_float.last) )) then (
   (Standard__long_float.dynamic_property Standard__long_float.first Standard__long_float.last temp___expr_67)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool) }

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character

 predicate dynamic_invariant [@inline] 
   (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool) =
  (if (( temp___is_init_70 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_74)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_75 : int) (temp___skip_top_level_76 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_75 : int) (temp___skip_top_level_76 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_75 : int) (temp___skip_top_level_76 : bool) }

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_character as Standard__wide_character

 predicate dynamic_invariant [@inline] 
   (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool) =
  (if (( temp___is_init_77 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_81)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_82 : int) (temp___skip_top_level_83 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_82 : int) (temp___skip_top_level_83 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_82 : int) (temp___skip_top_level_83 : bool) }

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_wide_character as Standard__wide_wide_character

 predicate dynamic_invariant [@inline] 
   (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool) =
  (if (( temp___is_init_84 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_88)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_89 : int) (temp___skip_top_level_90 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_89 : int) (temp___skip_top_level_90 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_89 : int) (temp___skip_top_level_90 : bool) }

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__positive as Standard__positive
 use        Standard__string as Standard__string

 predicate dynamic_invariant [@inline] 
   (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool) =
  (if (temp___skip_constant_93) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_96) (Standard__string.last temp___expr_96))))
 val dynamic_invariant [@inline] 
   (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool) }

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__positive as Standard__positive
 use        Standard__wide_string as Standard__wide_string

 predicate dynamic_invariant [@inline] 
   (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool) =
  (if (temp___skip_constant_100) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_103) (Standard__wide_string.last temp___expr_103))))
 val dynamic_invariant [@inline] 
   (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool) }

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__positive as Standard__positive
 use        Standard__wide_wide_string as Standard__wide_wide_string

 predicate dynamic_invariant [@inline] 
   (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool) =
  (if (temp___skip_constant_107) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_110) (Standard__wide_wide_string.last temp___expr_110))))
 val dynamic_invariant [@inline] 
   (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool) }

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Standard__duration as Standard__duration

 predicate dynamic_invariant [@inline] 
   (temp___expr_116 : Main.__fixed) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool) =
  (if (( temp___is_init_112 \/ (Standard__duration.first <= Standard__duration.last) )) then (
   (Standard__duration.dynamic_property Standard__duration.first Standard__duration.last temp___expr_116)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_116 : Main.__fixed) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_116 : Main.__fixed) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_117 : Main.__fixed) (temp___skip_top_level_118 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_117 : Main.__fixed) (temp___skip_top_level_118 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_117 : Main.__fixed) (temp___skip_top_level_118 : bool) }

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_8 as Standard__integer_8

 predicate dynamic_invariant [@inline] 
   (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool) =
  (if (( temp___is_init_119 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_123)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_124 : int) (temp___skip_top_level_125 : bool) }

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_16 as Standard__integer_16

 predicate dynamic_invariant [@inline] 
   (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool) =
  (if (( temp___is_init_126 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_130)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_131 : int) (temp___skip_top_level_132 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_131 : int) (temp___skip_top_level_132 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_131 : int) (temp___skip_top_level_132 : bool) }

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_32 as Standard__integer_32

 predicate dynamic_invariant [@inline] 
   (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool) =
  (if (( temp___is_init_133 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_137)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_138 : int) (temp___skip_top_level_139 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_138 : int) (temp___skip_top_level_139 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_138 : int) (temp___skip_top_level_139 : bool) }

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_64 as Standard__integer_64

 predicate dynamic_invariant [@inline] 
   (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool) =
  (if (( temp___is_init_140 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_144)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_145 : int) (temp___skip_top_level_146 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_145 : int) (temp___skip_top_level_146 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_145 : int) (temp___skip_top_level_146 : bool) }

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__universal_integer as Standard__universal_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool) =
  (if (( temp___is_init_147 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_151)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_152 : int) (temp___skip_top_level_153 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_152 : int) (temp___skip_top_level_153 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_152 : int) (temp___skip_top_level_153 : bool) }

end

(* Module for possibly declaring a logic function for "addrod" defined at borst.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__addrod
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "removerod" defined at borst.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__removerod
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "domaintenance" defined at borst.ads:89, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__domaintenance
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "startengine" defined at borst.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__startengine
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "stopengine" defined at borst.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__stopengine
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "addtraincar" defined at borst.ads:110, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__addtraincar
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "removetraincar" defined at borst.ads:116, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__removetraincar
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "emergencystop" defined at borst.ads:130, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__emergencystop
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "heatl" defined at borst.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__heatl
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "filltank" defined at borst.ads:140, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__filltank
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "tankl" defined at borst.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__tankl
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "maintl" defined at borst.ads:150, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__maintl
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "speedl" defined at borst.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__speedl
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "changecarriagetype" defined at borst.ads:161, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__changecarriagetype
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "addpassenger" defined at borst.ads:166, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__addpassenger
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "removepassenger" defined at borst.ads:176, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__removepassenger
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "addfreight" defined at borst.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__addfreight
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "removefreight" defined at borst.ads:194, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Borst__removefreight
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "TcontrolrodB" defined at borst.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TcontrolrodB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "controlrod" defined at borst.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__controlrod___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__controlrod as Borst__controlrod

 predicate dynamic_invariant [@inline] 
   (temp___expr_162 : int) (temp___is_init_158 : bool) (temp___skip_constant_159 : bool) (temp___do_toplevel_160 : bool) (temp___do_typ_inv_161 : bool) =
  (if (( temp___is_init_158 \/ (Borst__controlrod.first <= Borst__controlrod.last) )) then (
   (Borst__controlrod.dynamic_property Borst__controlrod.first Borst__controlrod.last temp___expr_162)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_162 : int) (temp___is_init_158 : bool) (temp___skip_constant_159 : bool) (temp___do_toplevel_160 : bool) (temp___do_typ_inv_161 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_162 : int) (temp___is_init_158 : bool) (temp___skip_constant_159 : bool) (temp___do_toplevel_160 : bool) (temp___do_typ_inv_161 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_163 : int) (temp___skip_top_level_164 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_163 : int) (temp___skip_top_level_164 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_163 : int) (temp___skip_top_level_164 : bool) }

end

(* Module giving axioms for type "TenginetempB" defined at borst.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TenginetempB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "enginetemp" defined at borst.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__enginetemp___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__enginetemp as Borst__enginetemp

 predicate dynamic_invariant [@inline] 
   (temp___expr_169 : int) (temp___is_init_165 : bool) (temp___skip_constant_166 : bool) (temp___do_toplevel_167 : bool) (temp___do_typ_inv_168 : bool) =
  (if (( temp___is_init_165 \/ (Borst__enginetemp.first <= Borst__enginetemp.last) )) then (
   (Borst__enginetemp.dynamic_property Borst__enginetemp.first Borst__enginetemp.last temp___expr_169)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_169 : int) (temp___is_init_165 : bool) (temp___skip_constant_166 : bool) (temp___do_toplevel_167 : bool) (temp___do_typ_inv_168 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_169 : int) (temp___is_init_165 : bool) (temp___skip_constant_166 : bool) (temp___do_toplevel_167 : bool) (temp___do_typ_inv_168 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_170 : int) (temp___skip_top_level_171 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_170 : int) (temp___skip_top_level_171 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_170 : int) (temp___skip_top_level_171 : bool) }

end

(* Module giving axioms for type "TspeedB" defined at borst.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TspeedB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "speed" defined at borst.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__speed___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__speed as Borst__speed

 predicate dynamic_invariant [@inline] 
   (temp___expr_176 : int) (temp___is_init_172 : bool) (temp___skip_constant_173 : bool) (temp___do_toplevel_174 : bool) (temp___do_typ_inv_175 : bool) =
  (if (( temp___is_init_172 \/ (Borst__speed.first <= Borst__speed.last) )) then (
   (Borst__speed.dynamic_property Borst__speed.first Borst__speed.last temp___expr_176)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_176 : int) (temp___is_init_172 : bool) (temp___skip_constant_173 : bool) (temp___do_toplevel_174 : bool) (temp___do_typ_inv_175 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_176 : int) (temp___is_init_172 : bool) (temp___skip_constant_173 : bool) (temp___do_toplevel_174 : bool) (temp___do_typ_inv_175 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_177 : int) (temp___skip_top_level_178 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_177 : int) (temp___skip_top_level_178 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_177 : int) (temp___skip_top_level_178 : bool) }

end

(* Module giving axioms for type "TlevelB" defined at borst.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TlevelB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "level" defined at borst.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__level___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__level as Borst__level

 predicate dynamic_invariant [@inline] 
   (temp___expr_183 : int) (temp___is_init_179 : bool) (temp___skip_constant_180 : bool) (temp___do_toplevel_181 : bool) (temp___do_typ_inv_182 : bool) =
  (if (( temp___is_init_179 \/ (Borst__level.first <= Borst__level.last) )) then (
   (Borst__level.dynamic_property Borst__level.first Borst__level.last temp___expr_183)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_183 : int) (temp___is_init_179 : bool) (temp___skip_constant_180 : bool) (temp___do_toplevel_181 : bool) (temp___do_typ_inv_182 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_183 : int) (temp___is_init_179 : bool) (temp___skip_constant_180 : bool) (temp___do_toplevel_181 : bool) (temp___do_typ_inv_182 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_184 : int) (temp___skip_top_level_185 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_184 : int) (temp___skip_top_level_185 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_184 : int) (temp___skip_top_level_185 : bool) }

end

(* Module giving axioms for type "power" defined at borst.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__power___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__power as Borst__power

 predicate dynamic_invariant [@inline] 
   (temp___expr_190 : int) (temp___is_init_186 : bool) (temp___skip_constant_187 : bool) (temp___do_toplevel_188 : bool) (temp___do_typ_inv_189 : bool) =
  (if (( temp___is_init_186 \/ (Borst__power.first <= Borst__power.last) )) then (
   (Borst__power.dynamic_property Borst__power.first Borst__power.last temp___expr_190)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_190 : int) (temp___is_init_186 : bool) (temp___skip_constant_187 : bool) (temp___do_toplevel_188 : bool) (temp___do_typ_inv_189 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_190 : int) (temp___is_init_186 : bool) (temp___skip_constant_187 : bool) (temp___do_toplevel_188 : bool) (temp___do_typ_inv_189 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_191 : int) (temp___skip_top_level_192 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_191 : int) (temp___skip_top_level_192 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_191 : int) (temp___skip_top_level_192 : bool) }

end

(* Module giving axioms for type "TlastmaintainedB" defined at borst.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TlastmaintainedB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "lastmaintained" defined at borst.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__lastmaintained___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__lastmaintained as Borst__lastmaintained

 predicate dynamic_invariant [@inline] 
   (temp___expr_197 : int) (temp___is_init_193 : bool) (temp___skip_constant_194 : bool) (temp___do_toplevel_195 : bool) (temp___do_typ_inv_196 : bool) =
  (if (( temp___is_init_193 \/ (Borst__lastmaintained.first <= Borst__lastmaintained.last) )) then (
   (Borst__lastmaintained.dynamic_property Borst__lastmaintained.first Borst__lastmaintained.last temp___expr_197)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_197 : int) (temp___is_init_193 : bool) (temp___skip_constant_194 : bool) (temp___do_toplevel_195 : bool) (temp___do_typ_inv_196 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_197 : int) (temp___is_init_193 : bool) (temp___skip_constant_194 : bool) (temp___do_toplevel_195 : bool) (temp___do_typ_inv_196 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_198 : int) (temp___skip_top_level_199 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_198 : int) (temp___skip_top_level_199 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_198 : int) (temp___skip_top_level_199 : bool) }

end

(* Module giving axioms for type "light" defined at borst.ads:18, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__light___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__light as Borst__light

 predicate dynamic_invariant [@inline] 
   (temp___expr_204 : int) (temp___is_init_200 : bool) (temp___skip_constant_201 : bool) (temp___do_toplevel_202 : bool) (temp___do_typ_inv_203 : bool) =
  (if (( temp___is_init_200 \/ (Borst__light.first <= Borst__light.last) )) then (
   (Borst__light.dynamic_property Borst__light.first Borst__light.last temp___expr_204)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_204 : int) (temp___is_init_200 : bool) (temp___skip_constant_201 : bool) (temp___do_toplevel_202 : bool) (temp___do_typ_inv_203 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_204 : int) (temp___is_init_200 : bool) (temp___skip_constant_201 : bool) (temp___do_toplevel_202 : bool) (temp___do_typ_inv_203 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_205 : int) (temp___skip_top_level_206 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_205 : int) (temp___skip_top_level_206 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_205 : int) (temp___skip_top_level_206 : bool) }

end

(* Module giving axioms for type "cartype" defined at borst.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__cartype___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__cartype as Borst__cartype

 predicate dynamic_invariant [@inline] 
   (temp___expr_211 : int) (temp___is_init_207 : bool) (temp___skip_constant_208 : bool) (temp___do_toplevel_209 : bool) (temp___do_typ_inv_210 : bool) =
  (if (( temp___is_init_207 \/ (Borst__cartype.first <= Borst__cartype.last) )) then (
   (Borst__cartype.dynamic_property Borst__cartype.first Borst__cartype.last temp___expr_211)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_211 : int) (temp___is_init_207 : bool) (temp___skip_constant_208 : bool) (temp___do_toplevel_209 : bool) (temp___do_typ_inv_210 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_211 : int) (temp___is_init_207 : bool) (temp___skip_constant_208 : bool) (temp___do_toplevel_209 : bool) (temp___do_typ_inv_210 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_212 : int) (temp___skip_top_level_213 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_212 : int) (temp___skip_top_level_213 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_212 : int) (temp___skip_top_level_213 : bool) }

end

(* Module giving axioms for type "TmassB" defined at borst.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TmassB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "mass" defined at borst.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__mass___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__mass as Borst__mass

 predicate dynamic_invariant [@inline] 
   (temp___expr_218 : int) (temp___is_init_214 : bool) (temp___skip_constant_215 : bool) (temp___do_toplevel_216 : bool) (temp___do_typ_inv_217 : bool) =
  (if (( temp___is_init_214 \/ (Borst__mass.first <= Borst__mass.last) )) then (
   (Borst__mass.dynamic_property Borst__mass.first Borst__mass.last temp___expr_218)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_218 : int) (temp___is_init_214 : bool) (temp___skip_constant_215 : bool) (temp___do_toplevel_216 : bool) (temp___do_typ_inv_217 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_218 : int) (temp___is_init_214 : bool) (temp___skip_constant_215 : bool) (temp___do_toplevel_216 : bool) (temp___do_typ_inv_217 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_219 : int) (temp___skip_top_level_220 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_219 : int) (temp___skip_top_level_220 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_219 : int) (temp___skip_top_level_220 : bool) }

end

(* Module giving axioms for type "TnumcarriagesB" defined at borst.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TnumcarriagesB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "numcarriages" defined at borst.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__numcarriages___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__numcarriages as Borst__numcarriages

 predicate dynamic_invariant [@inline] 
   (temp___expr_225 : int) (temp___is_init_221 : bool) (temp___skip_constant_222 : bool) (temp___do_toplevel_223 : bool) (temp___do_typ_inv_224 : bool) =
  (if (( temp___is_init_221 \/ (Borst__numcarriages.first <= Borst__numcarriages.last) )) then (
   (Borst__numcarriages.dynamic_property Borst__numcarriages.first Borst__numcarriages.last temp___expr_225)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_225 : int) (temp___is_init_221 : bool) (temp___skip_constant_222 : bool) (temp___do_toplevel_223 : bool) (temp___do_typ_inv_224 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_225 : int) (temp___is_init_221 : bool) (temp___skip_constant_222 : bool) (temp___do_toplevel_223 : bool) (temp___do_typ_inv_224 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_226 : int) (temp___skip_top_level_227 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_226 : int) (temp___skip_top_level_227 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_226 : int) (temp___skip_top_level_227 : bool) }

end

(* Module giving axioms for type "TfreightweightB" defined at borst.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TfreightweightB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "freightweight" defined at borst.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__freightweight___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__freightweight as Borst__freightweight

 predicate dynamic_invariant [@inline] 
   (temp___expr_232 : int) (temp___is_init_228 : bool) (temp___skip_constant_229 : bool) (temp___do_toplevel_230 : bool) (temp___do_typ_inv_231 : bool) =
  (if (( temp___is_init_228 \/ (Borst__freightweight.first <= Borst__freightweight.last) )) then (
   (Borst__freightweight.dynamic_property Borst__freightweight.first Borst__freightweight.last temp___expr_232)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_232 : int) (temp___is_init_228 : bool) (temp___skip_constant_229 : bool) (temp___do_toplevel_230 : bool) (temp___do_typ_inv_231 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_232 : int) (temp___is_init_228 : bool) (temp___skip_constant_229 : bool) (temp___do_toplevel_230 : bool) (temp___do_typ_inv_231 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_233 : int) (temp___skip_top_level_234 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_233 : int) (temp___skip_top_level_234 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_233 : int) (temp___skip_top_level_234 : bool) }

end

(* Module giving axioms for type "TpassengercountB" defined at borst.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__TpassengercountB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "passengercount" defined at borst.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__passengercount___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__passengercount as Borst__passengercount

 predicate dynamic_invariant [@inline] 
   (temp___expr_239 : int) (temp___is_init_235 : bool) (temp___skip_constant_236 : bool) (temp___do_toplevel_237 : bool) (temp___do_typ_inv_238 : bool) =
  (if (( temp___is_init_235 \/ (Borst__passengercount.first <= Borst__passengercount.last) )) then (
   (Borst__passengercount.dynamic_property Borst__passengercount.first Borst__passengercount.last temp___expr_239)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_239 : int) (temp___is_init_235 : bool) (temp___skip_constant_236 : bool) (temp___do_toplevel_237 : bool) (temp___do_typ_inv_238 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_239 : int) (temp___is_init_235 : bool) (temp___skip_constant_236 : bool) (temp___do_toplevel_237 : bool) (temp___do_typ_inv_238 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_240 : int) (temp___skip_top_level_241 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_240 : int) (temp___skip_top_level_241 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_240 : int) (temp___skip_top_level_241 : bool) }

end

(* Module giving axioms for type "carriage" defined at borst.ads:25, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__carriage___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep

 predicate dynamic_invariant [@inline] 
   (temp___expr_246 : Borst__carriage.carriage) (temp___is_init_242 : bool) (temp___skip_constant_243 : bool) (temp___do_toplevel_244 : bool) (temp___do_typ_inv_245 : bool) =
  true
 val dynamic_invariant [@inline] 
   (temp___expr_246 : Borst__carriage.carriage) (temp___is_init_242 : bool) (temp___skip_constant_243 : bool) (temp___do_toplevel_244 : bool) (temp___do_typ_inv_245 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_246 : Borst__carriage.carriage) (temp___is_init_242 : bool) (temp___skip_constant_243 : bool) (temp___do_toplevel_244 : bool) (temp___do_typ_inv_245 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_248 : Borst__carriage.carriage) (temp___skip_top_level_249 : bool) =
  ( ((Borst__carriage.attr__constrained temp___expr_248) = False) /\ (let temp___250 [@mlw:proxy_symbol] [@introduced] = temp___expr_248.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr in (
   ((Borst__cartype__rep.to_rep temp___expr_248.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int))))
   )
 val default_initial_assumption [@inline] 
   (temp___expr_248 : Borst__carriage.carriage) (temp___skip_top_level_249 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_248 : Borst__carriage.carriage) (temp___skip_top_level_249 : bool) }

end

(* Module giving axioms for type "engine" defined at borst.ads:35, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__engine___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__engine as Borst__engine

 predicate dynamic_invariant [@inline] 
   (temp___expr_260 : Borst__engine.engine) (temp___is_init_256 : bool) (temp___skip_constant_257 : bool) (temp___do_toplevel_258 : bool) (temp___do_typ_inv_259 : bool) =
  true
 val dynamic_invariant [@inline] 
   (temp___expr_260 : Borst__engine.engine) (temp___is_init_256 : bool) (temp___skip_constant_257 : bool) (temp___do_toplevel_258 : bool) (temp___do_typ_inv_259 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_260 : Borst__engine.engine) (temp___is_init_256 : bool) (temp___skip_constant_257 : bool) (temp___do_toplevel_258 : bool) (temp___do_typ_inv_259 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_261 : Borst__engine.engine) (temp___skip_top_level_262 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_261 : Borst__engine.engine) (temp___skip_top_level_262 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_261 : Borst__engine.engine) (temp___skip_top_level_262 : bool) }

end

(* Module giving axioms for type "train" defined at borst.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__train___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__train as Borst__train
 use        Borst__carriage as Borst__carriage
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep

 predicate dynamic_invariant [@inline] 
   (temp___expr_275 : Borst__train.train) (temp___is_init_271 : bool) (temp___skip_constant_272 : bool) (temp___do_toplevel_273 : bool) (temp___do_typ_inv_274 : bool) =
  (if ((Borst__train.borst__train__cart__pred temp___expr_275)) then (
   ((Borst__carriage.attr__constrained temp___expr_275.Borst__train.__split_fields.Borst__train.rec__borst__train__cart) = False)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_275 : Borst__train.train) (temp___is_init_271 : bool) (temp___skip_constant_272 : bool) (temp___do_toplevel_273 : bool) (temp___do_typ_inv_274 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_275 : Borst__train.train) (temp___is_init_271 : bool) (temp___skip_constant_272 : bool) (temp___do_toplevel_273 : bool) (temp___do_typ_inv_274 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_277 : Borst__train.train) (temp___skip_top_level_278 : bool) =
  (if ((Borst__train.borst__train__cart__pred temp___expr_277)) then (
   (let temp___289 [@mlw:proxy_symbol] [@introduced] = temp___expr_277.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
    ( ((Borst__carriage.attr__constrained temp___289) = False) /\ (let temp___290 [@mlw:proxy_symbol] [@introduced] = temp___expr_277.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr in (
     ((Borst__cartype__rep.to_rep temp___expr_277.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int))))
     )))
  ) else true)
 val default_initial_assumption [@inline] 
   (temp___expr_277 : Borst__train.train) (temp___skip_top_level_278 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_277 : Borst__train.train) (temp___skip_top_level_278 : bool) }

end

(* Module giving axioms for type "T1s" defined at borst.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__T1s___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T4b" defined at borst.adb:176, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__changecarriagetype__T4b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T5b" defined at borst.adb:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__changecarriagetype__T5b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "S6b" defined at borst.adb:225, created in Gnat2Why.Types.Generate_Type_Completion *)
module Borst__calcweight__S6b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight__car as Borst__calcweight__car
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__calcweight__S6b as Borst__calcweight__S6b

 predicate dynamic_invariant [@inline] 
   (temp___expr_339 : Borst__calcweight__S6b.s6b) (temp___is_init_335 : bool) (temp___skip_constant_336 : bool) (temp___do_toplevel_337 : bool) (temp___do_typ_inv_338 : bool) =
  ( (if (temp___skip_constant_336) then (
   true) else (
   (Borst__calcweight__S6b.in_range (Borst__cartype__rep.to_rep Borst__calcweight__car.car.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) (Borst__calcweight__S6b.to_base temp___expr_339)))) /\ ((Borst__calcweight__S6b.attr__constrained temp___expr_339) = True) )
 val dynamic_invariant [@inline] 
   (temp___expr_339 : Borst__calcweight__S6b.s6b) (temp___is_init_335 : bool) (temp___skip_constant_336 : bool) (temp___do_toplevel_337 : bool) (temp___do_typ_inv_338 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_339 : Borst__calcweight__S6b.s6b) (temp___is_init_335 : bool) (temp___skip_constant_336 : bool) (temp___do_toplevel_337 : bool) (temp___do_typ_inv_338 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_341 : Borst__calcweight__S6b.s6b) (temp___skip_top_level_342 : bool) =
  ( ((Borst__calcweight__S6b.attr__constrained temp___expr_341) = True) /\ (let temp___343 [@mlw:proxy_symbol] [@introduced] = temp___expr_341.Borst__calcweight__S6b.__split_discrs.Borst__carriage.rec__borst__carriage__typtr in (
   ((Borst__cartype__rep.to_rep temp___expr_341.Borst__calcweight__S6b.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (Borst__cartype__rep.to_rep Borst__calcweight__car.car.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr))))
   )
 val default_initial_assumption [@inline] 
   (temp___expr_341 : Borst__calcweight__S6b.s6b) (temp___skip_top_level_342 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_341 : Borst__calcweight__S6b.s6b) (temp___skip_top_level_342 : bool) }

end
(* Module for declaring a program function (and possibly an axiom) for "addrod" defined at borst.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__addrod___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__engine as Borst__engine

 val addrod 
   (__void_param : unit) : unit
  requires {  ( ( ( ( [@GP_Pretty_Ada:4455] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) < (5 : int)) ) /\ ( [@GP_Pretty_Ada:4465] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4475] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4485] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6098] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "removerod" defined at borst.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__removerod___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__engine as Borst__engine

 val removerod 
   (__void_param : unit) : unit
  requires {  ( ( ( ( [@GP_Pretty_Ada:4527] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:4537] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4544] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (90 : int)) ) ) /\ ( [@GP_Pretty_Ada:4557] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6188] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "domaintenance" defined at borst.ads:89, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__domaintenance___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__engine as Borst__engine

 val domaintenance 
   (__void_param : unit) : unit
  requires {  ( ( ( ( [@GP_Pretty_Ada:4600] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4608] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) = (5 : int)) ) ) /\ ( [@GP_Pretty_Ada:4616] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4626] ((Borst__enginetemp__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat) = (0 : int)) ) ) }
  ensures {  ( ( ( ( [@GP_Pretty_Ada:4638] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4646] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4656] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) = (10 : int)) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "startengine" defined at borst.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__startengine___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__engine as Borst__engine

 val startengine 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:4690] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4698] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) = (5 : int)) ) ) /\ ( [@GP_Pretty_Ada:4706] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6369] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "stopengine" defined at borst.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__stopengine___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__engine as Borst__engine

 val stopengine 
   (__void_param : unit) : unit
  requires {  ( [@GP_Pretty_Ada:6416] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) }
  ensures {  ( ( ( [@GP_Pretty_Ada:4759] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4765] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtraincar" defined at borst.ads:110, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__addtraincar___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep

 val addtraincar 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4797] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4807] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) < (10 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6507] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) <= (10 : int)) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "removetraincar" defined at borst.ads:116, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__removetraincar___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep

 val removetraincar 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4845] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4855] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) < (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6568] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) >= (10 : int)) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "getmax" defined at borst.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__getmax___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__getmax as Borst__getmax
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom

 val getmax 
   (num : int) : int
  requires {  true }
  ensures {  ( ( (result = (Borst__getmax.getmax num)) /\ (Borst__getmax.getmax__function_guard result num) )/\( (Borst__speed___axiom.dynamic_invariant result True False True True) /\ ( ( [@GP_Pretty_Ada:4897] (result <= (200 : int)) ) /\ ( [@GP_Pretty_Ada:4903] (result >= (100 : int)) ) ) ) ) }
 
 axiom getmax__post_axiom :
  (forall num   : int [(Borst__getmax.getmax num)].
   ( (Borst__numcarriages___axiom.dynamic_invariant num True True True True) -> (let result = (Borst__getmax.getmax num) in (
    (if ((Borst__getmax.getmax__function_guard result num)) then (
     ( ( ( ( [@GP_Pretty_Ada:4897] (result <= (200 : int)) ) /\ ( [@GP_Pretty_Ada:4903] (result >= (100 : int)) ) ) /\ (Borst__speed___axiom.dynamic_invariant result True False True True) )/\true )) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "getheat" defined at borst.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__getheat___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__getheat as Borst__getheat
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__level___axiom as Borst__level___axiom

 val getheat 
   (water : int) (rods : int) : int
  requires {  true }
  ensures {  ( ( (result = (Borst__getheat.getheat water rods)) /\ (Borst__getheat.getheat__function_guard result water rods) )/\( (Borst__enginetemp___axiom.dynamic_invariant result True False True True) /\ ( [@GP_Pretty_Ada:6619] (result <= (2500 : int)) ) ) ) }
 
 axiom getheat__post_axiom :
  (forall water   rods   : int [(Borst__getheat.getheat water rods)].
   ( ( (Borst__level___axiom.dynamic_invariant water True True True True) /\ (Borst__controlrod___axiom.dynamic_invariant rods True True True True) ) -> (let result = (Borst__getheat.getheat water rods) in (
    (if ((Borst__getheat.getheat__function_guard result water rods)) then (
     ( ( ( [@GP_Pretty_Ada:6619] (result <= (2500 : int)) ) /\ (Borst__enginetemp___axiom.dynamic_invariant result True False True True) )/\true )) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "getcurrentspeed" defined at borst.ads:127, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__getcurrentspeed___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__getcurrentspeed as Borst__getcurrentspeed
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__mass___axiom as Borst__mass___axiom

 val getcurrentspeed 
   (car : int) (heat : int) : int
  requires {  true }
  ensures {  ( ( (result = (Borst__getcurrentspeed.getcurrentspeed car heat)) /\ (Borst__getcurrentspeed.getcurrentspeed__function_guard result car heat) )/\( (Borst__speed___axiom.dynamic_invariant result True False True True) /\ ( ( [@GP_Pretty_Ada:4979] (result <= (250 : int)) ) /\ ( [@GP_Pretty_Ada:4987] (result >= (0 : int)) ) ) ) ) }
 
 axiom getcurrentspeed__post_axiom :
  (forall car   heat   : int [(Borst__getcurrentspeed.getcurrentspeed car heat)].
   ( ( (Borst__mass___axiom.dynamic_invariant car True True True True) /\ (Borst__enginetemp___axiom.dynamic_invariant heat True True True True) ) -> (let result = (Borst__getcurrentspeed.getcurrentspeed car heat) in (
    (if ((Borst__getcurrentspeed.getcurrentspeed__function_guard result car heat)) then (
     ( ( ( ( [@GP_Pretty_Ada:4979] (result <= (250 : int)) ) /\ ( [@GP_Pretty_Ada:4987] (result >= (0 : int)) ) ) /\ (Borst__speed___axiom.dynamic_invariant result True False True True) )/\true )) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "emergencystop" defined at borst.ads:130, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__emergencystop___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__engine as Borst__engine

 val emergencystop 
   (__void_param : unit) : unit
  requires {  ( [@GP_Pretty_Ada:6676] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) }
  ensures {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "heatl" defined at borst.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__heatl___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__engine as Borst__engine

 val heatl 
   (__void_param : unit) : unit
  requires {  ( [@GP_Pretty_Ada:6707] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6737] ( ( ((Borst__light__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight) = (0 : int)) \/ ((Borst__light__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight) = (1 : int)) ) \/ ((Borst__light__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight) = (2 : int)) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "filltank" defined at borst.ads:140, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__filltank___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__engine as Borst__engine

 val filltank 
   (__void_param : unit) : unit
  requires {  ( [@GP_Pretty_Ada:6774] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6789] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) = (10 : int)) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "tankl" defined at borst.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__tankl___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__engine as Borst__engine

 val tankl 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:5129] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:5139] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6857] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) = ((Borst__level__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank )) - (1 : int))) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "maintl" defined at borst.ads:150, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__maintl___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__engine as Borst__engine

 val maintl 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:5183] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5191] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (100 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:6925] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) = ((Borst__lastmaintained__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance )) + (1 : int))) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "speedl" defined at borst.ads:155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__speedl___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__engine as Borst__engine

 val speedl 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:5237] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (100 : int)) ) /\ ( [@GP_Pretty_Ada:5247] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5257] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) }
  ensures {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "changecarriagetype" defined at borst.ads:161, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__changecarriagetype___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep

 val changecarriagetype 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:5283] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5291] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) }
  ensures {  ( ( ( [@GP_Pretty_Ada:5301] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) ) /\ ( [@GP_Pretty_Ada:5311] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) <> (Borst__cartype__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype ))) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addpassenger" defined at borst.ads:166, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__addpassenger___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Int_Division as Int_Division
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__passengercount as Borst__passengercount
 use        Borst__passengercount__rep as Borst__passengercount__rep

 val addpassenger 
   (__void_param : unit) : unit
  requires {  ( ( ( ( ( ( [@GP_Pretty_Ada:5345] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:5353] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (1 : int)) ) ) /\ ( [@GP_Pretty_Ada:5361] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5371] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) < (1000 : int)) ) ) /\ ( [@GP_Pretty_Ada:5382] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) < ((1000 : int) * (Int_Division.div (Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) (10 : int)))) ) ) /\ ( [@GP_Pretty_Ada:5407] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:7181] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) <= ((1000 : int) * (Int_Division.div (Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) (10 : int)))) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "removepassenger" defined at borst.ads:176, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__removepassenger___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__passengercount as Borst__passengercount
 use        Borst__passengercount__rep as Borst__passengercount__rep

 val removepassenger 
   (__void_param : unit) : unit
  requires {  ( ( ( ( [@GP_Pretty_Ada:5469] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:5477] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (1 : int)) ) ) /\ ( [@GP_Pretty_Ada:5485] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5493] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) }
  ensures {  ( ( ( [@GP_Pretty_Ada:5505] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) <= (Borst__passengercount__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers ))) ) /\ ( [@GP_Pretty_Ada:5519] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) >= (0 : int)) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addfreight" defined at borst.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__addfreight___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Int_Division as Int_Division
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__freightweight__rep as Borst__freightweight__rep

 val addfreight 
   (__void_param : unit) : unit
  requires {  ( ( ( ( ( ( [@GP_Pretty_Ada:5551] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5559] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5567] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5577] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) < (1100 : int)) ) ) /\ ( [@GP_Pretty_Ada:5585] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5596] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) < ((1100 : int) * (Int_Division.div (Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) (10 : int)))) ) ) }
  ensures {  ( ( ( ( [@GP_Pretty_Ada:5626] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) > (Borst__freightweight__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo ))) ) /\ ( [@GP_Pretty_Ada:5640] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5648] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "removefreight" defined at borst.ads:194, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__removefreight___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__freightweight__rep as Borst__freightweight__rep

 val removefreight 
   (__void_param : unit) : unit
  requires {  ( ( ( ( [@GP_Pretty_Ada:5678] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5686] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5694] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5702] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) }
  ensures {  ( ( ( ( ( [@GP_Pretty_Ada:5714] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) = ((Borst__freightweight__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo )) - (1 : int))) ) /\ ( [@GP_Pretty_Ada:5730] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) >= (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5738] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5746] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) /\ (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True True True True) ) }
  reads {Borst__borstmobile.borstmobile__split_fields}
  writes {Borst__borstmobile.borstmobile__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "calcweight" defined at borst.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Borst__calcweight___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight as Borst__calcweight
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom

 val calcweight 
   (wat : int) (car : Borst__carriage.carriage) : int
  requires {  true }
  ensures {  ( ( (result = (Borst__calcweight.calcweight wat car)) /\ (Borst__calcweight.calcweight__function_guard result wat car) )/\( (Borst__mass___axiom.dynamic_invariant result True False True True) /\ ( [@GP_Pretty_Ada:7559] (result <= (1700 : int)) ) ) ) }
 
 axiom calcweight__post_axiom :
  (forall wat   : int.
  (forall car   : Borst__carriage.carriage [(Borst__calcweight.calcweight wat car)].
   ( ( (Borst__level___axiom.dynamic_invariant wat True True True True) /\ (Borst__carriage___axiom.dynamic_invariant car True True True True) ) -> (let result = (Borst__calcweight.calcweight wat car) in (
    (if ((Borst__calcweight.calcweight__function_guard result wat car)) then (
     ( ( ( [@GP_Pretty_Ada:7559] (result <= (1700 : int)) ) /\ (Borst__mass___axiom.dynamic_invariant result True False True True) )/\true )) else true)))
    )))

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "borst" defined at borst.ads:1, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Borst__package_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__controlrod as Borst__controlrod
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__speed as Borst__speed
 use        Borst__level as Borst__level
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__freightweight as Borst__freightweight
 use        Borst__passengercount as Borst__passengercount
 use        Borst__engine as Borst__engine
 use        Borst__T1s as Borst__T1s
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__T1s___axiom as Borst__T1s___axiom

 let def [#"borst.ads" 1 0 0][@GP_Subp:borst.ads:1] 
   (__void_param : unit)
  requires { [#"borst.ads" 1 0 0] true }
   = [@vc:divergent]
  ( ();
  ([#"borst.ads" 1 0 0] ());
  ([#"borst.ads" 12 0 0] ());
  ([#"borst.ads" 13 0 0] ());
  ([#"borst.ads" 14 0 0] ());
  ([#"borst.ads" 15 0 0] ());
  ([#"borst.ads" 16 0 0] ());
  ([#"borst.ads" 17 0 0] ());
  ([#"borst.ads" 18 0 0] ());
  ([#"borst.ads" 19 0 0] ());
  ([#"borst.ads" 20 0 0] ());
  ([#"borst.ads" 21 0 0] ());
  ([#"borst.ads" 22 0 0] ());
  ([#"borst.ads" 23 0 0] ());
  ([#"borst.ads" 30 0 0] ());
  ([#"borst.ads" 25 0 0] ());
  ([#"borst.ads" 35 0 0] ());
  ([#"borst.ads" 46 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ());
  ([#"borst.ads" 53 0 0] ( (let borst__borstmobile__assume = { Borst__train.__split_fields = { Borst__train.rec__borst__train__traintype = (Borst__cartype__rep.of_rep((1 : int))); Borst__train.rec__borst__train__generator = { Borst__engine.__split_fields = { Borst__engine.rec__borst__engine__rods = ( 5 : Borst__controlrod.controlrod ); Borst__engine.rec__borst__engine__powered = (Borst__power__rep.of_rep((1 : int))); Borst__engine.rec__borst__engine__watertank = ( 10 : Borst__level.level ); Borst__engine.rec__borst__engine__heat = ( 0 : Borst__enginetemp.enginetemp ); Borst__engine.rec__borst__engine__maintenance = ( 0 : Borst__lastmaintained.lastmaintained ); Borst__engine.rec__borst__engine__mtnlight = (Borst__light__rep.of_rep((0 : int))); Borst__engine.rec__borst__engine__heatlight = (Borst__light__rep.of_rep((0 : int))); Borst__engine.rec__borst__engine__waterlight = (Borst__light__rep.of_rep((0 : int))) } }; Borst__train.rec__borst__train__cart = { ( { Borst__T1s.__split_discrs = { Borst__carriage.rec__borst__carriage__typtr = (Borst__cartype__rep.of_rep((1 : int))) }; Borst__T1s.__split_fields = { Borst__T1s.rec__borst__carriage__cars = ( 0 : Borst__numcarriages.numcarriages ); Borst__T1s.rec__borst__carriage__maxspeed = ( 0 : Borst__speed.speed ); Borst__T1s.rec__borst__carriage__weight = ( 200 : Borst__mass.mass ); Borst__T1s.rec__borst__carriage__voyagers = ( 0 : Borst__passengercount.passengercount ); Borst__T1s.rec__borst__carriage__cargo = Borst__freightweight.dummy }; Borst__T1s.attr__constrained = true } ) with Borst__carriage.attr__constrained = False }; Borst__train.rec__borst__train__curspeed = ( 0 : Borst__speed.speed ) } } in (
   [#"borst.ads" 53 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( borst__borstmobile__assume.Borst__train.__split_fields ))))
  ;
  [#"borst.ads" 53 0 0] assume { [#"borst.ads" 53 0 0] (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) } ));
  ([#"borst.ads" 71 0 0] ());
  ([#"borst.ads" 78 0 0] ());
  ([#"borst.ads" 74 0 0] ());
  ([#"borst.ads" 73 0 0] ());
  ([#"borst.ads" 72 0 0] ());
  ([#"borst.ads" 80 0 0] ());
  ([#"borst.ads" 87 0 0] ());
  ([#"borst.ads" 83 0 0] ());
  ([#"borst.ads" 82 0 0] ());
  ([#"borst.ads" 81 0 0] ());
  ([#"borst.ads" 89 0 0] ());
  ([#"borst.ads" 94 0 0] ());
  ([#"borst.ads" 92 0 0] ());
  ([#"borst.ads" 91 0 0] ());
  ([#"borst.ads" 90 0 0] ());
  ([#"borst.ads" 97 0 0] ());
  ([#"borst.ads" 102 0 0] ());
  ([#"borst.ads" 100 0 0] ());
  ([#"borst.ads" 99 0 0] ());
  ([#"borst.ads" 98 0 0] ());
  ([#"borst.ads" 104 0 0] ());
  ([#"borst.ads" 108 0 0] ());
  ([#"borst.ads" 107 0 0] ());
  ([#"borst.ads" 106 0 0] ());
  ([#"borst.ads" 105 0 0] ());
  ([#"borst.ads" 110 0 0] ());
  ([#"borst.ads" 114 0 0] ());
  ([#"borst.ads" 113 0 0] ());
  ([#"borst.ads" 112 0 0] ());
  ([#"borst.ads" 111 0 0] ());
  ([#"borst.ads" 116 0 0] ());
  ([#"borst.ads" 119 0 0] ());
  ([#"borst.ads" 118 0 0] ());
  ([#"borst.ads" 117 0 0] ());
  ([#"borst.ads" 121 0 0] ());
  ([#"borst.ads" 122 0 0] ());
  ([#"borst.ads" 124 0 0] ());
  ([#"borst.ads" 125 0 0] ());
  ([#"borst.ads" 127 0 0] ());
  ([#"borst.ads" 128 0 0] ());
  ([#"borst.ads" 130 0 0] ());
  ([#"borst.ads" 132 0 0] ());
  ([#"borst.ads" 131 0 0] ());
  ([#"borst.ads" 134 0 0] ());
  ([#"borst.ads" 137 0 0] ());
  ([#"borst.ads" 136 0 0] ());
  ([#"borst.ads" 135 0 0] ());
  ([#"borst.ads" 140 0 0] ());
  ([#"borst.ads" 143 0 0] ());
  ([#"borst.ads" 142 0 0] ());
  ([#"borst.ads" 141 0 0] ());
  ([#"borst.ads" 145 0 0] ());
  ([#"borst.ads" 148 0 0] ());
  ([#"borst.ads" 147 0 0] ());
  ([#"borst.ads" 146 0 0] ());
  ([#"borst.ads" 150 0 0] ());
  ([#"borst.ads" 153 0 0] ());
  ([#"borst.ads" 152 0 0] ());
  ([#"borst.ads" 151 0 0] ());
  ([#"borst.ads" 155 0 0] ());
  ([#"borst.ads" 157 0 0] ());
  ([#"borst.ads" 156 0 0] ());
  ([#"borst.ads" 161 0 0] ());
  ([#"borst.ads" 164 0 0] ());
  ([#"borst.ads" 163 0 0] ());
  ([#"borst.ads" 162 0 0] ());
  ([#"borst.ads" 166 0 0] ());
  ([#"borst.ads" 174 0 0] ());
  ([#"borst.ads" 169 0 0] ());
  ([#"borst.ads" 168 0 0] ());
  ([#"borst.ads" 167 0 0] ());
  ([#"borst.ads" 176 0 0] ());
  ([#"borst.ads" 182 0 0] ());
  ([#"borst.ads" 179 0 0] ());
  ([#"borst.ads" 178 0 0] ());
  ([#"borst.ads" 177 0 0] ());
  ([#"borst.ads" 184 0 0] ());
  ([#"borst.ads" 192 0 0] ());
  ([#"borst.ads" 187 0 0] ());
  ([#"borst.ads" 186 0 0] ());
  ([#"borst.ads" 185 0 0] ());
  ([#"borst.ads" 194 0 0] ());
  ([#"borst.ads" 200 0 0] ());
  ([#"borst.ads" 197 0 0] ());
  ([#"borst.ads" 196 0 0] ());
  ([#"borst.ads" 195 0 0] ());
  ([#"borst.ads" 203 0 0] ());
  ([#"borst.ads" 204 0 0] ());
  ();
  ([#"borst.adb" 1 0 0] ());
  ([#"borst.adb" 4 0 0] ());
  ([#"borst.adb" 15 0 0] ());
  ([#"borst.adb" 26 0 0] ());
  ([#"borst.adb" 41 0 0] ());
  ([#"borst.adb" 50 0 0] ());
  ([#"borst.adb" 58 0 0] ());
  ([#"borst.adb" 65 0 0] ());
  ([#"borst.adb" 72 0 0] ());
  ([#"borst.adb" 78 0 0] ());
  ([#"borst.adb" 85 0 0] ());
  ([#"borst.adb" 90 0 0] ());
  ([#"borst.adb" 101 0 0] ());
  ([#"borst.adb" 110 0 0] ());
  ([#"borst.adb" 121 0 0] ());
  ([#"borst.adb" 136 0 0] ());
  ([#"borst.adb" 155 0 0] ());
  ([#"borst.adb" 171 0 0] ());
  ([#"borst.adb" 191 0 0] ());
  ([#"borst.adb" 199 0 0] ());
  ([#"borst.adb" 207 0 0] ());
  ([#"borst.adb" 217 0 0] ());
  ([#"borst.adb" 225 0 0] ());
  ();
  ( [@GP_Sloc:borst.adb:238:1] ([#"borst.adb" 238 0 0] ()) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addrod" defined at borst.ads:71, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__addrod__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__getheat___axiom as Borst__getheat___axiom
 use        Borst__getcurrentspeed___axiom as Borst__getcurrentspeed___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__getheat___axiom as Borst__getheat___axiom
 use        Borst__getcurrentspeed___axiom as Borst__getcurrentspeed___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 71 0 0][@GP_Subp:borst.ads:71] 
   (__void_param : unit)
  requires { [#"borst.ads" 71 0 0] true }
  ensures { [#"borst.ads" 71 0 0] ([#"borst.ads" 78 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@GP_Sloc:borst.ads:78:12] [@model_vc_post] [@GP_Id:2] [@comment:     Post=>(BorstMobile.Generator.Powered = On);            ^ borst.ads:78:12:VC_POSTCONDITION] ( [@GP_Sloc:borst.ads:78:12] [@GP_Pretty_Ada:6098] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:71 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:71 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:71 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb(((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) < (5 : int))) (((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) < (100 : int))))) (((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) > (0 : int))))) (((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:71 *)
  ;
   assume {  ( ( ( ( [@GP_Pretty_Ada:4455] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) < (5 : int)) ) /\ ( [@GP_Pretty_Ada:4465] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4475] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4485] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:6:10] ([#"borst.adb" 6 0 0] ()) );
   ( [@GP_Sloc:borst.adb:6:49] ([#"borst.adb" 6 0 0] ()) );
   ( [@GP_Sloc:borst.adb:6:7] ([#"borst.adb" 6 0 0] (if (( ([#"borst.adb" 6 0 0] [#"borst.adb" 6 0 0] (([@branch_id=2317] Main.spark__branch).bool__content <- ( (Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int))) (((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) < (5 : int)))) )));
   ( [@branch_id=2317] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:7:10] ([#"borst.adb" 7 0 0] ()) );
    ( [@GP_Sloc:borst.adb:7:40] ([#"borst.adb" 7 0 0] ()) );
    ( [@GP_Sloc:borst.adb:7:37] ([#"borst.adb" 7 0 0] (let temp___353 [@mlw:proxy_symbol] [@introduced] = (let temp___352 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 7 0 0] begin ensures {true} let _ = (let _ = temp___352.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___352 ) with Borst__train.__split_fields = { ( temp___352.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___351 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 7 0 0] begin ensures {true} let _ = (let _ = temp___351.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods in (
       ()))
       in () end ;
      { ( temp___351 ) with Borst__engine.__split_fields = { ( temp___351.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__rods = (Borst__controlrod__rep.of_rep(([#"borst.adb" 7 0 0] ( [@GP_Shape:if__borstmobile_assign__add] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:         BorstMobile.Generator.Rods := BorstMobile.Generator.Rods + 1;                                                                   ^ borst.adb:7:67:VC_RANGE_CHECK] [@GP_Sloc:borst.adb:7:67] [@GP_Id:0] (Borst__controlrod.range_check_(((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) + (1 : int)))) )))) } } )))
      } } )))
     in (
      (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___353.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:8:10] ([#"borst.adb" 8 0 0] ()) );
    ( [@GP_Sloc:borst.adb:8:47] ([#"borst.adb" 8 0 0] ()) );
    ( [@GP_Sloc:borst.adb:8:44] ([#"borst.adb" 8 0 0] (let temp___356 [@mlw:proxy_symbol] [@introduced] = (let temp___355 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 8 0 0] begin ensures {true} let _ = (let _ = temp___355.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___355 ) with Borst__train.__split_fields = { ( temp___355.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___354 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 8 0 0] begin ensures {true} let _ = (let _ = temp___354.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance in (
       ()))
       in () end ;
      { ( temp___354 ) with Borst__engine.__split_fields = { ( temp___354.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__maintenance = (Borst__lastmaintained__rep.of_rep(([#"borst.adb" 8 0 0] ( [@GP_Shape:if__borstmobile_assign__add] [@vc:annotation] [@GP_Sloc:borst.adb:8:81] [@GP_Reason:VC_RANGE_CHECK] [@comment:         BorstMobile.Generator.Maintenance := BorstMobile.Generator.Maintenance + 1;                                                                                 ^ borst.adb:8:81:VC_RANGE_CHECK] [@GP_Id:1] (Borst__lastmaintained.range_check_(((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) + (1 : int)))) )))) } } )))
      } } )))
     in (
      (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___356.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:9:10] ([#"borst.adb" 9 0 0] ()) );
    ( [@GP_Sloc:borst.adb:9:40] ([#"borst.adb" 9 0 0] ()) );
    ( [@GP_Sloc:borst.adb:9:37] ([#"borst.adb" 9 0 0] (let temp___359 [@mlw:proxy_symbol] [@introduced] = (let temp___358 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 9 0 0] begin ensures {true} let _ = (let _ = temp___358.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___358 ) with Borst__train.__split_fields = { ( temp___358.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___357 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 9 0 0] begin ensures {true} let _ = (let _ = temp___357.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
       ()))
       in () end ;
      { ( temp___357 ) with Borst__engine.__split_fields = { ( temp___357.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = (Borst__enginetemp__rep.of_rep((Borst__getheat___axiom.getheat((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)))))) } } )))
      } } )))
     in (
     [#"borst.adb" 9 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___359.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:10:10] ([#"borst.adb" 10 0 0] ()) );
    ( [@GP_Sloc:borst.adb:10:37] ([#"borst.adb" 10 0 0] ()) );
    ( [@GP_Sloc:borst.adb:10:34] ([#"borst.adb" 10 0 0] (let temp___362 [@mlw:proxy_symbol] [@introduced] = (let temp___361 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 10 0 0] begin ensures {true} let _ = (let _ = temp___361.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___361 ) with Borst__train.__split_fields = { ( temp___361.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___360 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 10 0 0] begin ensures {true} let _ = (let _ = temp___360.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
       ()))
       in () end ;
      { ( temp___360 ) with Borst__carriage.__split_fields = { ( temp___360.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
      } } )))
     in (
     [#"borst.adb" 10 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___362.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:11:10] ([#"borst.adb" 11 0 0] ()) );
    ( [@GP_Sloc:borst.adb:11:34] ([#"borst.adb" 11 0 0] ()) );
    ( [@GP_Sloc:borst.adb:11:31] ([#"borst.adb" 11 0 0] (let temp___364 [@mlw:proxy_symbol] [@introduced] = (let temp___363 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 11 0 0] begin ensures {true} let _ = (let _ = temp___363.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
      ()))
      in () end ;
     { ( temp___363 ) with Borst__train.__split_fields = { ( temp___363.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = (Borst__speed__rep.of_rep((Borst__getcurrentspeed___axiom.getcurrentspeed((Borst__mass__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight))) ((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)))))) } } )))
     in (
     [#"borst.adb" 11 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___364.Borst__train.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removerod" defined at borst.ads:80, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__removerod__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__getheat___axiom as Borst__getheat___axiom
 use        Borst__getcurrentspeed___axiom as Borst__getcurrentspeed___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__getheat___axiom as Borst__getheat___axiom
 use        Borst__getcurrentspeed___axiom as Borst__getcurrentspeed___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 80 0 0][@GP_Subp:borst.ads:80] 
   (__void_param : unit)
  requires { [#"borst.ads" 80 0 0] true }
  ensures { [#"borst.ads" 80 0 0] ([#"borst.ads" 87 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@comment:     Post=>(BorstMobile.Generator.Powered = On);            ^ borst.ads:87:12:VC_POSTCONDITION] [@model_vc_post] [@GP_Id:5] [@GP_Sloc:borst.ads:87:12] ( [@GP_Pretty_Ada:6188] [@GP_Sloc:borst.ads:87:12] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:80 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:80 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:80 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb(((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) > (1 : int))) (((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int))))) (((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) < (90 : int))))) (((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) > (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:80 *)
  ;
   assume {  ( ( ( ( [@GP_Pretty_Ada:4527] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:4537] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4544] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (90 : int)) ) ) /\ ( [@GP_Pretty_Ada:4557] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:17:10] ([#"borst.adb" 17 0 0] ()) );
   ( [@GP_Sloc:borst.adb:17:49] ([#"borst.adb" 17 0 0] ()) );
   ( [@GP_Sloc:borst.adb:17:7] ([#"borst.adb" 17 0 0] (if (( ([#"borst.adb" 17 0 0] [#"borst.adb" 17 0 0] (([@branch_id=2424] Main.spark__branch).bool__content <- ( (Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int))) (((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) > (1 : int)))) )));
   ( [@branch_id=2424] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:18:10] ([#"borst.adb" 18 0 0] ()) );
    ( [@GP_Sloc:borst.adb:18:40] ([#"borst.adb" 18 0 0] ()) );
    ( [@GP_Sloc:borst.adb:18:37] ([#"borst.adb" 18 0 0] (let temp___369 [@mlw:proxy_symbol] [@introduced] = (let temp___368 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 18 0 0] begin ensures {true} let _ = (let _ = temp___368.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___368 ) with Borst__train.__split_fields = { ( temp___368.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___367 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 18 0 0] begin ensures {true} let _ = (let _ = temp___367.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods in (
       ()))
       in () end ;
      { ( temp___367 ) with Borst__engine.__split_fields = { ( temp___367.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__rods = (Borst__controlrod__rep.of_rep(([#"borst.adb" 18 0 0] ( [@comment:         BorstMobile.Generator.Rods := BorstMobile.Generator.Rods - 1;                                                                   ^ borst.adb:18:67:VC_RANGE_CHECK] [@vc:annotation] [@GP_Shape:if__borstmobile_assign__sub] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:borst.adb:18:67] [@GP_Id:3] (Borst__controlrod.range_check_(((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) - (1 : int)))) )))) } } )))
      } } )))
     in (
      (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___369.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:19:10] ([#"borst.adb" 19 0 0] ()) );
    ( [@GP_Sloc:borst.adb:19:47] ([#"borst.adb" 19 0 0] ()) );
    ( [@GP_Sloc:borst.adb:19:44] ([#"borst.adb" 19 0 0] (let temp___372 [@mlw:proxy_symbol] [@introduced] = (let temp___371 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 19 0 0] begin ensures {true} let _ = (let _ = temp___371.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___371 ) with Borst__train.__split_fields = { ( temp___371.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___370 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 19 0 0] begin ensures {true} let _ = (let _ = temp___370.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance in (
       ()))
       in () end ;
      { ( temp___370 ) with Borst__engine.__split_fields = { ( temp___370.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__maintenance = (Borst__lastmaintained__rep.of_rep(([#"borst.adb" 19 0 0] ( [@comment:         BorstMobile.Generator.Maintenance := BorstMobile.Generator.Maintenance + 1;                                                                                 ^ borst.adb:19:81:VC_RANGE_CHECK] [@GP_Shape:if__borstmobile_assign__add] [@vc:annotation] [@GP_Sloc:borst.adb:19:81] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:4] (Borst__lastmaintained.range_check_(((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) + (1 : int)))) )))) } } )))
      } } )))
     in (
      (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___372.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:20:10] ([#"borst.adb" 20 0 0] ()) );
    ( [@GP_Sloc:borst.adb:20:40] ([#"borst.adb" 20 0 0] ()) );
    ( [@GP_Sloc:borst.adb:20:37] ([#"borst.adb" 20 0 0] (let temp___375 [@mlw:proxy_symbol] [@introduced] = (let temp___374 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 20 0 0] begin ensures {true} let _ = (let _ = temp___374.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___374 ) with Borst__train.__split_fields = { ( temp___374.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___373 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 20 0 0] begin ensures {true} let _ = (let _ = temp___373.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
       ()))
       in () end ;
      { ( temp___373 ) with Borst__engine.__split_fields = { ( temp___373.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = (Borst__enginetemp__rep.of_rep((Borst__getheat___axiom.getheat((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)))))) } } )))
      } } )))
     in (
     [#"borst.adb" 20 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___375.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:21:10] ([#"borst.adb" 21 0 0] ()) );
    ( [@GP_Sloc:borst.adb:21:37] ([#"borst.adb" 21 0 0] ()) );
    ( [@GP_Sloc:borst.adb:21:34] ([#"borst.adb" 21 0 0] (let temp___378 [@mlw:proxy_symbol] [@introduced] = (let temp___377 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 21 0 0] begin ensures {true} let _ = (let _ = temp___377.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___377 ) with Borst__train.__split_fields = { ( temp___377.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___376 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 21 0 0] begin ensures {true} let _ = (let _ = temp___376.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
       ()))
       in () end ;
      { ( temp___376 ) with Borst__carriage.__split_fields = { ( temp___376.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
      } } )))
     in (
     [#"borst.adb" 21 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___378.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:22:10] ([#"borst.adb" 22 0 0] ()) );
    ( [@GP_Sloc:borst.adb:22:34] ([#"borst.adb" 22 0 0] ()) );
    ( [@GP_Sloc:borst.adb:22:31] ([#"borst.adb" 22 0 0] (let temp___380 [@mlw:proxy_symbol] [@introduced] = (let temp___379 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 22 0 0] begin ensures {true} let _ = (let _ = temp___379.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
      ()))
      in () end ;
     { ( temp___379 ) with Borst__train.__split_fields = { ( temp___379.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = (Borst__speed__rep.of_rep((Borst__getcurrentspeed___axiom.getcurrentspeed((Borst__mass__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight))) ((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)))))) } } )))
     in (
     [#"borst.adb" 22 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___380.Borst__train.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "domaintenance" defined at borst.ads:89, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__domaintenance__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 89 0 0][@GP_Subp:borst.ads:89] 
   (__void_param : unit)
  requires { [#"borst.ads" 89 0 0] true }
  ensures { [#"borst.ads" 89 0 0] ([#"borst.ads" 94 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=> BorstMobile.Generator.Powered = Off and BorstMobile.Generator.Maintenance = LastMaintained'First and BorstMobile.Generator.WaterTank =Level'Last;             ^ borst.ads:94:13:VC_POSTCONDITION] [@model_vc_post] [@GP_Shape:pragargs__and] [@GP_Id:6] [@GP_Sloc:borst.ads:94:13] ( ( ( [@GP_Pretty_Ada:4638] [@GP_Sloc:borst.ads:94:13] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Sloc:borst.ads:94:53] [@GP_Pretty_Ada:4646] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4656] [@GP_Sloc:borst.ads:94:114] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) = (10 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:89 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:89 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:89 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (1 : int))) (((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) = (5 : int))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int))))) (((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:89 *)
  ;
   assume {  ( ( ( ( [@GP_Pretty_Ada:4600] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4608] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) = (5 : int)) ) ) /\ ( [@GP_Pretty_Ada:4616] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4626] ((Borst__enginetemp__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat) = (0 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:28:10] ([#"borst.adb" 28 0 0] ()) );
   ( [@GP_Sloc:borst.adb:28:50] ([#"borst.adb" 28 0 0] ()) );
   ( [@GP_Sloc:borst.adb:28:99] ([#"borst.adb" 28 0 0] ()) );
   ( [@GP_Sloc:borst.adb:28:7] ([#"borst.adb" 28 0 0] (if (( ([#"borst.adb" 28 0 0] [#"borst.adb" 28 0 0] (([@branch_id=2530] Main.spark__branch).bool__content <- ( (Boolean.andb((Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (1 : int))) (((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) = (5 : int))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) )));
   ( [@branch_id=2530] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:29:10] ([#"borst.adb" 29 0 0] ()) );
    ( [@GP_Sloc:borst.adb:29:42] ([#"borst.adb" 29 0 0] (let temp___385 [@mlw:proxy_symbol] [@introduced] = (let temp___384 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 29 0 0] begin ensures {true} let _ = (let _ = temp___384.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___384 ) with Borst__train.__split_fields = { ( temp___384.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___383 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 29 0 0] begin ensures {true} let _ = (let _ = temp___383.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank in (
       ()))
       in () end ;
      { ( temp___383 ) with Borst__engine.__split_fields = { ( temp___383.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__watertank = ( 10 : Borst__level.level ) } } )))
      } } )))
     in (
     [#"borst.adb" 29 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___385.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:30:10] ([#"borst.adb" 30 0 0] ()) );
    ( [@GP_Sloc:borst.adb:30:44] ([#"borst.adb" 30 0 0] (let temp___388 [@mlw:proxy_symbol] [@introduced] = (let temp___387 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 30 0 0] begin ensures {true} let _ = (let _ = temp___387.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___387 ) with Borst__train.__split_fields = { ( temp___387.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___386 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 30 0 0] begin ensures {true} let _ = (let _ = temp___386.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance in (
       ()))
       in () end ;
      { ( temp___386 ) with Borst__engine.__split_fields = { ( temp___386.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__maintenance = ( 0 : Borst__lastmaintained.lastmaintained ) } } )))
      } } )))
     in (
     [#"borst.adb" 30 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___388.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:31:10] ([#"borst.adb" 31 0 0] ()) );
    ( [@GP_Sloc:borst.adb:31:41] ([#"borst.adb" 31 0 0] (let temp___391 [@mlw:proxy_symbol] [@introduced] = (let temp___390 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 31 0 0] begin ensures {true} let _ = (let _ = temp___390.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___390 ) with Borst__train.__split_fields = { ( temp___390.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___389 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 31 0 0] begin ensures {true} let _ = (let _ = temp___389.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__mtnlight in (
       ()))
       in () end ;
      { ( temp___389 ) with Borst__engine.__split_fields = { ( temp___389.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__mtnlight = (Borst__light__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 31 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___391.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:32:10] ([#"borst.adb" 32 0 0] ()) );
    ( [@GP_Sloc:borst.adb:32:43] ([#"borst.adb" 32 0 0] (let temp___394 [@mlw:proxy_symbol] [@introduced] = (let temp___393 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 32 0 0] begin ensures {true} let _ = (let _ = temp___393.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___393 ) with Borst__train.__split_fields = { ( temp___393.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___392 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 32 0 0] begin ensures {true} let _ = (let _ = temp___392.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__waterlight in (
       ()))
       in () end ;
      { ( temp___392 ) with Borst__engine.__split_fields = { ( temp___392.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__waterlight = (Borst__light__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 32 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___394.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:33:10] ([#"borst.adb" 33 0 0] ()) );
    ( [@GP_Sloc:borst.adb:33:37] ([#"borst.adb" 33 0 0] ()) );
    ( [@GP_Sloc:borst.adb:33:34] ([#"borst.adb" 33 0 0] (let temp___397 [@mlw:proxy_symbol] [@introduced] = (let temp___396 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 33 0 0] begin ensures {true} let _ = (let _ = temp___396.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___396 ) with Borst__train.__split_fields = { ( temp___396.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___395 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 33 0 0] begin ensures {true} let _ = (let _ = temp___395.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
       ()))
       in () end ;
      { ( temp___395 ) with Borst__carriage.__split_fields = { ( temp___395.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
      } } )))
     in (
     [#"borst.adb" 33 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___397.Borst__train.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (1 : int))) (((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) = (0 : int))))) (((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) = (10 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "startengine" defined at borst.ads:97, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__startengine__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__getmax___axiom as Borst__getmax___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__getmax___axiom as Borst__getmax___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 97 0 0][@GP_Subp:borst.ads:97] 
   (__void_param : unit)
  requires { [#"borst.ads" 97 0 0] true }
  ensures { [#"borst.ads" 97 0 0] ([#"borst.ads" 102 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@GP_Sloc:borst.ads:102:12] [@model_vc_post] [@comment:     Post=>BorstMobile.Generator.Powered=On;            ^ borst.ads:102:12:VC_POSTCONDITION] [@GP_Id:7] ( [@GP_Sloc:borst.ads:102:12] [@GP_Pretty_Ada:6369] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:97 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:97 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:97 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (1 : int))) (((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) = (5 : int))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:97 *)
  ;
   assume {  ( ( ( [@GP_Pretty_Ada:4690] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4698] ((Borst__controlrod__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods) = (5 : int)) ) ) /\ ( [@GP_Pretty_Ada:4706] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:43:7] ([#"borst.adb" 43 0 0] ()) );
   ( [@GP_Sloc:borst.adb:43:37] ([#"borst.adb" 43 0 0] (let temp___402 [@mlw:proxy_symbol] [@introduced] = (let temp___401 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 43 0 0] begin ensures {true} let _ = (let _ = temp___401.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ()))
     in () end ;
    { ( temp___401 ) with Borst__train.__split_fields = { ( temp___401.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___400 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ( [#"borst.adb" 43 0 0] begin ensures {true} let _ = (let _ = temp___400.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered in (
      ()))
      in () end ;
     { ( temp___400 ) with Borst__engine.__split_fields = { ( temp___400.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__powered = (Borst__power__rep.of_rep((0 : int))) } } )))
     } } )))
    in (
    [#"borst.adb" 43 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___402.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:44:7] ([#"borst.adb" 44 0 0] ()) );
   ( [@GP_Sloc:borst.adb:44:39] ([#"borst.adb" 44 0 0] (let temp___405 [@mlw:proxy_symbol] [@introduced] = (let temp___404 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 44 0 0] begin ensures {true} let _ = (let _ = temp___404.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ()))
     in () end ;
    { ( temp___404 ) with Borst__train.__split_fields = { ( temp___404.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___403 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ( [#"borst.adb" 44 0 0] begin ensures {true} let _ = (let _ = temp___403.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight in (
      ()))
      in () end ;
     { ( temp___403 ) with Borst__engine.__split_fields = { ( temp___403.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heatlight = (Borst__light__rep.of_rep((0 : int))) } } )))
     } } )))
    in (
    [#"borst.adb" 44 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___405.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:45:7] ([#"borst.adb" 45 0 0] ()) );
   ( [@GP_Sloc:borst.adb:45:34] ([#"borst.adb" 45 0 0] ()) );
   ( [@GP_Sloc:borst.adb:45:31] ([#"borst.adb" 45 0 0] (let temp___408 [@mlw:proxy_symbol] [@introduced] = (let temp___407 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 45 0 0] begin ensures {true} let _ = (let _ = temp___407.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___407 ) with Borst__train.__split_fields = { ( temp___407.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___406 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 45 0 0] begin ensures {true} let _ = (let _ = temp___406.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
      ()))
      in () end ;
     { ( temp___406 ) with Borst__carriage.__split_fields = { ( temp___406.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
     } } )))
    in (
    [#"borst.adb" 45 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___408.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:46:7] ([#"borst.adb" 46 0 0] ()) );
   ( [@GP_Sloc:borst.adb:46:36] ([#"borst.adb" 46 0 0] ()) );
   ( [@GP_Sloc:borst.adb:46:33] ([#"borst.adb" 46 0 0] (let temp___411 [@mlw:proxy_symbol] [@introduced] = (let temp___410 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 46 0 0] begin ensures {true} let _ = (let _ = temp___410.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___410 ) with Borst__train.__split_fields = { ( temp___410.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___409 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 46 0 0] begin ensures {true} let _ = (let _ = temp___409.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__maxspeed in (
      ()))
      in () end ;
     { ( temp___409 ) with Borst__carriage.__split_fields = { ( temp___409.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__maxspeed = (Borst__speed__rep.of_rep((Borst__getmax___axiom.getmax((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)))))) } } )))
     } } )))
    in (
    [#"borst.adb" 46 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___411.Borst__train.__split_fields ))))
   ) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "stopengine" defined at borst.ads:104, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__stopengine__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom

 let def [#"borst.ads" 104 0 0][@GP_Subp:borst.ads:104] 
   (__void_param : unit)
  requires { [#"borst.ads" 104 0 0] true }
  ensures { [#"borst.ads" 104 0 0] ([#"borst.ads" 108 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=> BorstMobile.Generator.Powered = Off and BorstMobile.CurSpeed = Speed'First;             ^ borst.ads:108:13:VC_POSTCONDITION] [@model_vc_post] [@GP_Shape:pragargs__and] [@GP_Sloc:borst.ads:108:13] [@GP_Id:8] ( ( [@GP_Pretty_Ada:4759] [@GP_Sloc:borst.ads:108:13] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4765] [@GP_Sloc:borst.ads:108:53] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:104 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:104 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:104 *)
  ;
   begin ensures {true} let _ = (let _ = ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:104 *)
  ;
   assume {  ( [@GP_Pretty_Ada:6416] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:52:7] ([#"borst.adb" 52 0 0] ()) );
   ( [@GP_Sloc:borst.adb:52:37] ([#"borst.adb" 52 0 0] (let temp___416 [@mlw:proxy_symbol] [@introduced] = (let temp___415 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 52 0 0] begin ensures {true} let _ = (let _ = temp___415.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ()))
     in () end ;
    { ( temp___415 ) with Borst__train.__split_fields = { ( temp___415.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___414 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ( [#"borst.adb" 52 0 0] begin ensures {true} let _ = (let _ = temp___414.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered in (
      ()))
      in () end ;
     { ( temp___414 ) with Borst__engine.__split_fields = { ( temp___414.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__powered = (Borst__power__rep.of_rep((1 : int))) } } )))
     } } )))
    in (
    [#"borst.adb" 52 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___416.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:53:7] ([#"borst.adb" 53 0 0] ()) );
   ( [@GP_Sloc:borst.adb:53:34] ([#"borst.adb" 53 0 0] (let temp___419 [@mlw:proxy_symbol] [@introduced] = (let temp___418 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 53 0 0] begin ensures {true} let _ = (let _ = temp___418.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ()))
     in () end ;
    { ( temp___418 ) with Borst__train.__split_fields = { ( temp___418.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___417 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ( [#"borst.adb" 53 0 0] begin ensures {true} let _ = (let _ = temp___417.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods in (
      ()))
      in () end ;
     { ( temp___417 ) with Borst__engine.__split_fields = { ( temp___417.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__rods = ( 5 : Borst__controlrod.controlrod ) } } )))
     } } )))
    in (
    [#"borst.adb" 53 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___419.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:54:7] ([#"borst.adb" 54 0 0] ()) );
   ( [@GP_Sloc:borst.adb:54:28] ([#"borst.adb" 54 0 0] (let temp___421 [@mlw:proxy_symbol] [@introduced] = (let temp___420 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 54 0 0] begin ensures {true} let _ = (let _ = temp___420.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
     ()))
     in () end ;
    { ( temp___420 ) with Borst__train.__split_fields = { ( temp___420.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = ( 0 : Borst__speed.speed ) } } )))
    in (
    [#"borst.adb" 54 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___421.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:55:7] ([#"borst.adb" 55 0 0] ()) );
   ( [@GP_Sloc:borst.adb:55:34] ([#"borst.adb" 55 0 0] (let temp___424 [@mlw:proxy_symbol] [@introduced] = (let temp___423 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 55 0 0] begin ensures {true} let _ = (let _ = temp___423.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ()))
     in () end ;
    { ( temp___423 ) with Borst__train.__split_fields = { ( temp___423.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___422 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
     ( [#"borst.adb" 55 0 0] begin ensures {true} let _ = (let _ = temp___422.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
      ()))
      in () end ;
     { ( temp___422 ) with Borst__engine.__split_fields = { ( temp___422.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = ( 0 : Borst__enginetemp.enginetemp ) } } )))
     } } )))
    in (
    [#"borst.adb" 55 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___424.Borst__train.__split_fields ))))
   ) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (1 : int))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addtraincar" defined at borst.ads:110, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__addtraincar__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__getmax___axiom as Borst__getmax___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__getmax___axiom as Borst__getmax___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 110 0 0][@GP_Subp:borst.ads:110] 
   (__void_param : unit)
  requires { [#"borst.ads" 110 0 0] true }
  ensures { [#"borst.ads" 110 0 0] ([#"borst.ads" 114 0 0] ( [@GP_Id:10] [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=>BorstMobile.Cart.Cars<=NumCarriages'Last;            ^ borst.ads:114:12:VC_POSTCONDITION] [@GP_Sloc:borst.ads:114:12] [@GP_Shape:pragargs__cmp] [@model_vc_post] ( [@GP_Sloc:borst.ads:114:12] [@GP_Pretty_Ada:6507] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) <= (10 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:110 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:110 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:110 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int))) (((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) < (10 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:110 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4797] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4807] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) < (10 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:60:7] ([#"borst.adb" 60 0 0] ()) );
   ( [@GP_Sloc:borst.adb:60:32] ([#"borst.adb" 60 0 0] ()) );
   ( [@GP_Sloc:borst.adb:60:29] ([#"borst.adb" 60 0 0] (let temp___429 [@mlw:proxy_symbol] [@introduced] = (let temp___428 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 60 0 0] begin ensures {true} let _ = (let _ = temp___428.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___428 ) with Borst__train.__split_fields = { ( temp___428.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___427 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 60 0 0] begin ensures {true} let _ = (let _ = temp___427.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars in (
      ()))
      in () end ;
     { ( temp___427 ) with Borst__carriage.__split_fields = { ( temp___427.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__cars = (Borst__numcarriages__rep.of_rep(([#"borst.adb" 60 0 0] ( [@GP_Shape:borstmobile_assign__add] [@GP_Sloc:borst.adb:60:54] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:      BorstMobile.Cart.Cars := BorstMobile.Cart.Cars + 1;                                                      ^ borst.adb:60:54:VC_RANGE_CHECK] [@GP_Id:9] (Borst__numcarriages.range_check_(((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) + (1 : int)))) )))) } } )))
     } } )))
    in (
     (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___429.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:61:7] ([#"borst.adb" 61 0 0] ()) );
   ( [@GP_Sloc:borst.adb:61:36] ([#"borst.adb" 61 0 0] ()) );
   ( [@GP_Sloc:borst.adb:61:33] ([#"borst.adb" 61 0 0] (let temp___432 [@mlw:proxy_symbol] [@introduced] = (let temp___431 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 61 0 0] begin ensures {true} let _ = (let _ = temp___431.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___431 ) with Borst__train.__split_fields = { ( temp___431.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___430 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 61 0 0] begin ensures {true} let _ = (let _ = temp___430.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__maxspeed in (
      ()))
      in () end ;
     { ( temp___430 ) with Borst__carriage.__split_fields = { ( temp___430.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__maxspeed = (Borst__speed__rep.of_rep((Borst__getmax___axiom.getmax((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)))))) } } )))
     } } )))
    in (
    [#"borst.adb" 61 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___432.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:62:7] ([#"borst.adb" 62 0 0] ()) );
   ( [@GP_Sloc:borst.adb:62:34] ([#"borst.adb" 62 0 0] ()) );
   ( [@GP_Sloc:borst.adb:62:31] ([#"borst.adb" 62 0 0] (let temp___435 [@mlw:proxy_symbol] [@introduced] = (let temp___434 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 62 0 0] begin ensures {true} let _ = (let _ = temp___434.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___434 ) with Borst__train.__split_fields = { ( temp___434.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___433 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 62 0 0] begin ensures {true} let _ = (let _ = temp___433.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
      ()))
      in () end ;
     { ( temp___433 ) with Borst__carriage.__split_fields = { ( temp___433.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
     } } )))
    in (
    [#"borst.adb" 62 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___435.Borst__train.__split_fields ))))
   ) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) <= (10 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removetraincar" defined at borst.ads:116, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__removetraincar__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__getmax___axiom as Borst__getmax___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__getmax___axiom as Borst__getmax___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 116 0 0][@GP_Subp:borst.ads:116] 
   (__void_param : unit)
  requires { [#"borst.ads" 116 0 0] true }
  ensures { [#"borst.ads" 116 0 0] ([#"borst.ads" 119 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Id:12] [@GP_Sloc:borst.ads:119:12] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@comment:     Post=>BorstMobile.Cart.Cars>=NumCarriages'Last;            ^ borst.ads:119:12:VC_POSTCONDITION] ( [@GP_Sloc:borst.ads:119:12] [@GP_Pretty_Ada:6568] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) >= (10 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:116 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:116 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:116 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int))) (((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) < (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:116 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4845] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4855] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) < (0 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:67:7] ([#"borst.adb" 67 0 0] ()) );
   ( [@GP_Sloc:borst.adb:67:32] ([#"borst.adb" 67 0 0] ()) );
   ( [@GP_Sloc:borst.adb:67:29] ([#"borst.adb" 67 0 0] (let temp___440 [@mlw:proxy_symbol] [@introduced] = (let temp___439 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 67 0 0] begin ensures {true} let _ = (let _ = temp___439.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___439 ) with Borst__train.__split_fields = { ( temp___439.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___438 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 67 0 0] begin ensures {true} let _ = (let _ = temp___438.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars in (
      ()))
      in () end ;
     { ( temp___438 ) with Borst__carriage.__split_fields = { ( temp___438.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__cars = (Borst__numcarriages__rep.of_rep(([#"borst.adb" 67 0 0] ( [@GP_Id:11] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:borstmobile_assign__sub] [@GP_Sloc:borst.adb:67:54] [@comment:      BorstMobile.Cart.Cars := BorstMobile.Cart.Cars - 1;                                                      ^ borst.adb:67:54:VC_RANGE_CHECK] (Borst__numcarriages.range_check_(((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) - (1 : int)))) )))) } } )))
     } } )))
    in (
     (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___440.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:68:7] ([#"borst.adb" 68 0 0] ()) );
   ( [@GP_Sloc:borst.adb:68:36] ([#"borst.adb" 68 0 0] ()) );
   ( [@GP_Sloc:borst.adb:68:33] ([#"borst.adb" 68 0 0] (let temp___443 [@mlw:proxy_symbol] [@introduced] = (let temp___442 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 68 0 0] begin ensures {true} let _ = (let _ = temp___442.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___442 ) with Borst__train.__split_fields = { ( temp___442.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___441 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 68 0 0] begin ensures {true} let _ = (let _ = temp___441.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__maxspeed in (
      ()))
      in () end ;
     { ( temp___441 ) with Borst__carriage.__split_fields = { ( temp___441.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__maxspeed = (Borst__speed__rep.of_rep((Borst__getmax___axiom.getmax((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)))))) } } )))
     } } )))
    in (
    [#"borst.adb" 68 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___443.Borst__train.__split_fields ))))
   ) );
   ( [@GP_Sloc:borst.adb:69:7] ([#"borst.adb" 69 0 0] ()) );
   ( [@GP_Sloc:borst.adb:69:34] ([#"borst.adb" 69 0 0] ()) );
   ( [@GP_Sloc:borst.adb:69:31] ([#"borst.adb" 69 0 0] (let temp___446 [@mlw:proxy_symbol] [@introduced] = (let temp___445 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
    ( [#"borst.adb" 69 0 0] begin ensures {true} let _ = (let _ = temp___445.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ()))
     in () end ;
    { ( temp___445 ) with Borst__train.__split_fields = { ( temp___445.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___444 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
     ( [#"borst.adb" 69 0 0] begin ensures {true} let _ = (let _ = temp___444.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
      ()))
      in () end ;
     { ( temp___444 ) with Borst__carriage.__split_fields = { ( temp___444.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
     } } )))
    in (
    [#"borst.adb" 69 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___446.Borst__train.__split_fields ))))
   ) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) >= (10 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "getmax" defined at borst.ads:121, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__getmax__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Borst__getmax__num as Borst__getmax__num
 use        Borst__speed as Borst__speed
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__getmax__num___axiom as Borst__getmax__num___axiom

 val borst__getmax__result [@name:GetMax] [@model_projected] [@model_trace:4870@result]  : int__ref 
 
 let def [#"borst.ads" 121 0 0][@GP_Subp:borst.ads:121] 
   (__void_param : unit)
  requires { [#"borst.ads" 121 0 0] true }
  ensures { [#"borst.ads" 121 0 0] ([#"borst.ads" 122 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Id:16] [@GP_Sloc:borst.ads:122:12] [@model_vc_post] [@GP_Shape:pragargs__and] [@comment:     Post=>GetMax'Result<=200 and GetMax'Result>=100;            ^ borst.ads:122:12:VC_POSTCONDITION] ( ( [@GP_Pretty_Ada:4897] [@GP_Sloc:borst.ads:122:12] (borst__getmax__result.int__content <= (200 : int)) ) /\ ( [@GP_Sloc:borst.ads:122:35] [@GP_Pretty_Ada:4903] (borst__getmax__result.int__content >= (100 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:121 *)
  ;
   assume {  (Borst__numcarriages___axiom.dynamic_invariant Borst__getmax__num.num True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:121 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:121 *)
  ;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:121 *)
  ;
   try
   ( ();
   ( [@GP_Sloc:borst.adb:75:7] ([#"borst.adb" 75 0 0] ( [#"borst.adb" 75 0 0] (borst__getmax__result.int__content <- ( ([#"borst.adb" 75 0 0] ( [@GP_Sloc:borst.adb:75:24] [@GP_Id:15] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:      return Speed(200 - (Integer(num)*10));                        ^ borst.adb:75:24:VC_RANGE_CHECK] [@GP_Shape:return__typeconv__sub] (Borst__speed.range_check_(([#"borst.adb" 75 0 0] ( [@GP_Sloc:borst.adb:75:24] [@GP_Id:14] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:      return Speed(200 - (Integer(num)*10));                        ^ borst.adb:75:24:VC_OVERFLOW_CHECK] [@GP_Shape:return__typeconv__sub] (Standard__integer.range_check_(((200 : int) - ([#"borst.adb" 75 0 0] ( [@GP_Id:13] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Shape:return__typeconv__sub__mult] [@GP_Sloc:borst.adb:75:39] [@comment:      return Speed(200 - (Integer(num)*10));                                       ^ borst.adb:75:39:VC_OVERFLOW_CHECK] (Standard__integer.range_check_((Borst__getmax__num.num * (10 : int)))) ))))) )))) )) ));
    raise Return__exc )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb((borst__getmax__result.int__content <= (200 : int))) ((borst__getmax__result.int__content >= (100 : int)))) in (
   ()))
   in () end ;
  borst__getmax__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "getheat" defined at borst.ads:124, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__getheat__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Borst__getheat__water as Borst__getheat__water
 use        Borst__getheat__rods as Borst__getheat__rods
 use        Borst__getheat__heat as Borst__getheat__heat
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Borst__getheat__heat___axiom as Borst__getheat__heat___axiom
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__getheat__water___axiom as Borst__getheat__water___axiom
 use        Borst__getheat__rods___axiom as Borst__getheat__rods___axiom

 val borst__getheat__result [@model_trace:4904@result] [@model_projected] [@name:GetHeat]  : int__ref 
 
 let def [#"borst.ads" 124 0 0][@GP_Subp:borst.ads:124] 
   (__void_param : unit)
  requires { [#"borst.ads" 124 0 0] true }
  ensures { [#"borst.ads" 124 0 0] ([#"borst.ads" 125 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@comment:     Post=>GetHeat'Result<=EngineTemp'Last;            ^ borst.ads:125:12:VC_POSTCONDITION] [@GP_Id:20] [@GP_Sloc:borst.ads:125:12] ( [@GP_Pretty_Ada:6619] [@GP_Sloc:borst.ads:125:12] (borst__getheat__result.int__content <= (2500 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:124 *)
  ;
   assume {  (Borst__level___axiom.dynamic_invariant Borst__getheat__water.water True False True True) };
   assume {  (Borst__controlrod___axiom.dynamic_invariant Borst__getheat__rods.rods True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:124 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:124 *)
  ;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:124 *)
  ;
   try
   ( ();
   ([#"borst.adb" 79 0 0] ( [#"borst.adb" 79 0 0] assume { [#"borst.adb" 79 0 0] (Borst__enginetemp___axiom.default_initial_assumption Borst__getheat__heat.heat.int__content False) };
   [#"borst.adb" 79 0 0] assume { [#"borst.adb" 79 0 0] (Borst__enginetemp___axiom.dynamic_invariant Borst__getheat__heat.heat.int__content False False True True) } ));
   ();
   ( [@GP_Sloc:borst.adb:81:7] ([#"borst.adb" 81 0 0] ()) );
   ( [@GP_Sloc:borst.adb:81:12] ([#"borst.adb" 81 0 0] [#"borst.adb" 81 0 0] (Borst__getheat__heat.heat.int__content <- ( ([#"borst.adb" 81 0 0] ( [@GP_Id:19] [@vc:annotation] [@GP_Shape:heat_assign__typeconv__mult] [@GP_Reason:VC_RANGE_CHECK] [@comment:      heat := EngineTemp((Integer(Level'Last)-Integer(water)+1)*(Integer(ControlRod'Last)-Integer(rods))*55);                                                                                                         ^ borst.adb:81:105:VC_RANGE_CHECK] [@GP_Sloc:borst.adb:81:105] (Borst__enginetemp.range_check_(([#"borst.adb" 81 0 0] ( [@comment:      heat := EngineTemp((Integer(Level'Last)-Integer(water)+1)*(Integer(ControlRod'Last)-Integer(rods))*55);                                                                                                         ^ borst.adb:81:105:VC_OVERFLOW_CHECK] [@GP_Id:18] [@vc:annotation] [@GP_Shape:heat_assign__typeconv__mult] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:81:105] (Standard__integer.range_check_((([#"borst.adb" 81 0 0] ( [@GP_Id:17] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:81:64] [@GP_Shape:heat_assign__typeconv__mult__mult] [@comment:      heat := EngineTemp((Integer(Level'Last)-Integer(water)+1)*(Integer(ControlRod'Last)-Integer(rods))*55);                                                                ^ borst.adb:81:64:VC_OVERFLOW_CHECK] (Standard__integer.range_check_(((((10 : int) - Borst__getheat__water.water) + (1 : int)) * ((5 : int) - Borst__getheat__rods.rods)))) )) * (55 : int)))) )))) )) ))) );
   ( [@GP_Sloc:borst.adb:82:14] ([#"borst.adb" 82 0 0] ()) );
   ( [@GP_Sloc:borst.adb:82:7] ([#"borst.adb" 82 0 0] ( [#"borst.adb" 82 0 0] (borst__getheat__result.int__content <- ( Borst__getheat__heat.heat.int__content ));
   [#"borst.adb" 82 0 0] raise Return__exc )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (borst__getheat__result.int__content <= (2500 : int)) in (
   ()))
   in () end ;
  borst__getheat__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "getcurrentspeed" defined at borst.ads:127, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__getcurrentspeed__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Int_Division as Int_Division
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Borst__getcurrentspeed__car as Borst__getcurrentspeed__car
 use        Borst__getcurrentspeed__heat as Borst__getcurrentspeed__heat
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed as Borst__speed
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__getcurrentspeed__car___axiom as Borst__getcurrentspeed__car___axiom
 use        Borst__getcurrentspeed__heat___axiom as Borst__getcurrentspeed__heat___axiom

 val borst__getcurrentspeed__result [@model_trace:4943@result] [@model_projected] [@name:GetCurrentSpeed]  : int__ref 
 
 let def [#"borst.ads" 127 0 0][@GP_Subp:borst.ads:127] 
   (__void_param : unit)
  requires { [#"borst.ads" 127 0 0] true }
  ensures { [#"borst.ads" 127 0 0] ([#"borst.ads" 128 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=>GetCurrentSpeed'Result<=Speed'Last and GetCurrentSpeed'Result>=Speed'First;            ^ borst.ads:128:12:VC_POSTCONDITION] [@model_vc_post] [@GP_Id:26] [@GP_Shape:pragargs__and] [@GP_Sloc:borst.ads:128:12] ( ( [@GP_Pretty_Ada:4979] [@GP_Sloc:borst.ads:128:12] (borst__getcurrentspeed__result.int__content <= (250 : int)) ) /\ ( [@GP_Pretty_Ada:4987] [@GP_Sloc:borst.ads:128:51] (borst__getcurrentspeed__result.int__content >= (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:127 *)
  ;
   assume {  (Borst__mass___axiom.dynamic_invariant Borst__getcurrentspeed__car.car True False True True) };
   assume {  (Borst__enginetemp___axiom.dynamic_invariant Borst__getcurrentspeed__heat.heat True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:127 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:127 *)
  ;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:127 *)
  ;
   try
   ( ();
   ( [@GP_Sloc:borst.adb:87:7] ([#"borst.adb" 87 0 0] ( [#"borst.adb" 87 0 0] (borst__getcurrentspeed__result.int__content <- ( ([#"borst.adb" 87 0 0] ( [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:return__typeconv__mult] [@comment:      return Speed((Integer(Integer(heat) * Integer(Speed'Last))/Integer(EngineTemp'Last)) * (1-(Integer(car)/(Integer(Mass'Last)*2))));                                                                                            ^ borst.adb:87:92:VC_RANGE_CHECK] [@GP_Id:25] [@GP_Sloc:borst.adb:87:92] (Borst__speed.range_check_(([#"borst.adb" 87 0 0] ( [@comment:      return Speed((Integer(Integer(heat) * Integer(Speed'Last))/Integer(EngineTemp'Last)) * (1-(Integer(car)/(Integer(Mass'Last)*2))));                                                                                            ^ borst.adb:87:92:VC_OVERFLOW_CHECK] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Shape:return__typeconv__mult] [@GP_Id:24] [@GP_Sloc:borst.adb:87:92] (Standard__integer.range_check_((([#"borst.adb" 87 0 0] ( [@vc:annotation] [@GP_Reason:VC_DIVISION_CHECK] [@GP_Shape:return__typeconv__mult__div] [@GP_Id:22] [@GP_Sloc:borst.adb:87:65] [@comment:      return Speed((Integer(Integer(heat) * Integer(Speed'Last))/Integer(EngineTemp'Last)) * (1-(Integer(car)/(Integer(Mass'Last)*2))));                                                                 ^ borst.adb:87:65:VC_DIVISION_CHECK] (Int_Division.div_(([#"borst.adb" 87 0 0] ( [@vc:annotation] [@GP_Sloc:borst.adb:87:43] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:      return Speed((Integer(Integer(heat) * Integer(Speed'Last))/Integer(EngineTemp'Last)) * (1-(Integer(car)/(Integer(Mass'Last)*2))));                                           ^ borst.adb:87:43:VC_OVERFLOW_CHECK] [@GP_Shape:return__typeconv__mult__div__typeconv__mult] [@GP_Id:21] (Standard__integer.range_check_((Borst__getcurrentspeed__heat.heat * (250 : int)))) ))) ((2500 : int))) )) * ((1 : int) - ([#"borst.adb" 87 0 0] ( [@GP_Shape:return__typeconv__mult__sub__div] [@comment:      return Speed((Integer(Integer(heat) * Integer(Speed'Last))/Integer(EngineTemp'Last)) * (1-(Integer(car)/(Integer(Mass'Last)*2))));                                                                                                              ^ borst.adb:87:110:VC_DIVISION_CHECK] [@vc:annotation] [@GP_Reason:VC_DIVISION_CHECK] [@GP_Sloc:borst.adb:87:110] [@GP_Id:23] (Int_Division.div_(Borst__getcurrentspeed__car.car) ((3400 : int))) )))))) )))) )) ));
    raise Return__exc )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb((borst__getcurrentspeed__result.int__content <= (250 : int))) ((borst__getcurrentspeed__result.int__content >= (0 : int)))) in (
   ()))
   in () end ;
  borst__getcurrentspeed__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "emergencystop" defined at borst.ads:130, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__emergencystop__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__speed as Borst__speed
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom

 let def [#"borst.ads" 130 0 0][@GP_Subp:borst.ads:130] 
   (__void_param : unit)
  requires { [#"borst.ads" 130 0 0] true }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:130 *)
  ;
  [#"borst.ads" 130 0 0] assume { [#"borst.ads" 130 0 0] (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:130 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:130 *)
  ;
  [#"borst.ads" 130 0 0] begin ensures {true} let _ = (let _ = ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:130 *)
  ;
  [#"borst.ads" 130 0 0] assume { [#"borst.ads" 130 0 0] ( [@GP_Pretty_Ada:6676] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) };
  [#"borst.ads" 130 0 0] try
   ( ();
   ( [@GP_Sloc:borst.adb:92:10] ([#"borst.adb" 92 0 0] ()) );
   ( [@GP_Sloc:borst.adb:92:7] ([#"borst.adb" 92 0 0] (if (( ([#"borst.adb" 92 0 0] [#"borst.adb" 92 0 0] (([@branch_id=2994] Main.spark__branch).bool__content <- ( ((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)) >= (2200 : int)) )));
   ( [@branch_id=2994] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:93:10] ([#"borst.adb" 93 0 0] ()) );
    ( [@GP_Sloc:borst.adb:93:40] ([#"borst.adb" 93 0 0] (let temp___451 [@mlw:proxy_symbol] [@introduced] = (let temp___450 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 93 0 0] begin ensures {true} let _ = (let _ = temp___450.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___450 ) with Borst__train.__split_fields = { ( temp___450.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___449 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 93 0 0] begin ensures {true} let _ = (let _ = temp___449.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered in (
       ()))
       in () end ;
      { ( temp___449 ) with Borst__engine.__split_fields = { ( temp___449.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__powered = (Borst__power__rep.of_rep((1 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 93 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___451.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:94:10] ([#"borst.adb" 94 0 0] ()) );
    ( [@GP_Sloc:borst.adb:94:42] ([#"borst.adb" 94 0 0] (let temp___454 [@mlw:proxy_symbol] [@introduced] = (let temp___453 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 94 0 0] begin ensures {true} let _ = (let _ = temp___453.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___453 ) with Borst__train.__split_fields = { ( temp___453.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___452 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 94 0 0] begin ensures {true} let _ = (let _ = temp___452.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight in (
       ()))
       in () end ;
      { ( temp___452 ) with Borst__engine.__split_fields = { ( temp___452.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heatlight = (Borst__light__rep.of_rep((2 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 94 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___454.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:95:10] ([#"borst.adb" 95 0 0] ()) );
    ( [@GP_Sloc:borst.adb:95:37] ([#"borst.adb" 95 0 0] (let temp___457 [@mlw:proxy_symbol] [@introduced] = (let temp___456 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 95 0 0] begin ensures {true} let _ = (let _ = temp___456.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___456 ) with Borst__train.__split_fields = { ( temp___456.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___455 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 95 0 0] begin ensures {true} let _ = (let _ = temp___455.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods in (
       ()))
       in () end ;
      { ( temp___455 ) with Borst__engine.__split_fields = { ( temp___455.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__rods = ( 5 : Borst__controlrod.controlrod ) } } )))
      } } )))
     in (
     [#"borst.adb" 95 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___457.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:96:10] ([#"borst.adb" 96 0 0] ()) );
    ( [@GP_Sloc:borst.adb:96:31] ([#"borst.adb" 96 0 0] (let temp___459 [@mlw:proxy_symbol] [@introduced] = (let temp___458 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 96 0 0] begin ensures {true} let _ = (let _ = temp___458.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
      ()))
      in () end ;
     { ( temp___458 ) with Borst__train.__split_fields = { ( temp___458.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = ( 0 : Borst__speed.speed ) } } )))
     in (
     [#"borst.adb" 96 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___459.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:97:10] ([#"borst.adb" 97 0 0] ()) );
    ( [@GP_Sloc:borst.adb:97:37] ([#"borst.adb" 97 0 0] (let temp___462 [@mlw:proxy_symbol] [@introduced] = (let temp___461 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 97 0 0] begin ensures {true} let _ = (let _ = temp___461.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___461 ) with Borst__train.__split_fields = { ( temp___461.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___460 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 97 0 0] begin ensures {true} let _ = (let _ = temp___460.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
       ()))
       in () end ;
      { ( temp___460 ) with Borst__engine.__split_fields = { ( temp___460.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = ( 0 : Borst__enginetemp.enginetemp ) } } )))
      } } )))
     in (
     [#"borst.adb" 97 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___462.Borst__train.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "heatl" defined at borst.ads:134, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__heatl__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom

 let def [#"borst.ads" 134 0 0][@GP_Subp:borst.ads:134] 
   (__void_param : unit)
  requires { [#"borst.ads" 134 0 0] true }
  ensures { [#"borst.ads" 134 0 0] ([#"borst.ads" 137 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=>(BorstMobile.Generator.HeatLight=GREEN or BorstMobile.Generator.HeatLight=AMBER or            ^ borst.ads:137:12:VC_POSTCONDITION] [@GP_Shape:pragargs__or] [@GP_Sloc:borst.ads:137:12] [@model_vc_post] [@GP_Id:27] ( [@GP_Sloc:borst.ads:137:12] [@GP_Pretty_Ada:6737] ( ( ((Borst__light__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight) = (0 : int)) \/ ((Borst__light__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight) = (1 : int)) ) \/ ((Borst__light__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight) = (2 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:134 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:134 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:134 *)
  ;
   begin ensures {true} let _ = (let _ = ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:134 *)
  ;
   assume {  ( [@GP_Pretty_Ada:6707] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:113:11] ([#"borst.adb" 113 0 0] ()) );
   ( [@GP_Sloc:borst.adb:113:49] ([#"borst.adb" 113 0 0] ()) );
   ( [@GP_Sloc:borst.adb:113:7] ([#"borst.adb" 113 0 0] (if (( ([#"borst.adb" 113 0 0] [#"borst.adb" 113 0 0] (([@branch_id=3106] Main.spark__branch).bool__content <- ( (Boolean.andb(((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)) < (2200 : int))) (((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)) > (1700 : int)))) )));
   ( [@branch_id=3106] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:114:13] ([#"borst.adb" 114 0 0] ()) );
    ( [@GP_Sloc:borst.adb:114:45] ([#"borst.adb" 114 0 0] (let temp___467 [@mlw:proxy_symbol] [@introduced] = (let temp___466 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 114 0 0] begin ensures {true} let _ = (let _ = temp___466.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___466 ) with Borst__train.__split_fields = { ( temp___466.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___465 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 114 0 0] begin ensures {true} let _ = (let _ = temp___465.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight in (
       ()))
       in () end ;
      { ( temp___465 ) with Borst__engine.__split_fields = { ( temp___465.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heatlight = (Borst__light__rep.of_rep((1 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 114 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___467.Borst__train.__split_fields ))))
    ) ) )) else (
    ( ();
    ( [@GP_Sloc:borst.adb:116:10] ([#"borst.adb" 116 0 0] ()) );
    ( [@GP_Sloc:borst.adb:116:42] ([#"borst.adb" 116 0 0] (let temp___470 [@mlw:proxy_symbol] [@introduced] = (let temp___469 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 116 0 0] begin ensures {true} let _ = (let _ = temp___469.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___469 ) with Borst__train.__split_fields = { ( temp___469.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___468 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 116 0 0] begin ensures {true} let _ = (let _ = temp___468.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight in (
       ()))
       in () end ;
      { ( temp___468 ) with Borst__engine.__split_fields = { ( temp___468.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heatlight = (Borst__light__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 116 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___470.Borst__train.__split_fields ))))
    ) ) )))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.orb((Boolean.orb(((Borst__light__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight)) = (0 : int))) (((Borst__light__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight)) = (1 : int))))) (((Borst__light__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heatlight)) = (2 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "filltank" defined at borst.ads:140, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__filltank__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 140 0 0][@GP_Subp:borst.ads:140] 
   (__void_param : unit)
  requires { [#"borst.ads" 140 0 0] true }
  ensures { [#"borst.ads" 140 0 0] ([#"borst.ads" 143 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Sloc:borst.ads:143:13] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@GP_Id:28] [@comment:     Post=> BorstMobile.Generator.WaterTank = Level'Last;             ^ borst.ads:143:13:VC_POSTCONDITION] ( [@GP_Sloc:borst.ads:143:13] [@GP_Pretty_Ada:6789] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) = (10 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:140 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:140 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:140 *)
  ;
   begin ensures {true} let _ = (let _ = ((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:140 *)
  ;
   assume {  ( [@GP_Pretty_Ada:6774] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:103:10] ([#"borst.adb" 103 0 0] ()) );
   ( [@GP_Sloc:borst.adb:103:7] ([#"borst.adb" 103 0 0] (if (( ([#"borst.adb" 103 0 0] [#"borst.adb" 103 0 0] (([@branch_id=3054] Main.spark__branch).bool__content <- ( ((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)) )));
   ( [@branch_id=3054] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:104:10] ([#"borst.adb" 104 0 0] ()) );
    ( [@GP_Sloc:borst.adb:104:42] ([#"borst.adb" 104 0 0] (let temp___475 [@mlw:proxy_symbol] [@introduced] = (let temp___474 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 104 0 0] begin ensures {true} let _ = (let _ = temp___474.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___474 ) with Borst__train.__split_fields = { ( temp___474.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___473 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 104 0 0] begin ensures {true} let _ = (let _ = temp___473.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank in (
       ()))
       in () end ;
      { ( temp___473 ) with Borst__engine.__split_fields = { ( temp___473.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__watertank = ( 10 : Borst__level.level ) } } )))
      } } )))
     in (
     [#"borst.adb" 104 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___475.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:105:10] ([#"borst.adb" 105 0 0] ()) );
    ( [@GP_Sloc:borst.adb:105:43] ([#"borst.adb" 105 0 0] (let temp___478 [@mlw:proxy_symbol] [@introduced] = (let temp___477 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 105 0 0] begin ensures {true} let _ = (let _ = temp___477.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___477 ) with Borst__train.__split_fields = { ( temp___477.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___476 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 105 0 0] begin ensures {true} let _ = (let _ = temp___476.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__waterlight in (
       ()))
       in () end ;
      { ( temp___476 ) with Borst__engine.__split_fields = { ( temp___476.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__waterlight = (Borst__light__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"borst.adb" 105 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___478.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:106:10] ([#"borst.adb" 106 0 0] ()) );
    ( [@GP_Sloc:borst.adb:106:37] ([#"borst.adb" 106 0 0] ()) );
    ( [@GP_Sloc:borst.adb:106:34] ([#"borst.adb" 106 0 0] (let temp___481 [@mlw:proxy_symbol] [@introduced] = (let temp___480 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 106 0 0] begin ensures {true} let _ = (let _ = temp___480.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___480 ) with Borst__train.__split_fields = { ( temp___480.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___479 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 106 0 0] begin ensures {true} let _ = (let _ = temp___479.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
       ()))
       in () end ;
      { ( temp___479 ) with Borst__carriage.__split_fields = { ( temp___479.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
      } } )))
     in (
     [#"borst.adb" 106 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___481.Borst__train.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) = (10 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "tankl" defined at borst.ads:145, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__tankl__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__getheat___axiom as Borst__getheat___axiom
 use        Borst__getcurrentspeed___axiom as Borst__getcurrentspeed___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__enginetemp__rep as Borst__enginetemp__rep
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__getheat___axiom as Borst__getheat___axiom
 use        Borst__getcurrentspeed___axiom as Borst__getcurrentspeed___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 145 0 0][@GP_Subp:borst.ads:145] 
   (__void_param : unit)
  requires { [#"borst.ads" 145 0 0] true }
  ensures { [#"borst.ads" 145 0 0] ([#"borst.ads" 148 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Sloc:borst.ads:148:13] [@GP_Shape:pragargs__cmp] [@comment:     Post=> BorstMobile.Generator.WaterTank=BorstMobile.Generator.WaterTank'Old-1;             ^ borst.ads:148:13:VC_POSTCONDITION] [@GP_Id:30] [@model_vc_post] ( [@GP_Sloc:borst.ads:148:13] [@GP_Pretty_Ada:6857] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) = ((Borst__level__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank )) - (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:145 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:145 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:145 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) > (0 : int))) (((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:145 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:5129] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:5139] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank in (
   ()))
   in () end ;
  (let temp___old_502 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:borst.adb:123:7] ([#"borst.adb" 123 0 0] ()) );
    ( [@GP_Sloc:borst.adb:123:42] ([#"borst.adb" 123 0 0] ()) );
    ( [@GP_Sloc:borst.adb:123:39] ([#"borst.adb" 123 0 0] (let temp___486 [@mlw:proxy_symbol] [@introduced] = (let temp___485 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 123 0 0] begin ensures {true} let _ = (let _ = temp___485.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___485 ) with Borst__train.__split_fields = { ( temp___485.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___484 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 123 0 0] begin ensures {true} let _ = (let _ = temp___484.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank in (
       ()))
       in () end ;
      { ( temp___484 ) with Borst__engine.__split_fields = { ( temp___484.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__watertank = (Borst__level__rep.of_rep(([#"borst.adb" 123 0 0] ( [@GP_Sloc:borst.adb:123:74] [@vc:annotation] [@comment:      BorstMobile.Generator.WaterTank := BorstMobile.Generator.Watertank - 1;                                                                          ^ borst.adb:123:74:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:borstmobile_assign__sub] [@GP_Id:29] (Borst__level.range_check_(((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) - (1 : int)))) )))) } } )))
      } } )))
     in (
      (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___486.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:124:7] ([#"borst.adb" 124 0 0] ()) );
    ( [@GP_Sloc:borst.adb:124:34] ([#"borst.adb" 124 0 0] ()) );
    ( [@GP_Sloc:borst.adb:124:31] ([#"borst.adb" 124 0 0] (let temp___489 [@mlw:proxy_symbol] [@introduced] = (let temp___488 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 124 0 0] begin ensures {true} let _ = (let _ = temp___488.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___488 ) with Borst__train.__split_fields = { ( temp___488.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___487 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 124 0 0] begin ensures {true} let _ = (let _ = temp___487.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
       ()))
       in () end ;
      { ( temp___487 ) with Borst__carriage.__split_fields = { ( temp___487.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
      } } )))
     in (
     [#"borst.adb" 124 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___489.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:125:7] ([#"borst.adb" 125 0 0] ()) );
    ( [@GP_Sloc:borst.adb:125:37] ([#"borst.adb" 125 0 0] ()) );
    ( [@GP_Sloc:borst.adb:125:34] ([#"borst.adb" 125 0 0] (let temp___492 [@mlw:proxy_symbol] [@introduced] = (let temp___491 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 125 0 0] begin ensures {true} let _ = (let _ = temp___491.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ()))
      in () end ;
     { ( temp___491 ) with Borst__train.__split_fields = { ( temp___491.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___490 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
      ( [#"borst.adb" 125 0 0] begin ensures {true} let _ = (let _ = temp___490.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
       ()))
       in () end ;
      { ( temp___490 ) with Borst__engine.__split_fields = { ( temp___490.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = (Borst__enginetemp__rep.of_rep((Borst__getheat___axiom.getheat((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)))))) } } )))
      } } )))
     in (
     [#"borst.adb" 125 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___492.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:126:7] ([#"borst.adb" 126 0 0] ()) );
    ( [@GP_Sloc:borst.adb:126:31] ([#"borst.adb" 126 0 0] ()) );
    ( [@GP_Sloc:borst.adb:126:28] ([#"borst.adb" 126 0 0] (let temp___494 [@mlw:proxy_symbol] [@introduced] = (let temp___493 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 126 0 0] begin ensures {true} let _ = (let _ = temp___493.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
      ()))
      in () end ;
     { ( temp___493 ) with Borst__train.__split_fields = { ( temp___493.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = (Borst__speed__rep.of_rep((Borst__getcurrentspeed___axiom.getcurrentspeed((Borst__mass__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight))) ((Borst__enginetemp__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat)))))) } } )))
     in (
     [#"borst.adb" 126 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___494.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:127:11] ([#"borst.adb" 127 0 0] ()) );
    ( [@GP_Sloc:borst.adb:127:51] ([#"borst.adb" 127 0 0] ()) );
    ( [@GP_Sloc:borst.adb:127:7] ([#"borst.adb" 127 0 0] (if (( ([#"borst.adb" 127 0 0] [#"borst.adb" 127 0 0] (([@branch_id=3212] Main.spark__branch).bool__content <- ( (Boolean.andb(((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) > (4 : int))) (((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) < (7 : int)))) )));
    ( [@branch_id=3212] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:128:10] ([#"borst.adb" 128 0 0] ()) );
     ( [@GP_Sloc:borst.adb:128:43] ([#"borst.adb" 128 0 0] (let temp___497 [@mlw:proxy_symbol] [@introduced] = (let temp___496 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
      ( [#"borst.adb" 128 0 0] begin ensures {true} let _ = (let _ = temp___496.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
       ()))
       in () end ;
      { ( temp___496 ) with Borst__train.__split_fields = { ( temp___496.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___495 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
       ( [#"borst.adb" 128 0 0] begin ensures {true} let _ = (let _ = temp___495.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__waterlight in (
        ()))
        in () end ;
       { ( temp___495 ) with Borst__engine.__split_fields = { ( temp___495.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__waterlight = (Borst__light__rep.of_rep((1 : int))) } } )))
       } } )))
      in (
      [#"borst.adb" 128 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___497.Borst__train.__split_fields ))))
     ) ) )) else (
     ( ();
     ( [@GP_Sloc:borst.adb:129:16] ([#"borst.adb" 129 0 0] ()) );
     ( [@GP_Sloc:borst.adb:129:12] ([#"borst.adb" 129 0 0] (if (( ([#"borst.adb" 129 0 0] [#"borst.adb" 129 0 0] (([@branch_id=3235] Main.spark__branch).bool__content <- ( ((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) <= (4 : int)) )));
     ( [@branch_id=3235] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:borst.adb:130:13] ([#"borst.adb" 130 0 0] ()) );
      ( [@GP_Sloc:borst.adb:130:46] ([#"borst.adb" 130 0 0] (let temp___500 [@mlw:proxy_symbol] [@introduced] = (let temp___499 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 130 0 0] begin ensures {true} let _ = (let _ = temp___499.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ()))
        in () end ;
       { ( temp___499 ) with Borst__train.__split_fields = { ( temp___499.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___498 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ( [#"borst.adb" 130 0 0] begin ensures {true} let _ = (let _ = temp___498.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__waterlight in (
         ()))
         in () end ;
        { ( temp___498 ) with Borst__engine.__split_fields = { ( temp___498.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__waterlight = (Borst__light__rep.of_rep((2 : int))) } } )))
        } } )))
       in (
       [#"borst.adb" 130 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___500.Borst__train.__split_fields ))))
      ) ) )) else (
      ()))) ) )))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) = (temp___old_502 - (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "maintl" defined at borst.ads:150, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__maintl__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__controlrod as Borst__controlrod
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__speed as Borst__speed
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__light as Borst__light
 use        Borst__light__rep as Borst__light__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom

 let def [#"borst.ads" 150 0 0][@GP_Subp:borst.ads:150] 
   (__void_param : unit)
  requires { [#"borst.ads" 150 0 0] true }
  ensures { [#"borst.ads" 150 0 0] ([#"borst.ads" 153 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Sloc:borst.ads:153:12] [@GP_Shape:pragargs__cmp] [@GP_Id:32] [@comment:     Post=>BorstMobile.Generator.Maintenance=BorstMobile.Generator.Maintenance'Old+1;            ^ borst.ads:153:12:VC_POSTCONDITION] [@model_vc_post] ( [@GP_Sloc:borst.ads:153:12] [@GP_Pretty_Ada:6925] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) = ((Borst__lastmaintained__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance )) + (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:150 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:150 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:150 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int))) (((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) < (100 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:150 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:5183] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5191] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (100 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance in (
   ()))
   in () end ;
  (let temp___old_525 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:borst.adb:138:10] ([#"borst.adb" 138 0 0] ()) );
    ( [@GP_Sloc:borst.adb:138:7] ([#"borst.adb" 138 0 0] (if (( ([#"borst.adb" 138 0 0] [#"borst.adb" 138 0 0] (([@branch_id=3263] Main.spark__branch).bool__content <- ( ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) )));
    ( [@branch_id=3263] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:139:10] ([#"borst.adb" 139 0 0] ()) );
     ( [@GP_Sloc:borst.adb:139:47] ([#"borst.adb" 139 0 0] ()) );
     ( [@GP_Sloc:borst.adb:139:44] ([#"borst.adb" 139 0 0] (let temp___506 [@mlw:proxy_symbol] [@introduced] = (let temp___505 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
      ( [#"borst.adb" 139 0 0] begin ensures {true} let _ = (let _ = temp___505.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
       ()))
       in () end ;
      { ( temp___505 ) with Borst__train.__split_fields = { ( temp___505.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___504 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
       ( [#"borst.adb" 139 0 0] begin ensures {true} let _ = (let _ = temp___504.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance in (
        ()))
        in () end ;
       { ( temp___504 ) with Borst__engine.__split_fields = { ( temp___504.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__maintenance = (Borst__lastmaintained__rep.of_rep(([#"borst.adb" 139 0 0] ( [@comment:         BorstMobile.Generator.Maintenance := BorstMobile.Generator.Maintenance + 1;                                                                                 ^ borst.adb:139:81:VC_RANGE_CHECK] [@GP_Shape:if__borstmobile_assign__add] [@vc:annotation] [@GP_Id:31] [@GP_Sloc:borst.adb:139:81] [@GP_Reason:VC_RANGE_CHECK] (Borst__lastmaintained.range_check_(((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) + (1 : int)))) )))) } } )))
       } } )))
      in (
       (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___506.Borst__train.__split_fields ))))
     ) );
     ( [@GP_Sloc:borst.adb:140:15] ([#"borst.adb" 140 0 0] ()) );
     ( [@GP_Sloc:borst.adb:140:86] ([#"borst.adb" 140 0 0] ()) );
     ( [@GP_Sloc:borst.adb:140:10] ([#"borst.adb" 140 0 0] (if (( ([#"borst.adb" 140 0 0] [#"borst.adb" 140 0 0] (([@branch_id=3284] Main.spark__branch).bool__content <- ( (Boolean.andb(((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) > (0 : int))) (((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) < (0 : int)))) )));
     ( [@branch_id=3284] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:borst.adb:141:13] ([#"borst.adb" 141 0 0] ()) );
      ( [@GP_Sloc:borst.adb:141:44] ([#"borst.adb" 141 0 0] (let temp___509 [@mlw:proxy_symbol] [@introduced] = (let temp___508 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 141 0 0] begin ensures {true} let _ = (let _ = temp___508.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ()))
        in () end ;
       { ( temp___508 ) with Borst__train.__split_fields = { ( temp___508.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___507 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ( [#"borst.adb" 141 0 0] begin ensures {true} let _ = (let _ = temp___507.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__mtnlight in (
         ()))
         in () end ;
        { ( temp___507 ) with Borst__engine.__split_fields = { ( temp___507.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__mtnlight = (Borst__light__rep.of_rep((1 : int))) } } )))
        } } )))
       in (
       [#"borst.adb" 141 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___509.Borst__train.__split_fields ))))
      ) ) )) else (
      ( ();
      ( [@GP_Sloc:borst.adb:142:19] ([#"borst.adb" 142 0 0] ()) );
      ( [@GP_Sloc:borst.adb:142:15] ([#"borst.adb" 142 0 0] (if (( ([#"borst.adb" 142 0 0] [#"borst.adb" 142 0 0] (([@branch_id=3319] Main.spark__branch).bool__content <- ( ((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) >= (0 : int)) )));
      ( [@branch_id=3319] Main.spark__branch ).bool__content )) then (
       ( ();
       ( [@GP_Sloc:borst.adb:143:16] ([#"borst.adb" 143 0 0] ()) );
       ( [@GP_Sloc:borst.adb:143:47] ([#"borst.adb" 143 0 0] (let temp___512 [@mlw:proxy_symbol] [@introduced] = (let temp___511 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
        ( [#"borst.adb" 143 0 0] begin ensures {true} let _ = (let _ = temp___511.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
         ()))
         in () end ;
        { ( temp___511 ) with Borst__train.__split_fields = { ( temp___511.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___510 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
         ( [#"borst.adb" 143 0 0] begin ensures {true} let _ = (let _ = temp___510.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__mtnlight in (
          ()))
          in () end ;
         { ( temp___510 ) with Borst__engine.__split_fields = { ( temp___510.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__mtnlight = (Borst__light__rep.of_rep((2 : int))) } } )))
         } } )))
        in (
        [#"borst.adb" 143 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___512.Borst__train.__split_fields ))))
       ) );
       ( [@GP_Sloc:borst.adb:144:19] ([#"borst.adb" 144 0 0] ()) );
       ( [@GP_Sloc:borst.adb:144:16] ([#"borst.adb" 144 0 0] (if (( ([#"borst.adb" 144 0 0] [#"borst.adb" 144 0 0] (([@branch_id=3341] Main.spark__branch).bool__content <- ( ((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) = (100 : int)) )));
       ( [@branch_id=3341] Main.spark__branch ).bool__content )) then (
        ( ();
        ( [@GP_Sloc:borst.adb:145:19] ([#"borst.adb" 145 0 0] ()) );
        ( [@GP_Sloc:borst.adb:145:49] ([#"borst.adb" 145 0 0] (let temp___515 [@mlw:proxy_symbol] [@introduced] = (let temp___514 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
         ( [#"borst.adb" 145 0 0] begin ensures {true} let _ = (let _ = temp___514.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
          ()))
          in () end ;
         { ( temp___514 ) with Borst__train.__split_fields = { ( temp___514.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___513 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
          ( [#"borst.adb" 145 0 0] begin ensures {true} let _ = (let _ = temp___513.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered in (
           ()))
           in () end ;
          { ( temp___513 ) with Borst__engine.__split_fields = { ( temp___513.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__powered = (Borst__power__rep.of_rep((1 : int))) } } )))
          } } )))
         in (
         [#"borst.adb" 145 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___515.Borst__train.__split_fields ))))
        ) );
        ( [@GP_Sloc:borst.adb:146:19] ([#"borst.adb" 146 0 0] ()) );
        ( [@GP_Sloc:borst.adb:146:46] ([#"borst.adb" 146 0 0] (let temp___518 [@mlw:proxy_symbol] [@introduced] = (let temp___517 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
         ( [#"borst.adb" 146 0 0] begin ensures {true} let _ = (let _ = temp___517.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
          ()))
          in () end ;
         { ( temp___517 ) with Borst__train.__split_fields = { ( temp___517.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___516 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
          ( [#"borst.adb" 146 0 0] begin ensures {true} let _ = (let _ = temp___516.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods in (
           ()))
           in () end ;
          { ( temp___516 ) with Borst__engine.__split_fields = { ( temp___516.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__rods = ( 5 : Borst__controlrod.controlrod ) } } )))
          } } )))
         in (
         [#"borst.adb" 146 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___518.Borst__train.__split_fields ))))
        ) );
        ( [@GP_Sloc:borst.adb:147:19] ([#"borst.adb" 147 0 0] ()) );
        ( [@GP_Sloc:borst.adb:147:40] ([#"borst.adb" 147 0 0] (let temp___520 [@mlw:proxy_symbol] [@introduced] = (let temp___519 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
         ( [#"borst.adb" 147 0 0] begin ensures {true} let _ = (let _ = temp___519.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
          ()))
          in () end ;
         { ( temp___519 ) with Borst__train.__split_fields = { ( temp___519.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = ( 0 : Borst__speed.speed ) } } )))
         in (
         [#"borst.adb" 147 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___520.Borst__train.__split_fields ))))
        ) );
        ( [@GP_Sloc:borst.adb:148:19] ([#"borst.adb" 148 0 0] ()) );
        ( [@GP_Sloc:borst.adb:148:46] ([#"borst.adb" 148 0 0] (let temp___523 [@mlw:proxy_symbol] [@introduced] = (let temp___522 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
         ( [#"borst.adb" 148 0 0] begin ensures {true} let _ = (let _ = temp___522.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
          ()))
          in () end ;
         { ( temp___522 ) with Borst__train.__split_fields = { ( temp___522.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___521 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
          ( [#"borst.adb" 148 0 0] begin ensures {true} let _ = (let _ = temp___521.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
           ()))
           in () end ;
          { ( temp___521 ) with Borst__engine.__split_fields = { ( temp___521.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = ( 0 : Borst__enginetemp.enginetemp ) } } )))
          } } )))
         in (
         [#"borst.adb" 148 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___523.Borst__train.__split_fields ))))
        ) ) )) else (
        ()))) ) )) else (
       ()))) ) )))) ) )) else (
     ()))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) = (temp___old_525 + (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "speedl" defined at borst.ads:155, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__speedl__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__addrod___axiom as Borst__addrod___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__controlrod as Borst__controlrod
 use        Borst__controlrod__rep as Borst__controlrod__rep
 use        Borst__enginetemp as Borst__enginetemp
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__power as Borst__power
 use        Borst__power__rep as Borst__power__rep
 use        Borst__lastmaintained as Borst__lastmaintained
 use        Borst__lastmaintained__rep as Borst__lastmaintained__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__addrod___axiom as Borst__addrod___axiom

 let def [#"borst.ads" 155 0 0][@GP_Subp:borst.ads:155] 
   (__void_param : unit)
  requires { [#"borst.ads" 155 0 0] true }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:155 *)
  ;
  [#"borst.ads" 155 0 0] assume { [#"borst.ads" 155 0 0] (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:155 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:155 *)
  ;
  [#"borst.ads" 155 0 0] begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Borst__lastmaintained__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance)) < (100 : int))) (((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank)) > (0 : int))))) (((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:155 *)
  ;
  [#"borst.ads" 155 0 0] assume { [#"borst.ads" 155 0 0] ( ( ( [@GP_Pretty_Ada:5237] ((Borst__lastmaintained__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__maintenance) < (100 : int)) ) /\ ( [@GP_Pretty_Ada:5247] ((Borst__level__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5257] ((Borst__power__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered) = (0 : int)) ) ) };
  [#"borst.ads" 155 0 0] try
   ( ();
   ( [@GP_Sloc:borst.adb:157:10] ([#"borst.adb" 157 0 0] ()) );
   ( [@GP_Sloc:borst.adb:157:7] ([#"borst.adb" 157 0 0] (if (( ([#"borst.adb" 157 0 0] [#"borst.adb" 157 0 0] (([@branch_id=3396] Main.spark__branch).bool__content <- ( ((Borst__power__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__powered)) = (0 : int)) )));
   ( [@branch_id=3396] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:158:13] ([#"borst.adb" 158 0 0] ()) );
    ( [@GP_Sloc:borst.adb:158:36] ([#"borst.adb" 158 0 0] ()) );
    ( [@GP_Sloc:borst.adb:158:10] ([#"borst.adb" 158 0 0] (if (( ([#"borst.adb" 158 0 0] [#"borst.adb" 158 0 0] (([@branch_id=3405] Main.spark__branch).bool__content <- ( ((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) > (Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__maxspeed))) )));
    ( [@branch_id=3405] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:159:16] ([#"borst.adb" 159 0 0] ()) );
     ( [@GP_Sloc:borst.adb:159:13] ([#"borst.adb" 159 0 0] (if (( ([#"borst.adb" 159 0 0] [#"borst.adb" 159 0 0] (([@branch_id=3416] Main.spark__branch).bool__content <- ( ((Borst__controlrod__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods)) < (5 : int)) )));
     ( [@branch_id=3416] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:borst.adb:160:16] ([#"borst.adb" 160 0 0] ()) );
      ( [@GP_Sloc:borst.adb:160:16] ([#"borst.adb" 160 0 0] ( ([#"borst.adb" 160 0 0] ( [@comment:               AddRod;                ^ borst.adb:160:16:VC_PRECONDITION] [@GP_Reason:VC_PRECONDITION] [@GP_Sloc:borst.adb:160:16] [@GP_Shape:if__if__if__call_addrod] [@vc:annotation] [@GP_Id:33] (Borst__addrod___axiom.addrod(())) )) )) ) )) else (
      ( ();
      ( [@GP_Sloc:borst.adb:162:16] ([#"borst.adb" 162 0 0] ()) );
      ( [@GP_Sloc:borst.adb:162:43] ([#"borst.adb" 162 0 0] (let temp___529 [@mlw:proxy_symbol] [@introduced] = (let temp___528 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 162 0 0] begin ensures {true} let _ = (let _ = temp___528.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ()))
        in () end ;
       { ( temp___528 ) with Borst__train.__split_fields = { ( temp___528.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___527 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ( [#"borst.adb" 162 0 0] begin ensures {true} let _ = (let _ = temp___527.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__rods in (
         ()))
         in () end ;
        { ( temp___527 ) with Borst__engine.__split_fields = { ( temp___527.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__rods = ( 5 : Borst__controlrod.controlrod ) } } )))
        } } )))
       in (
       [#"borst.adb" 162 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___529.Borst__train.__split_fields ))))
      ) );
      ( [@GP_Sloc:borst.adb:163:16] ([#"borst.adb" 163 0 0] ()) );
      ( [@GP_Sloc:borst.adb:163:37] ([#"borst.adb" 163 0 0] (let temp___531 [@mlw:proxy_symbol] [@introduced] = (let temp___530 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 163 0 0] begin ensures {true} let _ = (let _ = temp___530.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed in (
        ()))
        in () end ;
       { ( temp___530 ) with Borst__train.__split_fields = { ( temp___530.Borst__train.__split_fields ) with Borst__train.rec__borst__train__curspeed = ( 0 : Borst__speed.speed ) } } )))
       in (
       [#"borst.adb" 163 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___531.Borst__train.__split_fields ))))
      ) );
      ( [@GP_Sloc:borst.adb:164:16] ([#"borst.adb" 164 0 0] ()) );
      ( [@GP_Sloc:borst.adb:164:43] ([#"borst.adb" 164 0 0] (let temp___534 [@mlw:proxy_symbol] [@introduced] = (let temp___533 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 164 0 0] begin ensures {true} let _ = (let _ = temp___533.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ()))
        in () end ;
       { ( temp___533 ) with Borst__train.__split_fields = { ( temp___533.Borst__train.__split_fields ) with Borst__train.rec__borst__train__generator = (let temp___532 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator in (
        ( [#"borst.adb" 164 0 0] begin ensures {true} let _ = (let _ = temp___532.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__heat in (
         ()))
         in () end ;
        { ( temp___532 ) with Borst__engine.__split_fields = { ( temp___532.Borst__engine.__split_fields ) with Borst__engine.rec__borst__engine__heat = ( 0 : Borst__enginetemp.enginetemp ) } } )))
        } } )))
       in (
       [#"borst.adb" 164 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___534.Borst__train.__split_fields ))))
      ) ) )))) ) )) else (
     ()))) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "changecarriagetype" defined at borst.ads:161, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__changecarriagetype__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__passengercount as Borst__passengercount
 use        Borst__changecarriagetype__T4b as Borst__changecarriagetype__T4b
 use        Borst__changecarriagetype__T5b as Borst__changecarriagetype__T5b
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__changecarriagetype__T4b___axiom as Borst__changecarriagetype__T4b___axiom
 use        Borst__changecarriagetype__T5b___axiom as Borst__changecarriagetype__T5b___axiom

 let def [#"borst.ads" 161 0 0][@GP_Subp:borst.ads:161] 
   (__void_param : unit)
  requires { [#"borst.ads" 161 0 0] true }
  ensures { [#"borst.ads" 161 0 0] ([#"borst.ads" 164 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Sloc:borst.ads:164:13] [@GP_Id:36] [@model_vc_post] [@comment:     Post=> BorstMobile.TrainType = BorstMobile.Cart.Typtr and BorstMobile.TrainType /= BorstMobile.TrainType'Old;             ^ borst.ads:164:13:VC_POSTCONDITION] [@GP_Shape:pragargs__and] ( ( [@GP_Sloc:borst.ads:164:13] [@GP_Pretty_Ada:5301] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) ) /\ ( [@GP_Sloc:borst.ads:164:64] [@GP_Pretty_Ada:5311] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) <> (Borst__cartype__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype ))) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:161 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:161 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:161 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) = (0 : int))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:161 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:5283] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5291] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype in (
   ()))
   in () end ;
  (let temp___old_550 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:borst.adb:173:10] ([#"borst.adb" 173 0 0] ()) );
    ( [@GP_Sloc:borst.adb:173:7] ([#"borst.adb" 173 0 0] (if (( ([#"borst.adb" 173 0 0] [#"borst.adb" 173 0 0] (([@branch_id=3467] Main.spark__branch).bool__content <- ( ((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) = (0 : int)) )));
    ( [@branch_id=3467] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:174:15] ([#"borst.adb" 174 0 0] ()) );
     ( [@GP_Sloc:borst.adb:174:10] ([#"borst.adb" 174 0 0] (if (( ([#"borst.adb" 175 0 0] [#"borst.adb" 175 0 0] (([@branch_id=3482] Main.spark__branch).bool__content <- ( ((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (0 : int)) )));
     ( [@branch_id=3482] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:borst.adb:175:26] ([#"borst.adb" 175 0 0] ()) );
      ( [@GP_Sloc:borst.adb:175:48] ([#"borst.adb" 175 0 0] (let temp___538 [@mlw:proxy_symbol] [@introduced] = (let temp___537 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 175 0 0] begin ensures {true} let _ = (let _ = temp___537.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype in (
        ()))
        in () end ;
       { ( temp___537 ) with Borst__train.__split_fields = { ( temp___537.Borst__train.__split_fields ) with Borst__train.rec__borst__train__traintype = (Borst__cartype__rep.of_rep((1 : int))) } } )))
       in (
       [#"borst.adb" 175 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___538.Borst__train.__split_fields ))))
      ) );
      ( [@GP_Sloc:borst.adb:176:13] ([#"borst.adb" 176 0 0] ()) );
      ( [@GP_Sloc:borst.adb:178:44] ([#"borst.adb" 178 0 0] ()) );
      ( [@GP_Sloc:borst.adb:179:42] ([#"borst.adb" 179 0 0] ()) );
      ( [@GP_Sloc:borst.adb:176:30] ([#"borst.adb" 176 0 0] (let temp___542 [@mlw:proxy_symbol] [@introduced] = (let temp___541 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 176 0 0] begin ensures {true} let _ = (let _ = temp___541.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ()))
        in () end ;
       { ( temp___541 ) with Borst__train.__split_fields = { ( temp___541.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = { ( (let temp___539 [@mlw:proxy_symbol] [@introduced] = { Borst__changecarriagetype__T4b.__split_discrs = { Borst__carriage.rec__borst__carriage__typtr = (Borst__cartype__rep.of_rep((1 : int))) }; Borst__changecarriagetype__T4b.__split_fields = { Borst__changecarriagetype__T4b.rec__borst__carriage__cars = ( 0 : Borst__numcarriages.numcarriages ); Borst__changecarriagetype__T4b.rec__borst__carriage__maxspeed = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__maxspeed; Borst__changecarriagetype__T4b.rec__borst__carriage__weight = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight; Borst__changecarriagetype__T4b.rec__borst__carriage__voyagers = ( 0 : Borst__passengercount.passengercount ); Borst__changecarriagetype__T4b.rec__borst__carriage__cargo = Borst__freightweight.dummy }; Borst__changecarriagetype__T4b.attr__constrained = true } in (
       (let temp___540 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ( [#"borst.adb" 176 0 0] assert { [#"borst.adb" 176 0 0] ([#"borst.adb" 176 0 0] ( [@GP_Shape:if__case__borstmobile_assign] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:            BorstMobile.Cart := (Typtr=>PASSENGER,                              ^ borst.adb:176:30:VC_DISCRIMINANT_CHECK] [@GP_Id:34] [@GP_Sloc:borst.adb:176:30] (if ((Borst__carriage.attr__constrained temp___540)) then (
         (temp___539.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr = temp___540.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) else true) )) };
        temp___539 )))
       ))
        ) with Borst__carriage.attr__constrained = (Borst__carriage.attr__constrained({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) } } } )))
       in (
        (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___542.Borst__train.__split_fields ))))
      ) ) )) else (
      ( ();
      ( [@GP_Sloc:borst.adb:181:27] ([#"borst.adb" 181 0 0] ()) );
      ( [@GP_Sloc:borst.adb:181:49] ([#"borst.adb" 181 0 0] (let temp___544 [@mlw:proxy_symbol] [@introduced] = (let temp___543 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 181 0 0] begin ensures {true} let _ = (let _ = temp___543.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype in (
        ()))
        in () end ;
       { ( temp___543 ) with Borst__train.__split_fields = { ( temp___543.Borst__train.__split_fields ) with Borst__train.rec__borst__train__traintype = (Borst__cartype__rep.of_rep((0 : int))) } } )))
       in (
       [#"borst.adb" 181 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___544.Borst__train.__split_fields ))))
      ) );
      ( [@GP_Sloc:borst.adb:182:13] ([#"borst.adb" 182 0 0] ()) );
      ( [@GP_Sloc:borst.adb:184:44] ([#"borst.adb" 184 0 0] ()) );
      ( [@GP_Sloc:borst.adb:185:42] ([#"borst.adb" 185 0 0] ()) );
      ( [@GP_Sloc:borst.adb:182:30] ([#"borst.adb" 182 0 0] (let temp___548 [@mlw:proxy_symbol] [@introduced] = (let temp___547 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 182 0 0] begin ensures {true} let _ = (let _ = temp___547.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ()))
        in () end ;
       { ( temp___547 ) with Borst__train.__split_fields = { ( temp___547.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = { ( (let temp___545 [@mlw:proxy_symbol] [@introduced] = { Borst__changecarriagetype__T5b.__split_discrs = { Borst__carriage.rec__borst__carriage__typtr = (Borst__cartype__rep.of_rep((0 : int))) }; Borst__changecarriagetype__T5b.__split_fields = { Borst__changecarriagetype__T5b.rec__borst__carriage__cars = ( 0 : Borst__numcarriages.numcarriages ); Borst__changecarriagetype__T5b.rec__borst__carriage__maxspeed = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__maxspeed; Borst__changecarriagetype__T5b.rec__borst__carriage__weight = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight; Borst__changecarriagetype__T5b.rec__borst__carriage__cargo = ( 0 : Borst__freightweight.freightweight ); Borst__changecarriagetype__T5b.rec__borst__carriage__voyagers = Borst__passengercount.dummy }; Borst__changecarriagetype__T5b.attr__constrained = true } in (
       (let temp___546 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ( [#"borst.adb" 182 0 0] assert { [#"borst.adb" 182 0 0] ([#"borst.adb" 182 0 0] ( [@GP_Shape:if__case__borstmobile_assign] [@vc:annotation] [@GP_Sloc:borst.adb:182:30] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Id:35] [@comment:            BorstMobile.Cart := (Typtr=>FREIGHT,                              ^ borst.adb:182:30:VC_DISCRIMINANT_CHECK] (if ((Borst__carriage.attr__constrained temp___546)) then (
         (temp___545.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr = temp___546.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) else true) )) };
        temp___545 )))
       ))
        ) with Borst__carriage.attr__constrained = (Borst__carriage.attr__constrained({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) } } } )))
       in (
        (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___548.Borst__train.__split_fields ))))
      ) ) )))) ) )) else (
     ()))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) <> temp___old_550))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addpassenger" defined at borst.ads:166, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__addpassenger__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Int_Division as Int_Division
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__passengercount as Borst__passengercount
 use        Borst__passengercount__rep as Borst__passengercount__rep
 use        Borst__engine as Borst__engine
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 166 0 0][@GP_Subp:borst.ads:166] 
   (__void_param : unit)
  requires { [#"borst.ads" 166 0 0] true }
  ensures { [#"borst.ads" 166 0 0] ([#"borst.ads" 174 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@GP_Id:47] [@comment:     Post=>Integer(BorstMobile.Cart.Voyagers) <= (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)));            ^ borst.ads:174:12:VC_POSTCONDITION] [@GP_Sloc:borst.ads:174:12] [@model_vc_post] ( [@GP_Sloc:borst.ads:174:12] [@GP_Pretty_Ada:7181] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) <= ((1000 : int) * (Int_Division.div (Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) (10 : int)))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:166 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:166 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:166 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (1 : int))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (1 : int))))) (((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) > (0 : int))))) (((Borst__passengercount__rep.to_rep(([#"borst.ads" 171 0 0] ( [@GP_Sloc:borst.ads:171:26] [@GP_Shape:pragargs__and__and__and__cmp__selectcomp] [@GP_Id:43] [@vc:annotation] [@comment:     and BorstMobile.Cart.Voyagers < PassengerCount'Last and                          ^ borst.ads:171:26:VC_DISCRIMINANT_CHECK] [@GP_Reason:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) < (1000 : int))))) (((Borst__passengercount__rep.to_rep(([#"borst.ads" 172 0 0] ( [@GP_Sloc:borst.ads:172:30] [@GP_Shape:pragargs__and__and__cmp__typeconv__selectcomp] [@GP_Id:44] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:     Integer(BorstMobile.Cart.Voyagers) < (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last))) and                              ^ borst.ads:172:30:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) < ([#"borst.ads" 172 0 0] ( [@GP_Sloc:borst.ads:172:73] [@GP_Id:46] [@vc:annotation] [@GP_Shape:pragargs__and__and__cmp__mult] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:     Integer(BorstMobile.Cart.Voyagers) < (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last))) and                                                                         ^ borst.ads:172:73:VC_OVERFLOW_CHECK] (Standard__integer.range_check_(((1000 : int) * ([#"borst.ads" 172 0 0] ( [@GP_Sloc:borst.ads:172:106] [@comment:     Integer(BorstMobile.Cart.Voyagers) < (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last))) and                                                                                                          ^ borst.ads:172:106:VC_DIVISION_CHECK] [@GP_Id:45] [@vc:annotation] [@GP_Reason:VC_DIVISION_CHECK] [@GP_Shape:pragargs__and__and__cmp__mult__div] (Int_Division.div_((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars))) ((10 : int))) ))))) )))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:166 *)
  ;
   assume {  ( ( ( ( ( ( [@GP_Pretty_Ada:5345] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:5353] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (1 : int)) ) ) /\ ( [@GP_Pretty_Ada:5361] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5371] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) < (1000 : int)) ) ) /\ ( [@GP_Pretty_Ada:5382] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) < ((1000 : int) * (Int_Division.div (Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) (10 : int)))) ) ) /\ ( [@GP_Pretty_Ada:5407] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:borst.adb:193:10] ([#"borst.adb" 193 0 0] ()) );
   ( [@GP_Sloc:borst.adb:193:7] ([#"borst.adb" 193 0 0] (if (( ([#"borst.adb" 193 0 0] [#"borst.adb" 193 0 0] (([@branch_id=3574] Main.spark__branch).bool__content <- ( ((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) > (0 : int)) )));
   ( [@branch_id=3574] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:194:13] ([#"borst.adb" 194 0 0] ()) );
    ( [@GP_Sloc:borst.adb:194:42] ([#"borst.adb" 194 0 0] ()) );
    ( [@GP_Sloc:borst.adb:194:39] ([#"borst.adb" 194 0 0] (let temp___554 [@mlw:proxy_symbol] [@introduced] = (let temp___553 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 194 0 0] begin ensures {true} let _ = (let _ = temp___553.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___553 ) with Borst__train.__split_fields = { ( temp___553.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___552 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 194 0 0] begin ensures {true} let _ = (let _ = ([#"borst.adb" 194 0 0] ( [@comment:            BorstMobile.Cart.Voyagers := BorstMobile.Cart.Voyagers+1;                             ^ borst.adb:194:29:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Shape:if__borstmobile_assign__selectcomp] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:194:29] [@GP_Id:39] (Borst__carriage.rec__borst__carriage__voyagers_(temp___552)) )) in (
       ()))
       in () end ;
      { ( temp___552 ) with Borst__carriage.__split_fields = { ( temp___552.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__voyagers = (Borst__passengercount__rep.of_rep(([#"borst.adb" 194 0 0] ( [@GP_Shape:if__borstmobile_assign__add] [@vc:annotation] [@GP_Sloc:borst.adb:194:67] [@comment:            BorstMobile.Cart.Voyagers := BorstMobile.Cart.Voyagers+1;                                                                   ^ borst.adb:194:67:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:38] (Borst__passengercount.range_check_(((Borst__passengercount__rep.to_rep(([#"borst.adb" 194 0 0] ( [@comment:            BorstMobile.Cart.Voyagers := BorstMobile.Cart.Voyagers+1;                                                          ^ borst.adb:194:58:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Shape:if__borstmobile_assign__add__selectcomp] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Id:37] [@GP_Sloc:borst.adb:194:58] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) + (1 : int)))) )))) } } )))
      } } )))
     in (
      (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___554.Borst__train.__split_fields ))))
    ) );
    ( [@GP_Sloc:borst.adb:195:13] ([#"borst.adb" 195 0 0] ()) );
    ( [@GP_Sloc:borst.adb:195:40] ([#"borst.adb" 195 0 0] ()) );
    ( [@GP_Sloc:borst.adb:195:37] ([#"borst.adb" 195 0 0] (let temp___557 [@mlw:proxy_symbol] [@introduced] = (let temp___556 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
     ( [#"borst.adb" 195 0 0] begin ensures {true} let _ = (let _ = temp___556.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ()))
      in () end ;
     { ( temp___556 ) with Borst__train.__split_fields = { ( temp___556.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___555 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
      ( [#"borst.adb" 195 0 0] begin ensures {true} let _ = (let _ = temp___555.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
       ()))
       in () end ;
      { ( temp___555 ) with Borst__carriage.__split_fields = { ( temp___555.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
      } } )))
     in (
     [#"borst.adb" 195 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___557.Borst__train.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Borst__passengercount__rep.to_rep(([#"borst.ads" 174 0 0] ( [@GP_Id:40] [@GP_Sloc:borst.ads:174:36] [@comment:     Post=>Integer(BorstMobile.Cart.Voyagers) <= (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)));                                    ^ borst.ads:174:36:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Shape:pragargs__cmp__typeconv__selectcomp] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) <= ([#"borst.ads" 174 0 0] ( [@GP_Id:42] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:     Post=>Integer(BorstMobile.Cart.Voyagers) <= (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)));                                                                                ^ borst.ads:174:80:VC_OVERFLOW_CHECK] [@GP_Shape:pragargs__cmp__mult] [@GP_Sloc:borst.ads:174:80] (Standard__integer.range_check_(((1000 : int) * ([#"borst.ads" 174 0 0] ( [@GP_Id:41] [@vc:annotation] [@GP_Shape:pragargs__cmp__mult__div] [@GP_Reason:VC_DIVISION_CHECK] [@GP_Sloc:borst.ads:174:113] [@comment:     Post=>Integer(BorstMobile.Cart.Voyagers) <= (Integer(PassengerCount'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)));                                                                                                                 ^ borst.ads:174:113:VC_DIVISION_CHECK] (Int_Division.div_((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars))) ((10 : int))) ))))) ))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removepassenger" defined at borst.ads:176, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__removepassenger__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__passengercount as Borst__passengercount
 use        Borst__passengercount__rep as Borst__passengercount__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 176 0 0][@GP_Subp:borst.ads:176] 
   (__void_param : unit)
  requires { [#"borst.ads" 176 0 0] true }
  ensures { [#"borst.ads" 176 0 0] ([#"borst.ads" 182 0 0] ( [@GP_Id:56] [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=>BorstMobile.Cart.Voyagers <= BorstMobile.Cart.Voyagers'Old and BorstMobile.Cart.Voyagers >= PassengerCount'First;            ^ borst.ads:182:12:VC_POSTCONDITION] [@model_vc_post] [@GP_Shape:pragargs__and] [@GP_Sloc:borst.ads:182:12] ( ( [@GP_Pretty_Ada:5505] [@GP_Sloc:borst.ads:182:12] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) <= (Borst__passengercount__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers ))) ) /\ ( [@GP_Sloc:borst.ads:182:75] [@GP_Pretty_Ada:5519] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) >= (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:176 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:176 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:176 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb(((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (1 : int))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (1 : int))))) (((Borst__passengercount__rep.to_rep(([#"borst.ads" 180 0 0] ( [@comment:     BorstMobile.Cart.Voyagers > PassengerCount'First                      ^ borst.ads:180:22:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Shape:pragargs__and__and__cmp__selectcomp] [@GP_Sloc:borst.ads:180:22] [@GP_Id:55] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) > (0 : int))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:176 *)
  ;
   assume {  ( ( ( ( [@GP_Pretty_Ada:5469] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:5477] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (1 : int)) ) ) /\ ( [@GP_Pretty_Ada:5485] ((Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5493] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) };
   begin ensures {true} let _ = (let _ = ([#"borst.ads" 182 0 0] ( [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Shape:pragargs__and__cmp__old_ref__selectcomp] [@comment:     Post=>BorstMobile.Cart.Voyagers <= BorstMobile.Cart.Voyagers'Old and BorstMobile.Cart.Voyagers >= PassengerCount'First;                                                         ^ borst.ads:182:57:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:182:57] [@GP_Id:54] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )) in (
   ()))
   in () end ;
  (let temp___old_567 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Borst__passengercount__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__voyagers))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:borst.adb:201:10] ([#"borst.adb" 201 0 0] ()) );
    ( [@GP_Sloc:borst.adb:201:7] ([#"borst.adb" 201 0 0] (if (( ([#"borst.adb" 201 0 0] [#"borst.adb" 201 0 0] (([@branch_id=3626] Main.spark__branch).bool__content <- ( ((Borst__passengercount__rep.to_rep(([#"borst.adb" 201 0 0] ( [@comment:      if BorstMobile.Cart.Voyagers > PassengerCount'First then                          ^ borst.adb:201:26:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Sloc:borst.adb:201:26] [@GP_Shape:if__cmp__selectcomp] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Id:51] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) > (0 : int)) )));
    ( [@branch_id=3626] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:202:10] ([#"borst.adb" 202 0 0] ()) );
     ( [@GP_Sloc:borst.adb:202:39] ([#"borst.adb" 202 0 0] ()) );
     ( [@GP_Sloc:borst.adb:202:36] ([#"borst.adb" 202 0 0] (let temp___562 [@mlw:proxy_symbol] [@introduced] = (let temp___561 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
      ( [#"borst.adb" 202 0 0] begin ensures {true} let _ = (let _ = temp___561.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ()))
       in () end ;
      { ( temp___561 ) with Borst__train.__split_fields = { ( temp___561.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___560 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ( [#"borst.adb" 202 0 0] begin ensures {true} let _ = (let _ = ([#"borst.adb" 202 0 0] ( [@comment:         BorstMobile.Cart.Voyagers := BorstMobile.Cart.Voyagers-1;                          ^ borst.adb:202:26:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Shape:if__borstmobile_assign__selectcomp] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:202:26] [@GP_Id:50] (Borst__carriage.rec__borst__carriage__voyagers_(temp___560)) )) in (
        ()))
        in () end ;
       { ( temp___560 ) with Borst__carriage.__split_fields = { ( temp___560.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__voyagers = (Borst__passengercount__rep.of_rep(([#"borst.adb" 202 0 0] ( [@comment:         BorstMobile.Cart.Voyagers := BorstMobile.Cart.Voyagers-1;                                                                ^ borst.adb:202:64:VC_RANGE_CHECK] [@vc:annotation] [@GP_Id:49] [@GP_Shape:if__borstmobile_assign__sub] [@GP_Sloc:borst.adb:202:64] [@GP_Reason:VC_RANGE_CHECK] (Borst__passengercount.range_check_(((Borst__passengercount__rep.to_rep(([#"borst.adb" 202 0 0] ( [@GP_Id:48] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Shape:if__borstmobile_assign__sub__selectcomp] [@comment:         BorstMobile.Cart.Voyagers := BorstMobile.Cart.Voyagers-1;                                                       ^ borst.adb:202:55:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:202:55] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) - (1 : int)))) )))) } } )))
       } } )))
      in (
       (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___562.Borst__train.__split_fields ))))
     ) );
     ( [@GP_Sloc:borst.adb:203:10] ([#"borst.adb" 203 0 0] ()) );
     ( [@GP_Sloc:borst.adb:203:37] ([#"borst.adb" 203 0 0] ()) );
     ( [@GP_Sloc:borst.adb:203:34] ([#"borst.adb" 203 0 0] (let temp___565 [@mlw:proxy_symbol] [@introduced] = (let temp___564 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
      ( [#"borst.adb" 203 0 0] begin ensures {true} let _ = (let _ = temp___564.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ()))
       in () end ;
      { ( temp___564 ) with Borst__train.__split_fields = { ( temp___564.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___563 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ( [#"borst.adb" 203 0 0] begin ensures {true} let _ = (let _ = temp___563.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
        ()))
        in () end ;
       { ( temp___563 ) with Borst__carriage.__split_fields = { ( temp___563.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
       } } )))
      in (
      [#"borst.adb" 203 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___565.Borst__train.__split_fields ))))
     ) ) )) else (
     ()))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = (Boolean.andb(((Borst__passengercount__rep.to_rep(([#"borst.ads" 182 0 0] ( [@comment:     Post=>BorstMobile.Cart.Voyagers <= BorstMobile.Cart.Voyagers'Old and BorstMobile.Cart.Voyagers >= PassengerCount'First;                            ^ borst.ads:182:28:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:182:28] [@GP_Shape:pragargs__and__cmp__selectcomp] [@GP_Id:52] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) <= temp___old_567)) (((Borst__passengercount__rep.to_rep(([#"borst.ads" 182 0 0] ( [@comment:     Post=>BorstMobile.Cart.Voyagers <= BorstMobile.Cart.Voyagers'Old and BorstMobile.Cart.Voyagers >= PassengerCount'First;                                                                                           ^ borst.ads:182:91:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:182:91] [@GP_Shape:pragargs__and__cmp__selectcomp] [@GP_Id:53] (Borst__carriage.rec__borst__carriage__voyagers_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) >= (0 : int)))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addfreight" defined at borst.ads:184, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__addfreight__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Int_Division as Int_Division
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__freightweight__rep as Borst__freightweight__rep
 use        Borst__engine as Borst__engine
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 184 0 0][@GP_Subp:borst.ads:184] 
   (__void_param : unit)
  requires { [#"borst.ads" 184 0 0] true }
  ensures { [#"borst.ads" 184 0 0] ([#"borst.ads" 192 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post=>Integer(BorstMobile.Cart.Cargo) > Integer(BorstMobile.Cart.Cargo'Old) and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;            ^ borst.ads:192:12:VC_POSTCONDITION] [@model_vc_post] [@GP_Id:69] [@GP_Shape:pragargs__and] [@GP_Sloc:borst.ads:192:12] ( ( ( [@GP_Pretty_Ada:5626] [@GP_Sloc:borst.ads:192:12] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) > (Borst__freightweight__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo ))) ) /\ ( [@GP_Sloc:borst.ads:192:86] [@GP_Pretty_Ada:5640] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) ) /\ ( [@GP_Sloc:borst.ads:192:121] [@GP_Pretty_Ada:5648] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:184 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:184 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:184 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (0 : int))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (0 : int))))) (((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) > (0 : int))))) (((Borst__freightweight__rep.to_rep(([#"borst.ads" 189 0 0] ( [@GP_Shape:pragargs__and__and__and__cmp__selectcomp] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:189:26] [@GP_Id:65] [@comment:     and BorstMobile.Cart.Cargo < FreightWeight'Last and                          ^ borst.ads:189:26:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) < (1100 : int))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int))))) (((Borst__freightweight__rep.to_rep(([#"borst.ads" 191 0 0] ( [@GP_Sloc:borst.ads:191:30] [@GP_Shape:pragargs__and__cmp__typeconv__selectcomp] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:     Integer(BorstMobile.Cart.Cargo) < (Integer(FreightWeight'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)))),                              ^ borst.ads:191:30:VC_DISCRIMINANT_CHECK] [@GP_Id:66] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) < ([#"borst.ads" 191 0 0] ( [@GP_Shape:pragargs__and__cmp__mult] [@GP_Sloc:borst.ads:191:69] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Id:68] [@comment:     Integer(BorstMobile.Cart.Cargo) < (Integer(FreightWeight'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)))),                                                                     ^ borst.ads:191:69:VC_OVERFLOW_CHECK] (Standard__integer.range_check_(((1100 : int) * ([#"borst.ads" 191 0 0] ( [@GP_Shape:pragargs__and__cmp__mult__div] [@vc:annotation] [@GP_Reason:VC_DIVISION_CHECK] [@comment:     Integer(BorstMobile.Cart.Cargo) < (Integer(FreightWeight'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)))),                                                                                                      ^ borst.ads:191:102:VC_DIVISION_CHECK] [@GP_Id:67] [@GP_Sloc:borst.ads:191:102] (Int_Division.div_((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars))) ((10 : int))) ))))) ))))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:184 *)
  ;
   assume {  ( ( ( ( ( ( [@GP_Pretty_Ada:5551] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5559] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5567] ((Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5577] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) < (1100 : int)) ) ) /\ ( [@GP_Pretty_Ada:5585] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5596] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) < ((1100 : int) * (Int_Division.div (Borst__numcarriages__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars) (10 : int)))) ) ) };
   begin ensures {true} let _ = (let _ = ([#"borst.ads" 192 0 0] ( [@GP_Shape:pragargs__and__and__cmp__typeconv__old_ref__selectcomp] [@GP_Sloc:borst.ads:192:70] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Id:64] [@comment:     Post=>Integer(BorstMobile.Cart.Cargo) > Integer(BorstMobile.Cart.Cargo'Old) and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;                                                                      ^ borst.ads:192:70:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )) in (
   ()))
   in () end ;
  (let temp___old_576 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:borst.adb:209:10] ([#"borst.adb" 209 0 0] ()) );
    ( [@GP_Sloc:borst.adb:209:7] ([#"borst.adb" 209 0 0] (if (( ([#"borst.adb" 209 0 0] [#"borst.adb" 209 0 0] (([@branch_id=3678] Main.spark__branch).bool__content <- ( ((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) > (0 : int)) )));
    ( [@branch_id=3678] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:210:22] ([#"borst.adb" 210 0 0] ()) );
     ( [@GP_Sloc:borst.adb:210:88] ([#"borst.adb" 210 0 0] ()) );
     ( [@GP_Sloc:borst.adb:210:10] ([#"borst.adb" 210 0 0] (if (( ([#"borst.adb" 210 0 0] [#"borst.adb" 210 0 0] (([@branch_id=3688] Main.spark__branch).bool__content <- ( ((Borst__freightweight__rep.to_rep(([#"borst.adb" 210 0 0] ( [@comment:         if (Integer(BorstMobile.Cart.Cargo) < (Integer(FreightWeight'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)))) then                                      ^ borst.adb:210:38:VC_DISCRIMINANT_CHECK] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Id:60] [@GP_Shape:if__if__cmp__typeconv__selectcomp] [@GP_Sloc:borst.adb:210:38] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) < ([#"borst.adb" 210 0 0] ( [@comment:         if (Integer(BorstMobile.Cart.Cargo) < (Integer(FreightWeight'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)))) then                                                                             ^ borst.adb:210:77:VC_OVERFLOW_CHECK] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Shape:if__if__cmp__mult] [@GP_Sloc:borst.adb:210:77] [@GP_Id:62] (Standard__integer.range_check_(((1100 : int) * ([#"borst.adb" 210 0 0] ( [@vc:annotation] [@GP_Reason:VC_DIVISION_CHECK] [@GP_Shape:if__if__cmp__mult__div] [@comment:         if (Integer(BorstMobile.Cart.Cargo) < (Integer(FreightWeight'Last) * (Integer(BorstMobile.Cart.Cars)/Integer(NumCarriages'Last)))) then                                                                                                              ^ borst.adb:210:110:VC_DIVISION_CHECK] [@GP_Id:61] [@GP_Sloc:borst.adb:210:110] (Int_Division.div_((Borst__numcarriages__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars))) ((10 : int))) ))))) ))) )));
     ( [@branch_id=3688] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:borst.adb:211:13] ([#"borst.adb" 211 0 0] ()) );
      ( [@GP_Sloc:borst.adb:211:39] ([#"borst.adb" 211 0 0] ()) );
      ( [@GP_Sloc:borst.adb:211:36] ([#"borst.adb" 211 0 0] (let temp___571 [@mlw:proxy_symbol] [@introduced] = (let temp___570 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 211 0 0] begin ensures {true} let _ = (let _ = temp___570.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ()))
        in () end ;
       { ( temp___570 ) with Borst__train.__split_fields = { ( temp___570.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___569 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ( [#"borst.adb" 211 0 0] begin ensures {true} let _ = (let _ = ([#"borst.adb" 211 0 0] ( [@GP_Id:59] [@comment:            BorstMobile.Cart.Cargo := BorstMobile.Cart.Cargo+1;                             ^ borst.adb:211:29:VC_DISCRIMINANT_CHECK] [@GP_Shape:if__if__borstmobile_assign__selectcomp] [@vc:annotation] [@GP_Sloc:borst.adb:211:29] [@GP_Reason:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__cargo_(temp___569)) )) in (
         ()))
         in () end ;
        { ( temp___569 ) with Borst__carriage.__split_fields = { ( temp___569.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__cargo = (Borst__freightweight__rep.of_rep(([#"borst.adb" 211 0 0] ( [@GP_Shape:if__if__borstmobile_assign__add] [@GP_Id:58] [@GP_Sloc:borst.adb:211:61] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:            BorstMobile.Cart.Cargo := BorstMobile.Cart.Cargo+1;                                                             ^ borst.adb:211:61:VC_RANGE_CHECK] (Borst__freightweight.range_check_(((Borst__freightweight__rep.to_rep(([#"borst.adb" 211 0 0] ( [@GP_Id:57] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:            BorstMobile.Cart.Cargo := BorstMobile.Cart.Cargo+1;                                                       ^ borst.adb:211:55:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:211:55] [@GP_Shape:if__if__borstmobile_assign__add__selectcomp] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) + (1 : int)))) )))) } } )))
        } } )))
       in (
        (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___571.Borst__train.__split_fields ))))
      ) );
      ( [@GP_Sloc:borst.adb:212:13] ([#"borst.adb" 212 0 0] ()) );
      ( [@GP_Sloc:borst.adb:212:40] ([#"borst.adb" 212 0 0] ()) );
      ( [@GP_Sloc:borst.adb:212:37] ([#"borst.adb" 212 0 0] (let temp___574 [@mlw:proxy_symbol] [@introduced] = (let temp___573 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
       ( [#"borst.adb" 212 0 0] begin ensures {true} let _ = (let _ = temp___573.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ()))
        in () end ;
       { ( temp___573 ) with Borst__train.__split_fields = { ( temp___573.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___572 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
        ( [#"borst.adb" 212 0 0] begin ensures {true} let _ = (let _ = temp___572.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
         ()))
         in () end ;
        { ( temp___572 ) with Borst__carriage.__split_fields = { ( temp___572.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
        } } )))
       in (
       [#"borst.adb" 212 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___574.Borst__train.__split_fields ))))
      ) ) )) else (
      ()))) ) )) else (
     ()))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Borst__freightweight__rep.to_rep(([#"borst.ads" 192 0 0] ( [@GP_Shape:pragargs__and__and__cmp__typeconv__selectcomp] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:192:36] [@comment:     Post=>Integer(BorstMobile.Cart.Cargo) > Integer(BorstMobile.Cart.Cargo'Old) and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;                                    ^ borst.ads:192:36:VC_DISCRIMINANT_CHECK] [@GP_Id:63] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) > temp___old_576)) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (0 : int))))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (0 : int)))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removefreight" defined at borst.ads:194, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__removefreight__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Borst__borstmobile as Borst__borstmobile
 use        Borst__train as Borst__train
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight___axiom as Borst__calcweight___axiom
 use        Borst__speed as Borst__speed
 use        Borst__speed__rep as Borst__speed__rep
 use        Borst__level as Borst__level
 use        Borst__level__rep as Borst__level__rep
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass__rep as Borst__mass__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__freightweight__rep as Borst__freightweight__rep
 use        Borst__engine as Borst__engine
 use        Borst__controlrod___axiom as Borst__controlrod___axiom
 use        Borst__enginetemp___axiom as Borst__enginetemp___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__power___axiom as Borst__power___axiom
 use        Borst__lastmaintained___axiom as Borst__lastmaintained___axiom
 use        Borst__light___axiom as Borst__light___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__engine___axiom as Borst__engine___axiom
 use        Borst__train___axiom as Borst__train___axiom
 use        Borst__borstmobile___axiom as Borst__borstmobile___axiom
 use        Borst__calcweight___axiom as Borst__calcweight___axiom

 let def [#"borst.ads" 194 0 0][@GP_Subp:borst.ads:194] 
   (__void_param : unit)
  requires { [#"borst.ads" 194 0 0] true }
  ensures { [#"borst.ads" 194 0 0] ([#"borst.ads" 200 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Id:78] [@model_vc_post] [@comment:     Post=>BorstMobile.Cart.Cargo = BorstMobile.Cart.Cargo'Old-1 and BorstMobile.Cart.Cargo >= FreightWeight'First and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;            ^ borst.ads:200:12:VC_POSTCONDITION] [@GP_Shape:pragargs__and] [@GP_Sloc:borst.ads:200:12] ( ( ( ( [@GP_Pretty_Ada:5714] [@GP_Sloc:borst.ads:200:12] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) = ((Borst__freightweight__rep.to_rep (old { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo )) - (1 : int))) ) /\ ( [@GP_Sloc:borst.ads:200:70] [@GP_Pretty_Ada:5730] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) >= (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5738] [@GP_Sloc:borst.ads:200:120] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) ) /\ ( [@GP_Sloc:borst.ads:200:155] [@GP_Pretty_Ada:5746] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:194 *)
  ;
   assume {  (Borst__train___axiom.dynamic_invariant { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:194 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:194 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb(((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (0 : int))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (0 : int))))) (((Borst__freightweight__rep.to_rep(([#"borst.ads" 198 0 0] ( [@comment:     and BorstMobile.Cart.Cargo > FreightWeight'First                          ^ borst.ads:198:26:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:198:26] [@vc:annotation] [@GP_Id:77] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Shape:pragargs__and__and__cmp__selectcomp] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) > (0 : int))))) (((Borst__speed__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:194 *)
  ;
   assume {  ( ( ( ( [@GP_Pretty_Ada:5678] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:5686] ((Borst__cartype__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5694] ((Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo) > (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:5702] ((Borst__speed__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__curspeed) = (0 : int)) ) ) };
   begin ensures {true} let _ = (let _ = ([#"borst.ads" 200 0 0] ( [@GP_Shape:pragargs__and__and__and__cmp__sub__old_ref__selectcomp] [@vc:annotation] [@GP_Id:76] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:     Post=>BorstMobile.Cart.Cargo = BorstMobile.Cart.Cargo'Old-1 and BorstMobile.Cart.Cargo >= FreightWeight'First and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;                                                     ^ borst.ads:200:53:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:200:53] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )) in (
   ()))
   in () end ;
  (let temp___old_585 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Borst__freightweight__rep.to_rep { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cargo))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:borst.adb:219:10] ([#"borst.adb" 219 0 0] ()) );
    ( [@GP_Sloc:borst.adb:219:7] ([#"borst.adb" 219 0 0] (if (( ([#"borst.adb" 219 0 0] [#"borst.adb" 219 0 0] (([@branch_id=3758] Main.spark__branch).bool__content <- ( ((Borst__freightweight__rep.to_rep(([#"borst.adb" 219 0 0] ( [@vc:annotation] [@comment:      if BorstMobile.Cart.Cargo > FreightWeight'First then                          ^ borst.adb:219:26:VC_DISCRIMINANT_CHECK] [@GP_Id:73] [@GP_Shape:if__cmp__selectcomp] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:219:26] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) > (0 : int)) )));
    ( [@branch_id=3758] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:borst.adb:220:10] ([#"borst.adb" 220 0 0] ()) );
     ( [@GP_Sloc:borst.adb:220:36] ([#"borst.adb" 220 0 0] ()) );
     ( [@GP_Sloc:borst.adb:220:33] ([#"borst.adb" 220 0 0] (let temp___580 [@mlw:proxy_symbol] [@introduced] = (let temp___579 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
      ( [#"borst.adb" 220 0 0] begin ensures {true} let _ = (let _ = temp___579.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ()))
       in () end ;
      { ( temp___579 ) with Borst__train.__split_fields = { ( temp___579.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___578 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ( [#"borst.adb" 220 0 0] begin ensures {true} let _ = (let _ = ([#"borst.adb" 220 0 0] ( [@GP_Sloc:borst.adb:220:26] [@vc:annotation] [@comment:         BorstMobile.Cart.Cargo := BorstMobile.Cart.Cargo-1;                          ^ borst.adb:220:26:VC_DISCRIMINANT_CHECK] [@GP_Id:72] [@GP_Shape:if__borstmobile_assign__selectcomp] [@GP_Reason:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__cargo_(temp___578)) )) in (
        ()))
        in () end ;
       { ( temp___578 ) with Borst__carriage.__split_fields = { ( temp___578.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__cargo = (Borst__freightweight__rep.of_rep(([#"borst.adb" 220 0 0] ( [@comment:         BorstMobile.Cart.Cargo := BorstMobile.Cart.Cargo-1;                                                          ^ borst.adb:220:58:VC_RANGE_CHECK] [@GP_Sloc:borst.adb:220:58] [@vc:annotation] [@GP_Id:71] [@GP_Shape:if__borstmobile_assign__sub] [@GP_Reason:VC_RANGE_CHECK] (Borst__freightweight.range_check_(((Borst__freightweight__rep.to_rep(([#"borst.adb" 220 0 0] ( [@GP_Sloc:borst.adb:220:52] [@GP_Id:70] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Shape:if__borstmobile_assign__sub__selectcomp] [@comment:         BorstMobile.Cart.Cargo := BorstMobile.Cart.Cargo-1;                                                    ^ borst.adb:220:52:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) - (1 : int)))) )))) } } )))
       } } )))
      in (
       (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___580.Borst__train.__split_fields ))))
     ) );
     ( [@GP_Sloc:borst.adb:221:10] ([#"borst.adb" 221 0 0] ()) );
     ( [@GP_Sloc:borst.adb:221:37] ([#"borst.adb" 221 0 0] ()) );
     ( [@GP_Sloc:borst.adb:221:34] ([#"borst.adb" 221 0 0] (let temp___583 [@mlw:proxy_symbol] [@introduced] = (let temp___582 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content } in (
      ( [#"borst.adb" 221 0 0] begin ensures {true} let _ = (let _ = temp___582.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ()))
       in () end ;
      { ( temp___582 ) with Borst__train.__split_fields = { ( temp___582.Borst__train.__split_fields ) with Borst__train.rec__borst__train__cart = (let temp___581 [@mlw:proxy_symbol] [@introduced] = { Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart in (
       ( [#"borst.adb" 221 0 0] begin ensures {true} let _ = (let _ = temp___581.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__weight in (
        ()))
        in () end ;
       { ( temp___581 ) with Borst__carriage.__split_fields = { ( temp___581.Borst__carriage.__split_fields ) with Borst__carriage.rec__borst__carriage__weight = (Borst__mass__rep.of_rep((Borst__calcweight___axiom.calcweight((Borst__level__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__generator.Borst__engine.__split_fields.Borst__engine.rec__borst__engine__watertank))) ({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)))) } } )))
       } } )))
      in (
      [#"borst.adb" 221 0 0] (Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content <- ( temp___583.Borst__train.__split_fields ))))
     ) ) )) else (
     ()))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb(((Borst__freightweight__rep.to_rep(([#"borst.ads" 200 0 0] ( [@GP_Shape:pragargs__and__and__and__cmp__selectcomp] [@vc:annotation] [@GP_Id:74] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:     Post=>BorstMobile.Cart.Cargo = BorstMobile.Cart.Cargo'Old-1 and BorstMobile.Cart.Cargo >= FreightWeight'First and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;                            ^ borst.ads:200:28:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.ads:200:28] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) = (temp___old_585 - (1 : int)))) (((Borst__freightweight__rep.to_rep(([#"borst.ads" 200 0 0] ( [@GP_Sloc:borst.ads:200:86] [@comment:     Post=>BorstMobile.Cart.Cargo = BorstMobile.Cart.Cargo'Old-1 and BorstMobile.Cart.Cargo >= FreightWeight'First and BorstMobile.TrainType=FREIGHT  and BorstMobile.Cart.Typtr=FREIGHT;                                                                                      ^ borst.ads:200:86:VC_DISCRIMINANT_CHECK] [@GP_Shape:pragargs__and__and__and__cmp__selectcomp] [@vc:annotation] [@GP_Id:75] [@GP_Reason:VC_DISCRIMINANT_CHECK] (Borst__carriage.rec__borst__carriage__cargo_({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart)) )))) >= (0 : int))))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__traintype)) = (0 : int))))) (((Borst__cartype__rep.to_rep({ Borst__train.__split_fields = Borst__borstmobile.borstmobile__split_fields.Borst__train.__split_fields__content }.Borst__train.__split_fields.Borst__train.rec__borst__train__cart.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (0 : int)))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "calcweight" defined at borst.ads:203, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Borst__calcweight__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Standard__integer as Standard__integer
 use        Borst__calcweight__wat as Borst__calcweight__wat
 use        Borst__carriage as Borst__carriage
 use        Borst__calcweight__car as Borst__calcweight__car
 use        Borst__calcweight__total as Borst__calcweight__total
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__cartype as Borst__cartype
 use        Borst__cartype__rep as Borst__cartype__rep
 use        Borst__mass as Borst__mass
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages as Borst__numcarriages
 use        Borst__numcarriages__rep as Borst__numcarriages__rep
 use        Borst__freightweight as Borst__freightweight
 use        Borst__freightweight__rep as Borst__freightweight__rep
 use        Borst__TpassengercountB as Borst__TpassengercountB
 use        Borst__passengercount as Borst__passengercount
 use        Borst__passengercount__rep as Borst__passengercount__rep
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Borst__calcweight__total___axiom as Borst__calcweight__total___axiom
 use        Borst__speed___axiom as Borst__speed___axiom
 use        Borst__level___axiom as Borst__level___axiom
 use        Borst__cartype___axiom as Borst__cartype___axiom
 use        Borst__mass___axiom as Borst__mass___axiom
 use        Borst__numcarriages___axiom as Borst__numcarriages___axiom
 use        Borst__freightweight___axiom as Borst__freightweight___axiom
 use        Borst__passengercount___axiom as Borst__passengercount___axiom
 use        Borst__carriage___axiom as Borst__carriage___axiom
 use        Borst__calcweight__wat___axiom as Borst__calcweight__wat___axiom
 use        Borst__calcweight__car___axiom as Borst__calcweight__car___axiom
 use        Borst__TpassengercountB___axiom as Borst__TpassengercountB___axiom

 val borst__calcweight__result [@model_trace:5747@result] [@model_projected] [@name:CalcWeight]  : int__ref 
 
 let def [#"borst.ads" 203 0 0][@GP_Subp:borst.ads:203] 
   (__void_param : unit)
  requires { [#"borst.ads" 203 0 0] true }
  ensures { [#"borst.ads" 203 0 0] ([#"borst.ads" 204 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@GP_Sloc:borst.ads:204:12] [@model_vc_post] [@GP_Id:90] [@comment:     Post=>CalcWeight'Result<=Mass'Last;            ^ borst.ads:204:12:VC_POSTCONDITION] ( [@GP_Pretty_Ada:7559] [@GP_Sloc:borst.ads:204:12] (borst__calcweight__result.int__content <= (1700 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram borst.ads:203 *)
  ;
   assume {  (Borst__level___axiom.dynamic_invariant Borst__calcweight__wat.wat True False True True) };
   assume {  (Borst__carriage___axiom.dynamic_invariant Borst__calcweight__car.car True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram borst.ads:203 *)
  ;
  () (* Check for RTE in the Pre of the subprogram borst.ads:203 *)
  ;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram borst.ads:203 *)
  ;
   try
   ( ();
   ([#"borst.adb" 225 0 0] ());
   ([#"borst.adb" 226 0 0] ( [#"borst.adb" 226 0 0] assume { [#"borst.adb" 226 0 0] (Borst__mass___axiom.default_initial_assumption Borst__calcweight__total.total.int__content False) };
   [#"borst.adb" 226 0 0] assume { [#"borst.adb" 226 0 0] (Borst__mass___axiom.dynamic_invariant Borst__calcweight__total.total.int__content False False True True) } ));
   ();
   ( [@GP_Sloc:borst.adb:228:7] ([#"borst.adb" 228 0 0] (if (( ([#"borst.adb" 228 0 0] [#"borst.adb" 228 0 0] (([@branch_id=3839] Main.spark__branch).bool__content <- ( ((Borst__cartype__rep.to_rep(Borst__calcweight__car.car.Borst__carriage.__split_discrs.Borst__carriage.rec__borst__carriage__typtr)) = (0 : int)) )));
   ( [@branch_id=3839] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:borst.adb:229:10] ([#"borst.adb" 229 0 0] ()) );
    ( [@GP_Sloc:borst.adb:229:16] ([#"borst.adb" 229 0 0] [#"borst.adb" 229 0 0] (Borst__calcweight__total.total.int__content <- ( ([#"borst.adb" 229 0 0] ( [@GP_Shape:if__total_assign__typeconv__add] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 40) + Integer(car.Cargo));                                                                                      ^ borst.adb:229:86:VC_RANGE_CHECK] [@GP_Id:83] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:borst.adb:229:86] (Borst__mass.range_check_(([#"borst.adb" 229 0 0] ( [@GP_Shape:if__total_assign__typeconv__add] [@GP_Id:82] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 40) + Integer(car.Cargo));                                                                                      ^ borst.adb:229:86:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:229:86] (Standard__integer.range_check_((([#"borst.adb" 229 0 0] ( [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 40) + Integer(car.Cargo));                                                           ^ borst.adb:229:59:VC_OVERFLOW_CHECK] [@GP_Id:80] [@GP_Shape:if__total_assign__typeconv__add__add] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:229:59] (Standard__integer.range_check_((((190 : int) + Borst__calcweight__wat.wat) + ([#"borst.adb" 229 0 0] ( [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 40) + Integer(car.Cargo));                                                                                ^ borst.adb:229:80:VC_OVERFLOW_CHECK] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Id:79] [@GP_Shape:if__total_assign__typeconv__add__add__mult] [@GP_Sloc:borst.adb:229:80] (Standard__integer.range_check_(((Borst__numcarriages__rep.to_rep(Borst__calcweight__car.car.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) * (40 : int)))) ))))) )) + (Borst__freightweight__rep.to_rep(([#"borst.adb" 229 0 0] ( [@GP_Id:81] [@GP_Shape:if__total_assign__typeconv__add__typeconv__selectcomp] [@vc:annotation] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 40) + Integer(car.Cargo));                                                                                                   ^ borst.adb:229:99:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:229:99] (Borst__carriage.rec__borst__carriage__cargo_(Borst__calcweight__car.car)) ))))))) )))) )) ))) ) )) else (
    ( ();
    ( [@GP_Sloc:borst.adb:231:10] ([#"borst.adb" 231 0 0] ()) );
    ( [@GP_Sloc:borst.adb:231:16] ([#"borst.adb" 231 0 0] [#"borst.adb" 231 0 0] (Borst__calcweight__total.total.int__content <- ( ([#"borst.adb" 231 0 0] ( [@GP_Shape:if__total_assign__typeconv__add] [@GP_Id:89] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:borst.adb:231:86] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 60) + Integer(car.Voyagers * (70/1000)));                                                                                      ^ borst.adb:231:86:VC_RANGE_CHECK] (Borst__mass.range_check_(([#"borst.adb" 231 0 0] ( [@GP_Shape:if__total_assign__typeconv__add] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 60) + Integer(car.Voyagers * (70/1000)));                                                                                      ^ borst.adb:231:86:VC_OVERFLOW_CHECK] [@GP_Id:88] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:231:86] (Standard__integer.range_check_((([#"borst.adb" 231 0 0] ( [@GP_Id:85] [@GP_Shape:if__total_assign__typeconv__add__add] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 60) + Integer(car.Voyagers * (70/1000)));                                                           ^ borst.adb:231:59:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:231:59] (Standard__integer.range_check_((((190 : int) + Borst__calcweight__wat.wat) + ([#"borst.adb" 231 0 0] ( [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 60) + Integer(car.Voyagers * (70/1000)));                                                                                ^ borst.adb:231:80:VC_OVERFLOW_CHECK] [@GP_Id:84] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Sloc:borst.adb:231:80] [@GP_Shape:if__total_assign__typeconv__add__add__mult] (Standard__integer.range_check_(((Borst__numcarriages__rep.to_rep(Borst__calcweight__car.car.Borst__carriage.__split_fields.Borst__carriage.rec__borst__carriage__cars)) * (60 : int)))) ))))) )) + ([#"borst.adb" 231 0 0] ( [@GP_Id:87] [@GP_Shape:if__total_assign__typeconv__add__typeconv__mult] [@vc:annotation] [@GP_Sloc:borst.adb:231:109] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 60) + Integer(car.Voyagers * (70/1000)));                                                                                                             ^ borst.adb:231:109:VC_OVERFLOW_CHECK] (Borst__TpassengercountB.range_check_(((Borst__passengercount__rep.to_rep(([#"borst.adb" 231 0 0] ( [@GP_Id:86] [@vc:annotation] [@comment:         Total := Mass(Integer(Mass'First) + Integer(wat) + (Integer(car.Cars) * 60) + Integer(car.Voyagers * (70/1000)));                                                                                                   ^ borst.adb:231:99:VC_DISCRIMINANT_CHECK] [@GP_Reason:VC_DISCRIMINANT_CHECK] [@GP_Sloc:borst.adb:231:99] [@GP_Shape:if__total_assign__typeconv__add__typeconv__mult__selectcomp] (Borst__carriage.rec__borst__carriage__voyagers_(Borst__calcweight__car.car)) )))) * (0 : int)))) ))))) )))) )) ))) ) )))) );
   ( [@GP_Sloc:borst.adb:234:14] ([#"borst.adb" 234 0 0] ()) );
   ( [@GP_Sloc:borst.adb:234:7] ([#"borst.adb" 234 0 0] ( [#"borst.adb" 234 0 0] (borst__calcweight__result.int__content <- ( Borst__calcweight__total.total.int__content ));
   [#"borst.adb" 234 0 0] raise Return__exc )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (borst__calcweight__result.int__content <= (1700 : int)) in (
   ()))
   in () end ;
  borst__calcweight__result.int__content )
end
